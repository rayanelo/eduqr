{"version":3,"file":"static/js/785.480f7775.chunk.js","mappings":"iLAAA,MAAMA,EAAoBC,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,EAAiBJ,GAA2B,IAApBK,EAAY,UAAH,6CAAG,OACzC,MAAO,CACHC,MAAO,CACHC,EAAGP,EAAMK,EAAY,KACrBG,EAAGR,EAAMK,EAAY,MAGjC,CACA,MAAMI,EAAkBC,GACZV,GAAUD,EAAiBC,IAAUU,EAAQV,EAAOI,EAAiBJ,I,cCLjF,MAAMW,EAAyBC,GAAsB,IAAVA,ECJ3C,SAASC,EAAYC,EAAQC,EAAWL,GAAsC,IAA7BM,EAAU,UAAH,6CAAG,CAAEC,SAAS,GAElE,OADAH,EAAOI,iBAAiBH,EAAWL,EAASM,GACrC,IAAMF,EAAOK,oBAAoBJ,EAAWL,EACvD,CAsBA,SAASU,EAAYC,EAAKN,EAAWL,EAASM,IAC1CM,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAUF,EAAIG,QACpB,GAAId,GAAWa,EACX,OAAOV,EAAYU,EAASR,EAAWL,EAASM,EACpD,GACD,CAACK,EAAKN,EAAWL,EAASM,GACjC,CC/BA,SAASS,EAAgBX,EAAQC,EAAWL,EAASM,GACjD,OAAOH,EAAYC,EAAQC,EAAWN,EAAeC,GAAUM,EACnE,CACA,SAASU,EAAgBL,EAAKN,EAAWL,EAASM,GAC9C,OAAOI,EAAYC,EAAKN,EAAWL,GAAWD,EAAeC,GAAUM,EAC3E,CCDA,MAAMW,EAAmB,CAACC,EAAGC,IAAOC,GAAMD,EAAED,EAAEE,IACxCC,EAAO,sCAAIC,EAAY,yBAAZA,EAAY,uBAAKA,EAAaC,OAAON,EAAiB,ECRjEO,EAAW,CAACN,EAAGC,IAAMM,KAAKC,IAAIR,EAAIC,G,cCYxC,MAAMQ,EACFC,YAAYtC,EAAOuC,GAAuC,IAA7B,mBAAEC,GAAuB,UAAH,6CAAG,CAAC,EA0DnD,GAtDAC,KAAKC,WAAa,KAIlBD,KAAKE,cAAgB,KAIrBF,KAAKG,kBAAoB,KAIzBH,KAAKF,SAAW,CAAC,EACjBE,KAAKI,YAAc,KACf,IAAMJ,KAAKE,gBAAiBF,KAAKG,kBAC7B,OACJ,MAAME,EAAOC,EAAWN,KAAKG,kBAAmBH,KAAKO,SAC/CC,EAAmC,OAApBR,KAAKC,WAIpBQ,EDrClB,SAAoBtB,EAAGC,GAEnB,MAAMsB,EAASjB,EAASN,EAAErB,EAAGsB,EAAEtB,GACzB6C,EAASlB,EAASN,EAAEpB,EAAGqB,EAAErB,GAC/B,OAAO2B,KAAKkB,KAAKF,GAAU,EAAIC,GAAU,EAC7C,CCgC4CE,CAAWR,EAAKS,OAAQ,CAAEhD,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKyC,IAAiBC,EAClB,OACJ,MAAM,MAAE5C,GAAUwC,GACZ,UAAEU,GAAcC,EAAAA,EACtBhB,KAAKO,QAAQU,KAAK,IAAKpD,EAAOkD,cAC9B,MAAM,QAAEG,EAAO,OAAEC,GAAWnB,KAAKF,SAC5BU,IACDU,GAAWA,EAAQlB,KAAKE,cAAeG,GACvCL,KAAKC,WAAaD,KAAKE,eAE3BiB,GAAUA,EAAOnB,KAAKE,cAAeG,EAAK,EAE9CL,KAAKoB,kBAAoB,CAAC7D,EAAO8C,KAC7BL,KAAKE,cAAgB3C,EACrByC,KAAKG,kBAAoBkB,EAAehB,EAAML,KAAKD,oBAEnDuB,EAAAA,GAAAA,OAAYtB,KAAKI,aAAa,EAAK,EAEvCJ,KAAKuB,gBAAkB,CAAChE,EAAO8C,KAE3B,GADAL,KAAKwB,OACCxB,KAAKE,gBAAiBF,KAAKG,kBAC7B,OACJ,MAAM,MAAEsB,EAAK,aAAEC,GAAiB1B,KAAKF,SAC/B6B,EAAUrB,EAA0B,kBAAf/C,EAAMqE,KAC3B5B,KAAKG,kBACLkB,EAAehB,EAAML,KAAKD,oBAAqBC,KAAKO,SACtDP,KAAKC,YAAcwB,GACnBA,EAAMlE,EAAOoE,GAEjBD,GAAgBA,EAAanE,EAAOoE,EAAQ,GAG3CrE,EAAiBC,GAClB,OACJyC,KAAKF,SAAWA,EAChBE,KAAKD,mBAAqBA,EAC1B,MACM8B,EAAcR,EADP1D,EAAiBJ,GACWyC,KAAKD,qBACxC,MAAElC,GAAUgE,GACZ,UAAEd,GAAcC,EAAAA,EACtBhB,KAAKO,QAAU,CAAC,IAAK1C,EAAOkD,cAC5B,MAAM,eAAEe,GAAmBhC,EAC3BgC,GACIA,EAAevE,EAAO+C,EAAWuB,EAAa7B,KAAKO,UACvDP,KAAK+B,gBAAkBzC,EAAKN,EAAgBgD,OAAQ,cAAehC,KAAKoB,mBAAoBpC,EAAgBgD,OAAQ,YAAahC,KAAKuB,iBAAkBvC,EAAgBgD,OAAQ,gBAAiBhC,KAAKuB,iBAC1M,CACAU,eAAenC,GACXE,KAAKF,SAAWA,CACpB,CACA0B,MACIxB,KAAK+B,iBAAmB/B,KAAK+B,kBAC7BG,EAAAA,GAAAA,OAAkBlC,KAAKI,YAC3B,EAEJ,SAASiB,EAAehB,EAAMN,GAC1B,OAAOA,EAAqB,CAAElC,MAAOkC,EAAmBM,EAAKxC,QAAWwC,CAC5E,CACA,SAAS8B,EAAchD,EAAGC,GACtB,MAAO,CAAEtB,EAAGqB,EAAErB,EAAIsB,EAAEtB,EAAGC,EAAGoB,EAAEpB,EAAIqB,EAAErB,EACtC,CACA,SAASuC,EAAW,EAAWC,GAAS,IAApB,MAAE1C,GAAO,EACzB,MAAO,CACHA,QACAuE,MAAOD,EAActE,EAAOwE,EAAgB9B,IAC5CO,OAAQqB,EAActE,EAAOyE,EAAiB/B,IAC9CgC,SAAUC,EAAYjC,EAAS,IAEvC,CACA,SAAS+B,EAAiB/B,GACtB,OAAOA,EAAQ,EACnB,CACA,SAAS8B,EAAgB9B,GACrB,OAAOA,EAAQA,EAAQkC,OAAS,EACpC,CACA,SAASD,EAAYjC,EAASmC,GAC1B,GAAInC,EAAQkC,OAAS,EACjB,MAAO,CAAE3E,EAAG,EAAGC,EAAG,GAEtB,IAAI4E,EAAIpC,EAAQkC,OAAS,EACrBG,EAAmB,KACvB,MAAMC,EAAYR,EAAgB9B,GAClC,KAAOoC,GAAK,IACRC,EAAmBrC,EAAQoC,KACvBE,EAAU9B,UAAY6B,EAAiB7B,UACvC7C,EAAsBwE,MAG1BC,IAEJ,IAAKC,EACD,MAAO,CAAE9E,EAAG,EAAGC,EAAG,GAEtB,MAAM+E,GAAQD,EAAU9B,UAAY6B,EAAiB7B,WAAa,IAClE,GAAa,IAAT+B,EACA,MAAO,CAAEhF,EAAG,EAAGC,EAAG,GAEtB,MAAMgF,EAAkB,CACpBjF,GAAI+E,EAAU/E,EAAI8E,EAAiB9E,GAAKgF,EACxC/E,GAAI8E,EAAU9E,EAAI6E,EAAiB7E,GAAK+E,GAQ5C,OANIC,EAAgBjF,IAAMkF,MACtBD,EAAgBjF,EAAI,GAEpBiF,EAAgBhF,IAAMiF,MACtBD,EAAgBhF,EAAI,GAEjBgF,CACX,CClJA,SAASE,EAAWC,GAChB,IAAIC,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAOD,EACAE,EAEC,CAEpB,CACA,MAAMC,EAAuBJ,EAAW,kBAClCK,EAAqBL,EAAW,gBACtC,SAASM,EAAcC,GACnB,IAAIL,GAAO,EACX,GAAa,MAATK,EACAL,EAAOG,SAEN,GAAa,MAATE,EACLL,EAAOE,QAEN,CACD,MAAMI,EAAiBJ,IACjBK,EAAeJ,IACjBG,GAAkBC,EAClBP,EAAO,KACHM,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOP,CACX,CACA,SAASQ,IAGL,MAAMC,EAAkBL,GAAc,GACtC,OAAKK,IAELA,KACO,EACX,C,cCtCA,MAAMC,EAAW,CAACC,EAAMC,EAAIC,KACxB,MAAMC,EAAmBF,EAAKD,EAC9B,OAA4B,IAArBG,EAAyB,GAAKD,EAAQF,GAAQG,CAAgB,ECOnEC,EAAM,CAACJ,EAAMC,EAAIF,KAAcA,EAAWC,EAAOD,EAAWE,EAAKD,ECnBvE,SAASK,EAAWC,GAChB,OAAOA,EAAKC,IAAMD,EAAKE,GAC3B,CACA,SAASC,EAAOP,GAAuC,IAAhC3F,EAAS,UAAH,6CAAG,EAAGmG,EAAc,UAAH,6CAAG,IAC7C,OAAO9E,KAAKC,IAAIqE,EAAQ3F,IAAWmG,CACvC,CACA,SAASC,EAAcrC,EAAOsC,EAAQrG,GAAsB,IAAdsG,EAAS,UAAH,6CAAG,GACnDvC,EAAMuC,OAASA,EACfvC,EAAMwC,YAAcV,EAAIQ,EAAOJ,IAAKI,EAAOL,IAAKjC,EAAMuC,QACtDvC,EAAMyC,MAAQV,EAAW9F,GAAU8F,EAAWO,IAC1CH,EAAOnC,EAAMyC,MAAO,EAAG,OAAWC,MAAM1C,EAAMyC,UAC9CzC,EAAMyC,MAAQ,GAClBzC,EAAM2C,UACFb,EAAI7F,EAAOiG,IAAKjG,EAAOgG,IAAKjC,EAAMuC,QAAUvC,EAAMwC,aAClDL,EAAOnC,EAAM2C,YAAcD,MAAM1C,EAAM2C,cACvC3C,EAAM2C,UAAY,EAC1B,CACA,SAASC,EAAa5C,EAAOsC,EAAQrG,EAAQsG,GACzCF,EAAcrC,EAAMtE,EAAG4G,EAAO5G,EAAGO,EAAOP,EAAc,OAAX6G,QAA8B,IAAXA,OAAoB,EAASA,EAAOM,SAClGR,EAAcrC,EAAMrE,EAAG2G,EAAO3G,EAAGM,EAAON,EAAc,OAAX4G,QAA8B,IAAXA,OAAoB,EAASA,EAAOO,QACtG,CACA,SAASC,EAAiB9G,EAAQ+G,EAAUC,GACxChH,EAAOiG,IAAMe,EAAOf,IAAMc,EAASd,IACnCjG,EAAOgG,IAAMhG,EAAOiG,IAAMH,EAAWiB,EACzC,CAKA,SAASE,EAAyBjH,EAAQkH,EAAQF,GAC9ChH,EAAOiG,IAAMiB,EAAOjB,IAAMe,EAAOf,IACjCjG,EAAOgG,IAAMhG,EAAOiG,IAAMH,EAAWoB,EACzC,CACA,SAASC,EAAqBnH,EAAQkH,EAAQF,GAC1CC,EAAyBjH,EAAOP,EAAGyH,EAAOzH,EAAGuH,EAAOvH,GACpDwH,EAAyBjH,EAAON,EAAGwH,EAAOxH,EAAGsH,EAAOtH,EACxD,C,cCZA,SAAS0H,EAA4BrB,EAAME,EAAKD,GAC5C,MAAO,CACHC,SAAaoB,IAARpB,EAAoBF,EAAKE,IAAMA,OAAMoB,EAC1CrB,SAAaqB,IAARrB,EACCD,EAAKC,IAAMA,GAAOD,EAAKC,IAAMD,EAAKE,UAClCoB,EAEd,CAcA,SAASC,EAA4BC,EAAYC,GAC7C,IAAIvB,EAAMuB,EAAgBvB,IAAMsB,EAAWtB,IACvCD,EAAMwB,EAAgBxB,IAAMuB,EAAWvB,IAO3C,OAJIwB,EAAgBxB,IAAMwB,EAAgBvB,IACtCsB,EAAWvB,IAAMuB,EAAWtB,OAC3BA,EAAKD,GAAO,CAACA,EAAKC,IAEhB,CAAEA,MAAKD,MAClB,CAuCA,MAAMyB,EAAiB,IAgBvB,SAASC,EAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH5B,IAAK6B,EAAoBH,EAAaC,GACtC5B,IAAK8B,EAAoBH,EAAaE,GAE9C,CACA,SAASC,EAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,IAAIC,GACJ,SAAWA,GACPA,EAAuB,QAAI,UAC3BA,EAAqB,MAAI,aACzBA,EAAmB,IAAI,WACvBA,EAAoB,KAAI,YACxBA,EAAqB,MAAI,aACzBA,EAAsB,OAAI,cAC1BA,EAAoB,KAAI,MAC3B,CARD,CAQGA,IAAkBA,EAAgB,CAAC,ICTtC,SAASC,EAASC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASC,EAAwB,GAA+B,IAA/B,IAAEC,EAAG,KAAEC,EAAI,MAAEC,EAAK,OAAEC,GAAS,EAC1D,MAAO,CACH9I,EAAG,CAAEwG,IAAKoC,EAAMrC,IAAKsC,GACrB5I,EAAG,CAAEuG,IAAKmC,EAAKpC,IAAKuC,GAE5B,CCVA,SAASC,EAAgBhC,GACrB,YAAiBa,IAAVb,GAAiC,IAAVA,CAClC,CACA,SAASiC,EAAS,GAA2B,IAA3B,MAAEjC,EAAK,OAAEkC,EAAM,OAAEC,GAAQ,EACvC,OAASH,EAAgBhC,KACpBgC,EAAgBE,KAChBF,EAAgBG,EACzB,CACA,SAASC,EAAaC,GAClB,OAAQJ,EAASI,IACbC,EAAeD,IACfA,EAAOE,GACPF,EAAOG,QACPH,EAAOI,SACPJ,EAAOK,OACf,CACA,SAASJ,EAAeD,GACpB,OAAOM,EAAcN,EAAOpJ,IAAM0J,EAAcN,EAAOnJ,EAC3D,CACA,SAASyJ,EAAcxD,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASyD,GAAW5J,EAAOgH,EAAOD,GAG9B,OAAOA,EADQC,GADYhH,EAAQ+G,EAGvC,CAIA,SAAS8C,GAAgB7J,EAAOkH,EAAWF,EAAOD,EAAa+C,GAI3D,YAHiBjC,IAAbiC,IACA9J,EAAQ4J,GAAW5J,EAAO8J,EAAU/C,IAEjC6C,GAAW5J,EAAOgH,EAAOD,GAAeG,CACnD,CAIA,SAAS6C,GAAexD,GAAuD,IAAjDW,EAAY,UAAH,6CAAG,EAAGF,EAAQ,UAAH,6CAAG,EAAGD,EAAW,uCAAE+C,EAAQ,uCACzEvD,EAAKE,IAAMoD,GAAgBtD,EAAKE,IAAKS,EAAWF,EAAOD,EAAa+C,GACpEvD,EAAKC,IAAMqD,GAAgBtD,EAAKC,IAAKU,EAAWF,EAAOD,EAAa+C,EACxE,CAIA,SAASE,GAAcC,EAAK,GAAU,IAAV,EAAEhK,EAAC,EAAEC,GAAG,EAChC6J,GAAeE,EAAIhK,EAAGA,EAAEiH,UAAWjH,EAAE+G,MAAO/G,EAAE8G,aAC9CgD,GAAeE,EAAI/J,EAAGA,EAAEgH,UAAWhH,EAAE8G,MAAO9G,EAAE6G,YAClD,CAgDA,SAASmD,GAAclD,GACnB,OAAImD,OAAOC,UAAUpD,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASqD,GAAc9D,EAAM3E,GACzB2E,EAAKE,IAAMF,EAAKE,IAAM7E,EACtB2E,EAAKC,IAAMD,EAAKC,IAAM5E,CAC1B,CAMA,SAAS0I,GAAc/D,EAAMgE,EAAY,GAA4B,IAA3BC,EAAKC,EAAUC,GAAU,EAC/D,MAAMC,OAAuC9C,IAA1B0C,EAAWG,GAA2BH,EAAWG,GAAa,GAC3E3D,EAAcV,EAAIE,EAAKE,IAAKF,EAAKC,IAAKmE,GAE5CZ,GAAexD,EAAMgE,EAAWC,GAAMD,EAAWE,GAAW1D,EAAawD,EAAWvD,MACxF,CAIA,MAAM4D,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAab,EAAKc,GACvBT,GAAcL,EAAIhK,EAAG8K,EAAWH,IAChCN,GAAcL,EAAI/J,EAAG6K,EAAWF,GACpC,CC7GA,SAASG,GAAmBC,EAAUzH,GAClC,OAAOmF,EHeX,SAA4B3I,EAAOwD,GAC/B,IAAKA,EACD,OAAOxD,EACX,MAAMkL,EAAU1H,EAAe,CAAEvD,EAAGD,EAAM6I,KAAM3I,EAAGF,EAAM4I,MACnDuC,EAAc3H,EAAe,CAAEvD,EAAGD,EAAM8I,MAAO5I,EAAGF,EAAM+I,SAC9D,MAAO,CACHH,IAAKsC,EAAQhL,EACb2I,KAAMqC,EAAQjL,EACd8I,OAAQoC,EAAYjL,EACpB4I,MAAOqC,EAAYlL,EAE3B,CG1BmCmL,CAAmBH,EAASI,wBAAyB7H,GACxF,C,eCLA,MAAM8H,IACO,ECCPC,GAAgBC,GAAYC,GAAMA,GAAK,GAAMD,EAAO,EAAIC,GAAK,GAAK,EAAID,EAAO,GAAK,EAAIC,KAAO,ECA7FC,GAAiBF,GAAYC,GAAM,EAAID,EAAO,EAAIC,GCClDE,GAAUF,GAAMA,EAAIA,EACpBG,GAAUF,GAAcC,IACxBE,GAAYN,GAAaI,I,0BCC/B,MAAMG,GAAgB,CAAC/H,EAAMgI,IAAcvK,GAChCwK,SAASC,EAAAA,GAAAA,IAASzK,IAAM0K,GAAAA,GAAAA,KAAsB1K,IAAMA,EAAE2K,WAAWpI,IACnEgI,GAAYK,OAAOC,UAAUC,eAAeC,KAAK/K,EAAGuK,IAEvDS,GAAa,CAACC,EAAOC,EAAOC,IAAWnL,IACzC,KAAKyK,EAAAA,GAAAA,IAASzK,GACV,OAAOA,EACX,MAAOF,EAAGC,EAAGqL,EAAGC,GAASrL,EAAEsL,MAAMC,GAAAA,IACjC,MAAO,CACH,CAACN,GAAQO,WAAW1L,GACpB,CAACoL,GAAQM,WAAWzL,GACpB,CAACoL,GAAQK,WAAWJ,GACpBC,WAAiBhF,IAAVgF,EAAsBG,WAAWH,GAAS,EACpD,ECbCI,GAAU,IACTC,GAAAA,GACHnC,UAAYvJ,GAAMK,KAAKsL,MAHL3L,KAAM4L,EAAAA,EAAAA,GAAM,EAAG,IAAK5L,GAGT6L,CAAa7L,KAExC8L,GAAO,CACTC,KAAMzB,GAAc,MAAO,OAC3B0B,MAAOhB,GAAW,MAAO,QAAS,QAClCzB,UAAW,QAAC,IAAE0C,EAAG,MAAEC,EAAK,KAAEC,EAAMd,MAAOe,EAAU,GAAG,QAAK,QACrDX,GAAQlC,UAAU0C,GAClB,KACAR,GAAQlC,UAAU2C,GAClB,KACAT,GAAQlC,UAAU4C,GAClB,MACAE,EAAAA,GAAAA,IAAShB,GAAAA,GAAAA,UAAgBe,IACzB,GAAG,GCYX,MAAME,GAAM,CACRP,KAAMzB,GAAc,KACpB0B,MAhCJ,SAAkBhM,GACd,IAAIuM,EAAI,GACJC,EAAI,GACJzM,EAAI,GACJD,EAAI,GAmBR,OAjBIE,EAAEoD,OAAS,GACXmJ,EAAIvM,EAAEyM,UAAU,EAAG,GACnBD,EAAIxM,EAAEyM,UAAU,EAAG,GACnB1M,EAAIC,EAAEyM,UAAU,EAAG,GACnB3M,EAAIE,EAAEyM,UAAU,EAAG,KAInBF,EAAIvM,EAAEyM,UAAU,EAAG,GACnBD,EAAIxM,EAAEyM,UAAU,EAAG,GACnB1M,EAAIC,EAAEyM,UAAU,EAAG,GACnB3M,EAAIE,EAAEyM,UAAU,EAAG,GACnBF,GAAKA,EACLC,GAAKA,EACLzM,GAAKA,EACLD,GAAKA,GAEF,CACHmM,IAAKS,SAASH,EAAG,IACjBL,MAAOQ,SAASF,EAAG,IACnBL,KAAMO,SAAS3M,EAAG,IAClBsL,MAAOvL,EAAI4M,SAAS5M,EAAG,IAAM,IAAM,EAE3C,EAIIyJ,UAAWuC,GAAKvC,WC/BdoD,GAAO,CACTZ,KAAMzB,GAAc,MAAO,OAC3B0B,MAAOhB,GAAW,MAAO,aAAc,aACvCzB,UAAW,IAAwD,IAAvD,IAAEqD,EAAG,WAAEC,EAAU,UAAEC,EAAWzB,MAAOe,EAAU,GAAG,EAC1D,MAAQ,QACJ/L,KAAKsL,MAAMiB,GACX,KACAG,GAAAA,GAAAA,WAAkBV,EAAAA,GAAAA,IAASQ,IAC3B,KACAE,GAAAA,GAAAA,WAAkBV,EAAAA,GAAAA,IAASS,IAC3B,MACAT,EAAAA,GAAAA,IAAShB,GAAAA,GAAAA,UAAgBe,IACzB,GAAG,GCZTY,GAAQ,CACVjB,KAAO/L,GAAM8L,GAAKC,KAAK/L,IAAMsM,GAAIP,KAAK/L,IAAM2M,GAAKZ,KAAK/L,GACtDgM,MAAQhM,GACA8L,GAAKC,KAAK/L,GACH8L,GAAKE,MAAMhM,GAEb2M,GAAKZ,KAAK/L,GACR2M,GAAKX,MAAMhM,GAGXsM,GAAIN,MAAMhM,GAGzBuJ,UAAYvJ,IACDyK,EAAAA,GAAAA,IAASzK,GACVA,EACAA,EAAE8K,eAAe,OACbgB,GAAKvC,UAAUvJ,GACf2M,GAAKpD,UAAUvJ,ICtBjC,SAASiN,GAAShD,EAAGiD,EAAGC,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDlD,EAAc,GAATiD,EAAIjD,GAASkD,EACzBA,EAAI,GACGD,EACPC,EAAI,EAAI,EACDlD,GAAKiD,EAAIjD,IAAM,EAAI,EAAIkD,GAAK,EAChClD,CACX,CCHA,MAAMmD,GAAiB,CAAC3I,EAAMC,EAAI1E,KAC9B,MAAMqN,EAAW5I,EAAOA,EACxB,OAAOpE,KAAKkB,KAAKlB,KAAK2E,IAAI,EAAGhF,GAAK0E,EAAKA,EAAK2I,GAAYA,GAAU,EAEhEC,GAAa,CAAChB,GAAKR,GAAMa,IAE/B,SAASY,GAAOP,GACZ,MAAMzK,GAFYvC,EAEQgN,EAFFM,GAAWE,MAAMjL,GAASA,EAAKwJ,KAAK/L,MAA1CA,OAGlByN,EAAAA,EAAAA,GAAUjD,QAAQjI,GAAQ,IAAGyK,yEAC7B,IAAIU,EAAQnL,EAAKyJ,MAAMgB,GAKvB,OAJIzK,IAASoK,KAETe,EDRR,SAAoB,GAAuC,IAAvC,IAAEd,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEzB,GAAO,EACrDuB,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIb,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKU,EAGA,CACD,MAAMK,EAAIJ,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC5C,EAAI,EAAI6C,EAAYI,EAC1BjB,EAAMgB,GAAShD,EAAGiD,EAAGN,EAAM,EAAI,GAC/BV,EAAQe,GAAShD,EAAGiD,EAAGN,GACvBT,EAAOc,GAAShD,EAAGiD,EAAGN,EAAM,EAAI,EACpC,MAVIX,EAAMC,EAAQC,EAAOW,EAWzB,MAAO,CACHb,IAAK5L,KAAKsL,MAAY,IAANM,GAChBC,MAAO7L,KAAKsL,MAAc,IAARO,GAClBC,KAAM9L,KAAKsL,MAAa,IAAPQ,GACjBd,QAER,CCjBgBsC,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAACnJ,EAAMC,KACpB,MAAMmJ,EAAWN,GAAO9I,GAClBqJ,EAASP,GAAO7I,GAChBqJ,EAAU,IAAKF,GACrB,OAAQ7N,IACJ+N,EAAQ9B,IAAMmB,GAAeS,EAAS5B,IAAK6B,EAAO7B,IAAKjM,GACvD+N,EAAQ7B,MAAQkB,GAAeS,EAAS3B,MAAO4B,EAAO5B,MAAOlM,GAC7D+N,EAAQ5B,KAAOiB,GAAeS,EAAS1B,KAAM2B,EAAO3B,KAAMnM,GAC1D+N,EAAQ1C,MAAQxG,EAAIgJ,EAASxC,MAAOyC,EAAOzC,MAAOrL,GAC3C8L,GAAKvC,UAAUwE,GACzB,EChCCC,GAAa,OACbC,GAAc,OASpB,SAASC,GAAoBlO,GACR,kBAANA,IACPA,EAAK,GAAEA,KACX,MAAM6H,EAAS,GACf,IAAIsG,EAAY,EACZC,EAAa,EACjB,MAAMC,EAASrO,EAAEsL,MAAMgD,GAAAA,IACnBD,IACAF,EAAYE,EAAOjL,OAGnBpD,EAAIA,EAAEuO,QAAQD,GAAAA,GAAYN,IAC1BnG,EAAOjG,QAAQyM,EAAOG,IAAIxB,GAAMhB,SAEpC,MAAMyC,EAAUzO,EAAEsL,MAAMC,GAAAA,IAMxB,OALIkD,IACAL,EAAaK,EAAQrL,OACrBpD,EAAIA,EAAEuO,QAAQhD,GAAAA,GAAY0C,IAC1BpG,EAAOjG,QAAQ6M,EAAQD,IAAI9C,GAAAA,GAAAA,SAExB,CAAE7D,SAAQsG,YAAWC,aAAYM,UAAW1O,EACvD,CACA,SAASgM,GAAMhM,GACX,OAAOkO,GAAoBlO,GAAG6H,MAClC,CACA,SAAS8G,GAAkBtJ,GACvB,MAAM,OAAEwC,EAAM,UAAEsG,EAAS,UAAEO,GAAcR,GAAoB7I,GACvDuJ,EAAY/G,EAAOzE,OACzB,OAAQpD,IACJ,IAAI6O,EAASH,EACb,IAAK,IAAIpL,EAAI,EAAGA,EAAIsL,EAAWtL,IAC3BuL,EAASA,EAAON,QAAQjL,EAAI6K,EAAYH,GAAaC,GAAa3K,EAAI6K,EAChEnB,GAAMzD,UAAUvJ,EAAEsD,KAClB+I,EAAAA,GAAAA,IAASrM,EAAEsD,KAErB,OAAOuL,CAAM,CAErB,CACA,MAAMC,GAAwB9O,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAM+O,GAAU,CAAEhD,KApDlB,SAAc/L,GACV,IAAIgP,EAAIC,EACR,OAAQxJ,MAAMzF,KACVyK,EAAAA,GAAAA,IAASzK,MACwB,QAA9BgP,EAAKhP,EAAEsL,MAAMC,GAAAA,WAAgC,IAAPyD,OAAgB,EAASA,EAAG5L,SAAW,KAC3C,QAA9B6L,EAAKjP,EAAEsL,MAAMgD,GAAAA,WAAgC,IAAPW,OAAgB,EAASA,EAAG7L,SAAW,GAChF,CACZ,EA6CwB4I,SAAO2C,qBAAmBO,kBALlD,SAA2BlP,GACvB,MAAMmP,EAASnD,GAAMhM,GAErB,OADoB2O,GAAkB3O,EAC/BoP,CAAYD,EAAOX,IAAIM,IAClC,GClDA,SAASO,GAAS/J,EAAQtG,GACtB,MAAsB,kBAAXsG,EACCtF,GAAM6E,EAAIS,EAAQtG,EAAQgB,GAE7BgN,GAAMjB,KAAKzG,GACTsI,GAAStI,EAAQtG,GAGjBsQ,GAAWhK,EAAQtG,EAElC,CACA,MAAMuQ,GAAW,CAAC9K,EAAMC,KACpB,MAAMmK,EAAS,IAAIpK,GACbmK,EAAYC,EAAOzL,OACnBoM,EAAa/K,EAAK+J,KAAI,CAACiB,EAAUnM,IAAM+L,GAASI,EAAU/K,EAAGpB,MACnE,OAAQtD,IACJ,IAAK,IAAIsD,EAAI,EAAGA,EAAIsL,EAAWtL,IAC3BuL,EAAOvL,GAAKkM,EAAWlM,GAAGtD,GAE9B,OAAO6O,CAAM,CAChB,EAECa,GAAY,CAACpK,EAAQtG,KACvB,MAAM6P,EAAS,IAAKvJ,KAAWtG,GACzBwQ,EAAa,CAAC,EACpB,IAAK,MAAMxG,KAAO6F,OACMxI,IAAhBf,EAAO0D,SAAsC3C,IAAhBrH,EAAOgK,KACpCwG,EAAWxG,GAAOqG,GAAS/J,EAAO0D,GAAMhK,EAAOgK,KAGvD,OAAQhJ,IACJ,IAAK,MAAMgJ,KAAOwG,EACdX,EAAO7F,GAAOwG,EAAWxG,GAAKhJ,GAElC,OAAO6O,CAAM,CAChB,EAECS,GAAa,CAAChK,EAAQtG,KACxB,MAAM2Q,EAAWZ,GAAQJ,kBAAkB3P,GACrC4Q,EAAc1B,GAAoB5I,GAClCuK,EAAc3B,GAAoBlP,GAGxC,OAFuB4Q,EAAYzB,YAAc0B,EAAY1B,WACzDyB,EAAYxB,YAAcyB,EAAYzB,WAE/BnO,EAAKsP,GAASK,EAAY/H,OAAQgI,EAAYhI,QAAS8H,KAG9DG,EAAAA,EAAAA,IAAQ,EAAO,mBAAkBxK,WAAgBtG,6KACzCiL,GAAO,GAAEA,EAAI,EAAIjL,EAASsG,IACtC,EC/CEyK,GAAY,CAACtL,EAAMC,IAAQuF,GAAMpF,EAAIJ,EAAMC,EAAIuF,GAqBrD,SAAS+F,GAAanB,EAAQoB,EAAMC,GAChC,MAAMC,EAAS,GACTC,EAAeF,IArBJ,kBADOlQ,EAsB+B6O,EAAO,IApBnDkB,GAEW,kBAAN/P,EACRgN,GAAMjB,KAAK/L,GACJ4N,GAGA0B,GAGNe,MAAMC,QAAQtQ,GACZuP,GAEW,kBAANvP,EACL0P,GAEJK,IAlBX,IAA4B/P,EAuBxB,MAAMuQ,EAAY1B,EAAOzL,OAAS,EAClC,IAAK,IAAIE,EAAI,EAAGA,EAAIiN,EAAWjN,IAAK,CAChC,IAAIkN,EAAQJ,EAAavB,EAAOvL,GAAIuL,EAAOvL,EAAI,IAC/C,GAAI2M,EAAM,CACN,MAAMQ,EAAiBJ,MAAMC,QAAQL,GAAQA,EAAK3M,GAAK2M,EACvDO,EAAQvQ,EAAKwQ,EAAgBD,EACjC,CACAL,EAAOvO,KAAK4O,EAChB,CACA,OAAOL,CACX,CAoBA,SAASO,GAAYC,EAAO9B,GAAqD,IAA3CjD,MAAOgF,GAAU,EAAI,KAAEX,EAAI,MAAEO,GAAU,UAAH,6CAAG,CAAC,EAC1E,MAAMK,EAAcF,EAAMvN,QAC1BqK,EAAAA,EAAAA,GAAUoD,IAAgBhC,EAAOzL,OAAQ,yDACzCqK,EAAAA,EAAAA,IAAWwC,IAASI,MAAMC,QAAQL,IAASA,EAAK7M,SAAWyN,EAAc,EAAG,oIAExEF,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnBjC,EAAS,IAAIA,GAAQiC,WAEzB,MAAMX,EAASH,GAAanB,EAAQoB,EAAMO,GACpCD,EAAYJ,EAAO/M,OACnB2N,EAAgB/Q,IAClB,IAAIsD,EAAI,EACR,GAAIiN,EAAY,EACZ,KAAOjN,EAAIqN,EAAMvN,OAAS,KAClBpD,EAAI2Q,EAAMrN,EAAI,IADOA,KAKjC,MAAM0N,EAAkBxM,EAASmM,EAAMrN,GAAIqN,EAAMrN,EAAI,GAAItD,GACzD,OAAOmQ,EAAO7M,GAAG0N,EAAgB,EAErC,OAAOJ,EACA5Q,GAAM+Q,GAAanF,EAAAA,EAAAA,GAAM+E,EAAM,GAAIA,EAAME,EAAc,GAAI7Q,IAC5D+Q,CACV,CCxFA,MAAME,GAAQC,GAAQA,ECoBhBC,GAAa,CAAChE,EAAGiE,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMjE,GAAK,EAAMkE,EAAK,EAAMD,IAAOjE,EAAI,EAAMiE,GACrGjE,EAoBJ,SAASmE,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOT,GACX,MAAMU,EAAYC,GArBtB,SAAyBnT,EAAGoT,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA1O,EAAI,EACR,GACI0O,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWZ,GAAWa,EAAUT,EAAKE,GAAOhT,EACxCsT,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZ3R,KAAKC,IAAIyR,GAfO,QAgBnBzO,EAfuB,IAgB7B,OAAO0O,CACX,CAK6BC,CAAgBL,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQtE,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAIgE,GAAWQ,EAASxE,GAAIqE,EAAKE,EACxE,CC7CA,MAAMQ,GAAUjI,GAAM,EAAI5J,KAAK8R,IAAI9R,KAAK+R,KAAKnI,IACvCoI,GAAUnI,GAAcgI,IACxBI,GAAYvI,GAAasI,ICDzBE,GAAUjB,GAAY,IAAM,KAAM,IAAM,KACxCkB,GAAStI,GAAcqI,IACvBE,GAAY1I,GAAayI,ICEzBE,GAAe,CACjBC,OAAQ1B,GACR9G,OAAM,GACNE,UAAS,GACTD,QAAO,GACP8H,OAAM,GACNI,UAAS,GACTD,QAAO,GACPG,OAAM,GACNC,UAAS,GACTF,QAAO,GACPK,WCjBgB3I,IAAOA,GAAK,GAAK,EAAI,GAAMuI,GAAOvI,GAAK,IAAO,EAAI5J,KAAKwS,IAAI,GAAI,IAAM5I,EAAI,MDmBvF6I,GAA8BC,IAChC,GAAI1C,MAAMC,QAAQyC,GAAa,EAE3BtF,EAAAA,EAAAA,GAAgC,IAAtBsF,EAAW3P,OAAe,2DACpC,MAAO4P,EAAIC,EAAIC,EAAIC,GAAMJ,EACzB,OAAOzB,GAAY0B,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAfJ,IAEZtF,EAAAA,EAAAA,QAAuCpH,IAA7BqM,GAAaK,GAA4B,wBAAuBA,MACnEL,GAAaK,IAEjBA,CAAU,EEnBrB,SAASK,GAAU,GAAyE,IAAvEA,UAAWC,EAAc,KAAEpD,EAAO5F,GAAS,MAAEiJ,EAAK,SAAEC,EAAW,KAAM,EACtFF,EAAiB,IAAIA,GAKrB,MAAMG,EFeavD,IACZI,MAAMC,QAAQL,IAA4B,kBAAZA,EAAK,GEhBlBwD,CAAcxD,GAChCA,EAAKzB,IAAIsE,IACTA,GAA2B7C,GAK3ByD,EAAQ,CACVC,MAAM,EACNhP,MAAO0O,EAAe,IAKpBO,EAvBV,SAA8BnS,EAAQ8R,GAClC,OAAO9R,EAAO+M,KAAKqF,GAAMA,EAAIN,GACjC,CAqB0BO,CAGtBR,GAASA,EAAMlQ,SAAWiQ,EAAejQ,OACnCkQ,EA/BV,SAAuBzL,GACnB,MAAM+G,EAAY/G,EAAOzE,OACzB,OAAOyE,EAAO2G,KAAI,CAACuF,EAAQzQ,IAAY,IAANA,EAAUA,GAAKsL,EAAY,GAAK,GACrE,CA6BUoF,CAAcX,GAAiBE,GACrC,SAASU,IACL,OAAOvD,GAAYkD,EAAeP,EAAgB,CAC9CpD,KAAMI,MAAMC,QAAQkD,GACdA,GAvCK3L,EAwCSwL,EAxCDrJ,EAwCiBwJ,EAvCrC3L,EAAO2G,KAAI,IAAMxE,GAAUK,KAAW6J,OAAO,EAAGrM,EAAOzE,OAAS,MAD3E,IAAuByE,EAAQmC,CA0C3B,CACA,IAAI+G,EAAekD,IACnB,MAAO,CACHE,KAAOhH,IACHuG,EAAM/O,MAAQoM,EAAa5D,GAC3BuG,EAAMC,KAAOxG,GAAKoG,EACXG,GAEXU,WAAY,KACRf,EAAevC,UACfC,EAAekD,GAAoB,EAG/C,CCxDA,MAAMI,GAAU,KAKhB,SAASC,GAAW,GAA4D,IACxEC,EACAC,GAFY,SAAEjB,EAAW,IAAG,OAAEkB,EAAS,IAAI,SAAEvR,EAAW,EAAC,KAAEwR,EAAO,GAAI,GAG1E5E,EAAAA,EAAAA,GAAQyD,GAAYoB,IAAoB,8CACxC,IAAIC,EAAe,EAAIH,EAIvBG,GAAehJ,EAAAA,EAAAA,GAVA,IACA,EAS8BgJ,GAC7CrB,GAAW3H,EAAAA,EAAAA,GAbK,IACA,GAY2B2H,EAAW,KAClDqB,EAAe,GAIfL,EAAYM,IACR,MAAMC,EAAmBD,EAAeD,EAClC7R,EAAQ+R,EAAmBvB,EAC3BzT,EAAIgV,EAAmB5R,EACvBnD,EAAIgV,GAAgBF,EAAcD,GAClCxJ,EAAI/K,KAAK2U,KAAKjS,GACpB,OAAOsR,GAAWvU,EAAIC,EAAKqL,CAAC,EAEhCoJ,EAAcK,IACV,MACM9R,EADmB8R,EAAeD,EACPrB,EAC3B0B,EAAIlS,EAAQG,EAAWA,EACvBgS,EAAI7U,KAAKwS,IAAI+B,EAAc,GAAKvU,KAAKwS,IAAIgC,EAAc,GAAKtB,EAC5D4B,EAAI9U,KAAK2U,KAAKjS,GACdyJ,EAAIuI,GAAgB1U,KAAKwS,IAAIgC,EAAc,GAAID,GAErD,QADgBL,EAASM,GAAgBR,GAAU,GAAK,EAAI,KACzCY,EAAIC,GAAKC,GAAM3I,CAAC,IAOvC+H,EAAYM,GACExU,KAAK2U,KAAKH,EAAetB,KACxBsB,EAAe3R,GAAYqQ,EAAW,GAC1C,KAEXiB,EAAcK,GACAxU,KAAK2U,KAAKH,EAAetB,IACIA,EAAWA,GAAvCrQ,EAAW2R,KAI9B,MACMA,EAmBV,SAAyBN,EAAUC,EAAYY,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAI9R,EAAI,EAAGA,EAHG,GAGiBA,IAChC+R,GAAkBd,EAASc,GAAUb,EAAWa,GAEpD,OAAOA,CACX,CAzByBC,CAAgBf,EAAUC,EAD1B,EAAIjB,GAGzB,GADAA,GAAsB,IAClB9N,MAAMoP,GACN,MAAO,CACHU,UAAW,IACXC,QAAS,GACTjC,YAGH,CACD,MAAMgC,EAAYlV,KAAKwS,IAAIgC,EAAc,GAAKH,EAC9C,MAAO,CACHa,YACAC,QAAwB,EAAfZ,EAAmBvU,KAAKkB,KAAKmT,EAAOa,GAC7ChC,WAER,CACJ,CASA,SAASwB,GAAgBF,EAAcD,GACnC,OAAOC,EAAexU,KAAKkB,KAAK,EAAIqT,EAAeA,EACvD,C,cClFA,MAAMa,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAazW,EAAS0W,GAC3B,OAAOA,EAAKC,MAAM7M,QAAyB3C,IAAjBnH,EAAQ8J,IACtC,CA4BA,SAAS8M,GAAO,GAA4D,IAA5D,UAAE1C,EAAS,UAAE2C,EAAY,EAAC,UAAEC,EAAY,OAAS9W,GAAS,EAClEoG,EAAS8N,EAAU,GACnBpU,EAASoU,EAAUA,EAAUhQ,OAAS,GAK1C,MAAMsQ,EAAQ,CAAEC,MAAM,EAAOhP,MAAOW,IAC9B,UAAEiQ,EAAS,QAAEC,EAAO,KAAEd,EAAI,SAAExR,EAAQ,SAAEqQ,EAAQ,uBAAE0C,GAnC1D,SAA0B/W,GACtB,IAAIgX,EAAgB,CAChBhT,SAAU,EACVqS,UAAW,IACXC,QAAS,GACTd,KAAM,EACNuB,wBAAwB,KACrB/W,GAGP,IAAKyW,GAAazW,EAASwW,KACvBC,GAAazW,EAASuW,IAAe,CACrC,MAAMU,EAAU7B,GAAWpV,GAC3BgX,EAAgB,IACTA,KACAC,EACHjT,SAAU,EACVwR,KAAM,GAEVwB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CAasFE,CAAiBlX,GACnG,IAAImX,EAAgBC,GAChBC,EAAkBrT,GAAaA,EAAW,IAAQ,EACtD,MAAM0R,EAAeY,GAAW,EAAInV,KAAKkB,KAAKgU,EAAYb,IAC1D,SAAS8B,IACL,MAAMC,EAAezX,EAASsG,EACxBoR,EAAsBrW,KAAKkB,KAAKgU,EAAYb,GAAQ,IAQ1D,QAHkBrO,IAAd2P,IACAA,EAAY3V,KAAK4E,IAAI5E,KAAKC,IAAItB,EAASsG,GAAU,IAAK,KAEtDsP,EAAe,EAAG,CAClB,MAAM+B,EAAc5B,GAAgB2B,EAAqB9B,GAEzDyB,EAAiBlJ,IACb,MAAMoH,EAAWlU,KAAK2U,KAAKJ,EAAe8B,EAAsBvJ,GAChE,OAAQnO,EACJuV,IACOgC,EACC3B,EAAe8B,EAAsBD,GACrCE,EACAtW,KAAK8R,IAAIwE,EAAcxJ,GACvBsJ,EAAepW,KAAKuW,IAAID,EAAcxJ,GAAG,CAE7D,MACK,GAAqB,IAAjByH,EAELyB,EAAiBlJ,GAAMnO,EACnBqB,KAAK2U,KAAK0B,EAAsBvJ,IAC3BsJ,GACIF,EAAkBG,EAAsBD,GACrCtJ,OAEf,CAED,MAAM0J,EAAoBH,EAAsBrW,KAAKkB,KAAKqT,EAAeA,EAAe,GACxFyB,EAAiBlJ,IACb,MAAMoH,EAAWlU,KAAK2U,KAAKJ,EAAe8B,EAAsBvJ,GAE1D2J,EAAWzW,KAAK4E,IAAI4R,EAAoB1J,EAAG,KACjD,OAAQnO,EACHuV,IACKgC,EACE3B,EAAe8B,EAAsBD,GACrCpW,KAAK0W,KAAKD,GACVD,EACIJ,EACApW,KAAK2W,KAAKF,IAClBD,CAAiB,CAEjC,CACJ,CAEA,OADAL,IACO,CACHrC,KAAOhH,IACH,MAAMzN,EAAU2W,EAAclJ,GAC9B,GAAK8I,EAsBDvC,EAAMC,KAAOxG,GAAKoG,MAtBO,CACzB,IAAI7P,EAAkB6S,EACtB,GAAU,IAANpJ,EAMA,GAAIyH,EAAe,EAAG,CAClB,MAAMqC,EAAQ5W,KAAK2E,IAAI,EAAGmI,EAhFnB,GAiFPzJ,GAAkBwT,EAAAA,GAAAA,GAAkBxX,EAAU2W,EAAcY,GAAQ9J,EAAI8J,EAC5E,MAEIvT,EAAkB,EAG1B,MAAMyT,EAA2B9W,KAAKC,IAAIoD,IAAoBqS,EACxDqB,EAA+B/W,KAAKC,IAAItB,EAASU,IAAYsW,EACnEtC,EAAMC,KACFwD,GAA4BC,CACpC,CAKA,OADA1D,EAAM/O,MAAQ+O,EAAMC,KAAO3U,EAASU,EAC7BgU,CAAK,EAEhBU,WAAY,KACRmC,GAAmBA,GAClBjR,EAAQtG,GAAU,CAACA,EAAQsG,GAC5BkR,GAAc,EAG1B,CACAV,GAAOuB,mBAAqB,CAACvX,EAAGC,IAAmB,kBAAND,GAA+B,kBAANC,EACtE,MAAMuW,GAAQgB,GAAO,ECnIrB,MAAMC,GAAQ,CACVC,MCPJ,SAAe,GAMmF,IANnF,UAMfpE,EAAY,CAAC,GAAE,SAAElQ,EAAW,EAAC,MAAEuU,EAAQ,GAAG,aAAEC,EAAe,IAAG,UAAE1B,EAAY,GAAG,aAAE2B,GAAe,EAC5F,MAAMrS,EAAS8N,EAAU,GAKnBM,EAAQ,CAAEC,MAAM,EAAOhP,MAAOW,GACpC,IAAIsS,EAAYH,EAAQvU,EACxB,MAAM2U,EAAQvS,EAASsS,EACjB5Y,OAA0BqH,IAAjBsR,EAA6BE,EAAQF,EAAaE,GAOjE,OAFI7Y,IAAW6Y,IACXD,EAAY5Y,EAASsG,GAClB,CACH6O,KAAOhH,IACH,MAAMpK,GAAS6U,EAAYvX,KAAK2U,KAAK7H,EAAIuK,GAGzC,OAFAhE,EAAMC,OAAS5Q,EAAQiT,GAAajT,GAASiT,GAC7CtC,EAAM/O,MAAQ+O,EAAMC,KAAO3U,EAASA,EAAS+D,EACtC2Q,CAAK,EAEhBU,WAAY,OAEpB,EDvBIhB,UAAWA,GACX0E,MAAO1E,GACP0C,OAAMA,IAEV,SAASiC,GAAYC,EAASzE,GAAqB,IAAX0E,EAAQ,UAAH,6CAAG,EAC5C,OAAOD,EAAUzE,EAAW0E,CAChC,CASA,MAAMC,GAAaC,IACf,MAAMC,EAAgB,QAAC,MAAErV,GAAO,SAAKoV,EAAOpV,EAAM,EAClD,MAAO,CACHsV,MAAO,IAAMpW,EAAAA,GAAAA,OAAYmW,GAAe,GACxCE,KAAM,IAAMzV,EAAAA,GAAAA,OAAkBuV,GACjC,EAEL,SAASG,GAAQ,GAAqO,IAArO,SAAEhF,EAAQ,OAAEiF,EAASN,GAAS,QAAEF,EAAU,EAAGS,OAAQC,EAAY,EAAC,WAAEC,EAAa,OAAM,YAAEC,EAAc,EAAGxF,UAAWyF,EAAW,SAAEC,GAAW,EAAI,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,EAAQ,SAAEC,EAAQ,KAAE5W,EAAO,eAAgBrD,GAAS,EAChP,IAAI8P,EAAIC,EACR,MAAMmK,EAAiBpB,EACvB,IAAIqB,EAKAC,EAJAC,EAAc,EACdC,EAAmBjG,EACnBkG,GAAa,EACbC,GAAoB,EAExB,MAAMC,EAAWpC,GAAMsB,EAAYzV,OAAS,EAAI,YAAcb,IAAS6Q,GACjE9N,EAASuT,EAAY,GACrB7Z,EAAS6Z,EAAYA,EAAYzV,OAAS,GAChD,IAAIsQ,EAAQ,CAAEC,MAAM,EAAOhP,MAAOW,IACgB,QAA7C2J,GAAMD,EAAK2K,GAAUtC,0BAAuC,IAAPpI,OAAgB,EAASA,EAAGlE,KAAKiE,EAAI1J,EAAQtG,MACnGsa,EAAwB5I,GAAY,CAAC,EAAG,KAAM,CAACpL,EAAQtG,GAAS,CAC5D4M,OAAO,IAEXiN,EAAc,CAAC,EAAG,MAEtB,MAAMe,EAAYD,EAAS,IACpBza,EACHqU,WACAH,UAAWyF,IAEf,SAASJ,IACLc,IACmB,YAAfZ,GACAe,EAAoBH,EAAc,IAAM,EACxCvB,EA3CZ,SAAwBA,GAA4D,IAAnDzE,EAAW,UAAH,6CAAG,EAAG0E,EAAQ,UAAH,6CAAG,EACnD,OAD0E,UAAH,+CAGjE1E,GAAYyE,EAAUzE,GAAY0E,EADlCF,GAAYxE,GAAYyE,EAASzE,EAAU0E,EAErD,CAuCsB4B,CAAe7B,EAASwB,EAAkBZ,EAAac,KAGjE1B,EAAUD,GAAYC,EAASwB,EAAkBZ,GAC9B,WAAfD,GACAiB,EAAUxF,cAElBqF,GAAa,EACbP,GAAYA,GAChB,CAKA,SAASf,EAAOpV,GACP2W,IACD3W,GAASA,GACbiV,GAAWjV,EACN0W,IACD/F,EAAQkG,EAAUzF,KAAK9T,KAAK2E,IAAI,EAAGgT,IAC/BsB,IACA5F,EAAM/O,MAAQ2U,EAAsB5F,EAAM/O,QAC9C8U,EAAaC,EAAoBhG,EAAMC,KAAOqE,GAAW,GAE7DmB,GAAYA,EAASzF,EAAM/O,OACvB8U,IACoB,IAAhBF,IACAC,OACyBnT,IAArBmT,EAAiCA,EAAmBxB,GAExDuB,EAAcb,EApE9B,SAA+BV,EAASzE,EAAU0E,EAAOyB,GACrD,OAAOA,EAAoB1B,GAAWzE,EAAW0E,EAAQD,IAAYC,CACzE,CAmEgB6B,CAAsB9B,EAASwB,EAAkBZ,EAAac,IAAsBjB,KApB5FY,GAAkBA,EAAef,OACjCW,GAAcA,KAyBlB,CAOA,OADAH,IAJIC,GAAUA,IACVM,EAAiBb,EAAOL,GACxBkB,EAAehB,SAGZ,CACHC,KAAM,KACFU,GAAUA,IACVK,GAAkBA,EAAef,MAAM,EAiBvCyB,gBAAY5M,GACZ6K,EAAUoB,EACVjB,EAAOhL,EACX,EAMA6M,OAAS7M,IACL6K,EAAUoB,EACV,MAAMa,EAAmB1G,GAAgC,kBAAbA,EACtClT,KAAK2E,IAAe,GAAXuO,EAAgB,IACzB,GACN,IAAI2G,EAAgB,EAEpB,IADA/B,EAAO,GACA+B,GAAiB/M,GAAG,CACvB,MAAMgN,EAAYhN,EAAI+M,EACtB/B,EAAO9X,KAAK4E,IAAIkV,EAAWF,IAC3BC,GAAiBD,CACrB,CACA,OAAOvG,CAAK,EAGxB,CE7IA,MAAM0G,GAAsB,QAAEta,EAAGC,EAAGqL,EAAG6J,GAAE,QAAM,gBAAenV,MAAMC,MAAMqL,MAAM6J,IAAI,EAC9EoF,GAAuB,CACzB1H,OAAQ,SACR1C,KAAM,OACN9F,OAAQ,UACRC,QAAS,WACTC,UAAW,cACX6H,OAAQkI,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5C/H,QAAS+H,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1C5H,OAAQ4H,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChD7H,QAAS6H,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASE,GAAwBtQ,GAC7B,GAAKA,EAEL,OAAOqG,MAAMC,QAAQtG,GACfoQ,GAAoBpQ,GACpBqQ,GAAqBrQ,EAC/B,CCvBA,MAAMuQ,GAAe,CACjBC,MAAO,IAAM5P,OAAOE,eAAeC,KAAK0P,QAAQ5P,UAAW,YAEzD6P,GAAU,CAAC,EACXC,GAAW,CAAC,EAIlB,IAAK,MAAM3R,MAAOuR,GACdI,GAAS3R,IAAO,UACS3C,IAAjBqU,GAAQ1R,MACR0R,GAAQ1R,IAAOuR,GAAavR,OACzB0R,GAAQ1R,KCFvB,MAAM4R,GAAoB,IAAIC,IAAI,CAAC,YAOnC,SAASC,GAA2BnW,EAAOoW,EAAW,GAAsC,IAAtC,SAAE5B,EAAQ,WAAEF,KAAe/Z,GAAS,EAMtF,KAL+Byb,GAASH,SACpCI,GAAkBI,IAAID,KACrB7b,EAAQ0Z,aACc,WAAvB1Z,EAAQyZ,YACY,IAApBzZ,EAAQsW,SAER,OAAO,EACX,IAAI,UAAEpC,EAAS,SAAEG,EAAW,IAAG,QAAEyE,EAAU,EAAC,KAAE/H,GAAS/Q,EAIvD,GAAqB,WAAjBA,EAAQqD,UF7BgByH,EE6B6B9K,EAAQ+Q,OF3B7DI,MAAMC,QAAQtG,IACK,kBAAXA,GAAuBqQ,GAAqBrQ,IE0BgB,CAKpE,GAAI9K,EAAQuZ,SAAW9U,IACnB,OACJ,MAAMsX,EAAkB1C,GAAQ,IAAKrZ,EAAS8Y,QAAS,IACvD,IAAItE,EAAQ,CAAEC,MAAM,EAAOhP,MAAOyO,EAAU,IAC5C,MAAM8H,EAAwB,GAK9B,IAAI/N,EAAI,EACR,MAAQuG,EAAMC,MAAQxG,EAAI,KACtBuG,EAAQuH,EAAgBjB,OAAO7M,GAC/B+N,EAAsBtZ,KAAK8R,EAAM/O,OACjCwI,GA/BQ,GAiCZiG,EAAY8H,EACZ3H,EAAWpG,EAlCC,GAmCZ8C,EAAO,QACX,CFpDJ,IAAgCjG,EEqD5B,MAAM4P,ECnDV,SAAsBna,EAASsb,EAAW3H,GAAwF,IAA7E,MAAE6E,EAAQ,EAAC,SAAE1E,EAAQ,OAAEkF,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAE1I,EAAI,MAAEqD,GAAW,UAAH,6CAAG,CAAC,EAC3H,OAAO7T,EAAQ8Y,QAAQ,CAAE,CAACwC,GAAY3H,EAAW3R,OAAQ6R,GAAS,CAC9D2E,QACA1E,WACAvJ,OAAQsQ,GAAwBrK,GAChCkL,KAAM,OACNC,WAAY3C,EAAS,EACrB4C,UAA0B,YAAf1C,EAA2B,YAAc,UAE5D,CD0CsB2C,CAAa3W,EAAM4W,MAAM7b,QAASqb,EAAW3H,EAAW,IACnElU,EACH+Y,OAAQD,EACRzE,WASAtD,KAAMA,IAiBV,OAPA2J,EAAU4B,SAAW,KACjB7W,EAAM8W,IE5Ed,SAA0BrI,EAAW,GAAiC,IAAjC,OAAEqF,EAAM,WAAEE,EAAa,QAAQ,EAIhE,OAAOvF,EAHOqF,GAAyB,SAAfE,GAAyBF,EAAS,IAAM,EAC1D,EACArF,EAAUhQ,OAAS,EAE7B,CFuEkBsY,CAAiBtI,EAAWlU,IACtC+Z,GAAcA,GAAY,EAKvB,CACCc,kBACA,OAAOH,EAAUG,aAAe,CACpC,EACIA,gBAAY5M,GACZyM,EAAUG,YAAc5M,CAC5B,EACAmL,KAAM,KASF,MAAM,YAAEyB,GAAgBH,EACxB,GAAIG,EAAa,CACb,MAAMkB,EAAkB1C,GAAQ,IAAKrZ,EAAS4Z,UAAU,IACxDnU,EAAMgX,gBAAgBV,EAAgBjB,OAAOD,EArFzC,IAqFoEpV,MAAOsW,EAAgBjB,OAAOD,GAAapV,MArF/G,GAsFR,CACA1C,EAAAA,GAAAA,QAAY,IAAM2X,EAAUgC,UAAS,EAGjD,CGrGA,SAAS3D,GAAM/Q,EAAU2U,GACrB,MAAMxD,EAAQyD,YAAYC,MACpBC,EAAe,IAAmB,IAAlB,UAAEta,GAAW,EAC/B,MAAMsW,EAAUtW,EAAY2W,EACxBL,GAAW6D,IACXhZ,EAAAA,GAAAA,KAAgBmZ,GAChB9U,EAAS8Q,EAAU6D,GACvB,EAGJ,OADA5Z,EAAAA,GAAAA,KAAU+Z,GAAc,GACjB,IAAMnZ,EAAAA,GAAAA,KAAgBmZ,EACjC,CCdA,SAASC,GAAuB,GAA+C,IAA/C,UAAE7I,EAAS,QAAE4E,EAAO,SAAEmB,EAAQ,WAAEF,GAAa,EACzE,MAAMiD,EAAW,KACb/C,GAAYA,EAAS/F,EAAUA,EAAUhQ,OAAS,IAClD6V,GAAcA,GAAY,EAE9B,OAAOjB,EAAU,CAAEM,KAAML,GAAMiE,GAAWlE,IAAakE,GAC3D,CCJA,SAASC,GAAQ,GAAuL,IAAvL,UAAE/I,EAAS,SAAElQ,EAAW,EAAC,IAAE+B,EAAG,IAAED,EAAG,MAAEyS,EAAQ,GAAG,aAAEC,EAAe,IAAG,gBAAE0E,EAAkB,IAAG,cAAEC,EAAgB,GAAE,UAAErG,EAAY,EAAC,aAAE2B,EAAY,OAAEa,EAAM,SAAEW,EAAQ,WAAEF,EAAU,OAAED,GAAS,EAClM,MAAM1T,EAAS8N,EAAU,GACzB,IAAIkJ,EACJ,SAASC,EAAcvc,GACnB,YAAgBqG,IAARpB,GAAqBjF,EAAIiF,QAAiBoB,IAARrB,GAAqBhF,EAAIgF,CACvE,CACA,SAASwX,EAAoBxc,GACzB,YAAYqG,IAARpB,EACOD,OACCqB,IAARrB,GAEG3E,KAAKC,IAAI2E,EAAMjF,GAAKK,KAAKC,IAAI0E,EAAMhF,GAD/BiF,EAC0CD,CACzD,CACA,SAASyX,EAAevd,GACC,OAArBod,QAAkD,IAArBA,GAAuCA,EAAiBhE,OACrFgE,EAAmB/D,GAAQ,CACvBnF,UAAW,CAAC,EAAG,GACflQ,SAAU,KACPhE,EACHsZ,SACAW,SAAWnZ,IACP,IAAIgP,EACS,OAAbmK,QAAkC,IAAbA,GAA+BA,EAASnZ,GACjC,QAA3BgP,EAAK9P,EAAQia,gBAA6B,IAAPnK,GAAyBA,EAAGjE,KAAK7L,EAASc,EAAE,EAEpFiZ,aACAD,UAER,CACA,SAAS0D,EAAYxd,GACjBud,EAAe,CACXla,KAAM,SACNgT,UAAW6G,EACX5G,QAAS6G,EACTrG,eACG9W,GAEX,CACA,GAAIqd,EAAcjX,GAEdoX,EAAY,CACRxZ,WACAkQ,UAAW,CAAC9N,EAAQkX,EAAoBlX,UAG3C,CASD,IAAItG,EAASyY,EAAQvU,EAAWoC,EACJ,qBAAjBqS,IACP3Y,EAAS2Y,EAAa3Y,IAC1B,MAAM2d,EAAWH,EAAoBxd,GAC/B4d,EAAUD,IAAa1X,GAAO,EAAI,EACxC,IAAI4X,EACAnd,EACJ,MAAMod,EAAiB9c,IACnB6c,EAAOnd,EACPA,EAAUM,EACVkD,GAAWgU,EAAAA,GAAAA,GAAkBlX,EAAI6c,EAAMlb,EAAAA,EAAAA,QACtB,IAAZib,GAAiB5c,EAAI2c,IACR,IAAbC,GAAkB5c,EAAI2c,IACvBD,EAAY,CAAEtJ,UAAW,CAACpT,EAAG2c,GAAWzZ,YAC5C,EAEJuZ,EAAe,CACXla,KAAM,QACN6Q,UAAW,CAAC9N,EAAQ,GACpBpC,WACAwU,eACAD,QACAzB,YACA2B,eACAwB,SAAUoD,EAAcvd,GAAU8d,OAAgBzW,GAE1D,CACA,MAAO,CACHiS,KAAM,IAA2B,OAArBgE,QAAkD,IAArBA,OAA8B,EAASA,EAAiBhE,OAEzG,CCxFA,MAAMyE,GAAoB,KAAM,CAC5Bxa,KAAM,SACNgT,UAAW,IACXC,QAAS,GACTO,UAAW,KAETiH,GAA0Bhe,IAAM,CAClCuD,KAAM,SACNgT,UAAW,IACXC,QAAoB,IAAXxW,EAAe,EAAIqB,KAAKkB,KAAK,KAAO,GAC7CwU,UAAW,KAETkH,GAAc,KAAM,CACtB1a,KAAM,YACN0N,KAAM,SACNsD,SAAU,KAER2J,GAAsB,CACxB3a,KAAM,YACNgR,SAAU,IAER4J,GAAqB,CACvB1e,EAAGse,GACHre,EAAGqe,GACHhV,EAAGgV,GACH/U,OAAQ+U,GACR9U,QAAS8U,GACT7U,QAAS6U,GACTK,QAASL,GACTrV,OAAQsV,GACRrV,OAAQqV,GACRxX,MAAOwX,GACPK,QAASJ,GACTK,gBAAiBL,GACjBjQ,MAAOiQ,GACPM,QAASP,IAEPQ,GAAuB,CAACC,EAAU,KAAkB,IAAlB,UAAErK,GAAW,EACjD,GAAIA,EAAUhQ,OAAS,EACnB,OAAO8Z,GAIP,OADgBC,GAAmBM,IAAaN,GAAmBI,SACpDnK,EAAU,GAC7B,ECjCEsK,GAAe,CAAC1U,EAAKrE,IAEX,WAARqE,MAKiB,kBAAVrE,IAAsB0L,MAAMC,QAAQ3L,OAE1B,kBAAVA,IACPoK,GAAQhD,KAAKpH,IACZA,EAAMgG,WAAW,UChBpBgT,GAAc,IAAI9C,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS+C,GAAmB5d,GACxB,MAAO6D,EAAMc,GAAS3E,EAAE6d,MAAM,GAAI,GAAGC,MAAM,KAC3C,GAAa,gBAATja,EACA,OAAO7D,EACX,MAAO0L,GAAU/G,EAAM2G,MAAMC,GAAAA,KAAe,GAC5C,IAAKG,EACD,OAAO1L,EACX,MAAM+d,EAAOpZ,EAAM4J,QAAQ7C,EAAQ,IACnC,IAAIsS,EAAeL,GAAY3C,IAAInX,GAAQ,EAAI,EAG/C,OAFI6H,IAAW/G,IACXqZ,GAAgB,KACbna,EAAO,IAAMma,EAAeD,EAAO,GAC9C,CACA,MAAME,GAAgB,oBAChBC,GAAS,IACRnP,GACHG,kBAAoBlP,IAChB,MAAMme,EAAYne,EAAEsL,MAAM2S,IAC1B,OAAOE,EAAYA,EAAU3P,IAAIoP,IAAoBQ,KAAK,KAAOpe,CAAC,GClB1E,MAAMqe,GAAoB,I,QACnBC,EAEHtR,MAAK,GACLsQ,gBAAiBtQ,GACjBuR,aAAcvR,GACdmO,KAAMnO,GACNwR,OAAQxR,GAERyR,YAAazR,GACb0R,eAAgB1R,GAChB2R,iBAAkB3R,GAClB4R,kBAAmB5R,GACnB6R,gBAAiB7R,GACjBkR,OAAM,GACNY,aAAcZ,IAKZa,GAAuB/V,GAAQqV,GAAkBrV,GCvBvD,SAASkG,GAAkBlG,EAAKrE,GAC5B,IAAIqK,EACJ,IAAIgQ,EAAmBD,GAAoB/V,GAI3C,OAHIgW,IAAqBd,KACrBc,EAAmBjQ,IAE8B,QAA7CC,EAAKgQ,EAAiB9P,yBAAsC,IAAPF,OAAgB,EAASA,EAAGjE,KAAKiU,EAAkBra,EACpH,CCJA,SAASsa,GAAoB,GAA0I,IAA1I,KAAEC,EAAMjH,MAAOkH,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE7G,EAAM,WAAEE,EAAU,YAAEC,EAAW,KAAEnU,EAAI,QAAEuT,KAAYuH,GAAY,EACjK,QAAS3U,OAAOgL,KAAK2J,GAAYnc,MACrC,CACA,SAASoc,GAAO7a,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtB6G,WAAW7G,KACa,IAAxBA,EAAM8a,QAAQ,IAC1B,CACA,SAASC,GAAYC,GACjB,MAAoC,kBAAtBA,EACR,EACAzQ,GAAkB,GAAIyQ,EAChC,CACA,SAASC,GAAmBL,EAAYvW,GACpC,OAAOuW,EAAWvW,IAAQuW,EAAoB,SAAKA,CACvD,CCnBA,SAASM,GAAalb,EAAOoW,EAAW/b,EAAQugB,GAC5C,MAAMO,EAAqBpC,GAAa3C,EAAW/b,GACnD,IAAIsG,OAA6Be,IAApBkZ,EAAW9a,KAAqB8a,EAAW9a,KAAOE,EAAMob,MAmBrE,MAlBe,SAAXza,GAAqBwa,GAAwC,kBAAX9gB,EAKlDsG,EAAS4J,GAAkB6L,EAAW/b,GAEjCwgB,GAAOla,IAA6B,kBAAXtG,EAC9BsG,EAASoa,GAAY1gB,IAEfqR,MAAMC,QAAQtR,IACpBwgB,GAAOxgB,IACW,kBAAXsG,IACPtG,EAAS0gB,GAAYpa,IAKrB+K,MAAMC,QAAQtR,IAKI,OAAdA,EAAO,KACPA,EAAO,GAAKsG,GAETtG,GAGA,CAACsG,EAAQtG,EAExB,CC1BA,MAAMghB,GAA6B,SAACjF,EAAWpW,EAAO3F,GAA4B,IAApBugB,EAAa,UAAH,6CAAG,CAAC,EACxE,OAAQtG,IACJ,MAAMgH,EAAkBL,GAAmBL,EAAYxE,IAAc,CAAC,EAMhE9C,EAAQgI,EAAgBhI,OAASsH,EAAWtH,OAAS,EAK3D,IAAI,QAAED,EAAU,GAAMuH,EACtBvH,GAAoBnZ,EAAsBoZ,GAC1C,MAAM7E,EAAYyM,GAAalb,EAAOoW,EAAW/b,EAAQihB,GAMnDC,EAAiB9M,EAAU,GAC3B+M,EAAiB/M,EAAUA,EAAUhQ,OAAS,GAC9Cgd,EAAqB1C,GAAa3C,EAAWmF,GAC7CJ,EAAqBpC,GAAa3C,EAAWoF,IACnDrQ,EAAAA,EAAAA,GAAQsQ,IAAuBN,EAAqB,6BAA4B/E,WAAmBmF,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,iCACrQ,IAAIjhB,EAAU,CACVkU,YACAlQ,SAAUyB,EAAMxB,iBACb8c,EACHjI,UACAmB,SAAWnZ,IACP2E,EAAM8W,IAAIzb,GACVigB,EAAgB9G,UAAY8G,EAAgB9G,SAASnZ,EAAE,EAE3DiZ,WAAY,KACRA,IACAgH,EAAgBhH,YAAcgH,EAAgBhH,YAAY,GAGlE,IAAKmH,IACAN,GACDhW,KACyB,IAAzBmW,EAAgB1d,KAKhB,OAAO0Z,GAAuB/c,GAE7B,GAA6B,YAAzB+gB,EAAgB1d,KAKrB,OAAO4Z,GAAQjd,GAMd+f,GAAoBgB,KACrB/gB,EAAU,IACHA,KACAse,GAAqBzC,EAAW7b,KAQvCA,EAAQqU,WACRrU,EAAQqU,SAAW1U,EAAsBK,EAAQqU,WAEjDrU,EAAQ0Z,cACR1Z,EAAQ0Z,YAAc/Z,EAAsBK,EAAQ0Z,cAExD,MAAMyH,EAAgB1b,EAAM4W,MACtB9b,EAAU4gB,GAAiBA,EAAc3gB,QAI/C,GAAI2gB,GACA5gB,aAAmB6gB,eACC,OAAlBD,QAA4C,IAAlBA,OAA2B,EAASA,EAAcE,WAAWpH,UAAW,CACpG,MAAMqH,EAAuB1F,GAA2BnW,EAAOoW,EAAW7b,GAC1E,GAAIshB,EACA,OAAOA,CACf,CAIA,OAAOjI,GAAQrZ,EAAQ,CAE/B,ECzFMuhB,GAAsB,IAAIC,QAKhC,MAAMC,GACFngB,YAAY6f,GAIR1f,KAAKigB,eAAiB,KACtBjgB,KAAKkgB,YAAa,EAClBlgB,KAAKmgB,iBAAmB,KACxBngB,KAAK4E,YAAc,CAAE9G,EAAG,EAAGC,EAAG,GAI9BiC,KAAKogB,aAAc,EACnBpgB,KAAKqgB,uBAAwB,EAI7BrgB,KAAKsgB,QC7BW,CACpBxiB,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,ID+BjCrE,KAAK0f,cAAgBA,CACzB,CACAhI,MAAM6I,GAA4C,IAA/B,aAAEC,GAAe,GAAU,UAAH,6CAAG,CAAC,EAI3C,IAAqC,IAAjCxgB,KAAK0f,cAAce,UACnB,OAmFJzgB,KAAK0gB,WAAa,IAAI9gB,EAAW2gB,EAAa,CAC1Cze,eAnFoBvE,IAGpByC,KAAK2gB,gBACDH,GACAxgB,KAAKwgB,aAAa7iB,EAAiBJ,EAAO,QAAQM,MACtD,EA8EAqD,QA5EY,CAAC3D,EAAO8C,KACpB,IAAIgO,EAEJ,MAAM,KAAE7K,EAAI,gBAAEod,EAAe,YAAEC,GAAgB7gB,KAAK4f,aAChDpc,GAASod,IACL5gB,KAAKigB,gBACLjgB,KAAKigB,iBACTjgB,KAAKigB,eAAiB1c,EAAcC,GAE/BxD,KAAKigB,mBAGdjgB,KAAKkgB,YAAa,EAClBlgB,KAAKmgB,iBAAmB,KACxBngB,KAAK8gB,qBACD9gB,KAAK0f,cAAcqB,aACnB/gB,KAAK0f,cAAcqB,WAAWC,oBAAqB,EACnDhhB,KAAK0f,cAAcqB,WAAW1iB,YAASqH,GAK3CY,GAAUlC,IACN,IAAIiK,EAAIC,EACR,IAAIvP,EAAUiB,KAAKihB,mBAAmB7c,GAAMgb,OAAS,EAIrD,GAAIhT,GAAAA,GAAAA,KAAarN,GAAU,CACvB,MAAMmiB,EAA8G,QAA9F5S,EAA8C,QAAxCD,EAAKrO,KAAK0f,cAAcqB,kBAA+B,IAAP1S,OAAgB,EAASA,EAAG9I,cAA2B,IAAP+I,OAAgB,EAASA,EAAG6S,UAAU/c,GAClK,GAAI8c,EAAc,CAEdniB,EADeoF,EAAW+c,IACNrW,WAAW9L,GAAW,IAC9C,CACJ,CACAiB,KAAK4E,YAAYR,GAAQrF,CAAO,IAGpB,OAAhB8hB,QAAwC,IAAhBA,GAAkCA,EAAYtjB,EAAO8C,GAChC,QAA5CgO,EAAKrO,KAAK0f,cAAc0B,sBAAmC,IAAP/S,GAAyBA,EAAGgT,UAAUhb,EAAcib,MAAM,GAAK,EAsCpHngB,OApCW,CAAC5D,EAAO8C,KAEnB,MAAM,gBAAEugB,EAAe,kBAAEW,EAAiB,gBAAEC,EAAe,OAAEC,GAAYzhB,KAAK4f,WAE9E,IAAKgB,IAAoB5gB,KAAKigB,eAC1B,OACJ,MAAM,OAAEnf,GAAWT,EAEnB,GAAIkhB,GAA+C,OAA1BvhB,KAAKmgB,iBAM1B,OALAngB,KAAKmgB,iBA6UrB,SAA6Brf,GAA4B,IAApB4gB,EAAgB,UAAH,6CAAG,GAC7ChH,EAAY,KACZhb,KAAKC,IAAImB,EAAO/C,GAAK2jB,EACrBhH,EAAY,IAEPhb,KAAKC,IAAImB,EAAOhD,GAAK4jB,IAC1BhH,EAAY,KAEhB,OAAOA,CACX,CAtVwCiH,CAAoB7gB,QAEd,OAA1Bd,KAAKmgB,mBACe,OAApBqB,QAAgD,IAApBA,GAAsCA,EAAgBxhB,KAAKmgB,oBAK/FngB,KAAK4hB,WAAW,IAAKvhB,EAAKxC,MAAOiD,GACjCd,KAAK4hB,WAAW,IAAKvhB,EAAKxC,MAAOiD,GAOjCd,KAAK0f,cAAcmC,SAKR,OAAXJ,QAA8B,IAAXA,GAA6BA,EAAOlkB,EAAO8C,EAAK,EAOnEqB,aALiB,CAACnE,EAAO8C,IAASL,KAAK2X,KAAKpa,EAAO8C,IAMpD,CAAEN,mBAAoBC,KAAK0f,cAAcoC,yBAChD,CACAnK,KAAKpa,EAAO8C,GACR,MAAM6f,EAAalgB,KAAKkgB,WAExB,GADAlgB,KAAKib,UACAiF,EACD,OACJ,MAAM,SAAE3d,GAAalC,EACrBL,KAAK8b,eAAevZ,GACpB,MAAM,UAAEwf,GAAc/hB,KAAK4f,WACb,OAAdmC,QAAoC,IAAdA,GAAgCA,EAAUxkB,EAAO8C,EAC3E,CACA4a,SACI,IAAI5M,EAAIC,EACRtO,KAAKkgB,YAAa,EACdlgB,KAAK0f,cAAcqB,aACnB/gB,KAAK0f,cAAcqB,WAAWC,oBAAqB,GAE5B,QAA1B3S,EAAKrO,KAAK0gB,kBAA+B,IAAPrS,GAAyBA,EAAG7M,MAC/DxB,KAAK0gB,gBAAahb,EAClB,MAAM,gBAAEkb,GAAoB5gB,KAAK4f,YAC5BgB,GAAmB5gB,KAAKigB,iBACzBjgB,KAAKigB,iBACLjgB,KAAKigB,eAAiB,MAEmB,QAA5C3R,EAAKtO,KAAK0f,cAAc0B,sBAAmC,IAAP9S,GAAyBA,EAAG+S,UAAUhb,EAAcib,MAAM,EACnH,CACAM,WAAWxd,EAAM4d,EAAQlhB,GACrB,MAAM,KAAE0C,GAASxD,KAAK4f,WAEtB,IAAK9e,IAAWmhB,GAAW7d,EAAMZ,EAAMxD,KAAKmgB,kBACxC,OACJ,MAAM+B,EAAYliB,KAAKihB,mBAAmB7c,GAC1C,IAAIoP,EAAOxT,KAAK4E,YAAYR,GAAQtD,EAAOsD,GAEvCpE,KAAKogB,aAAepgB,KAAKogB,YAAYhc,KACrCoP,EhDlKZ,SAA0B3V,EAAO,EAAcyiB,GAAS,IAAvB,IAAEhc,EAAG,IAAED,GAAK,EASzC,YARYqB,IAARpB,GAAqBzG,EAAQyG,EAE7BzG,EAAQyiB,EAAUpc,EAAII,EAAKzG,EAAOyiB,EAAQhc,KAAO5E,KAAK2E,IAAIxG,EAAOyG,QAEpDoB,IAARrB,GAAqBxG,EAAQwG,IAElCxG,EAAQyiB,EAAUpc,EAAIG,EAAKxG,EAAOyiB,EAAQjc,KAAO3E,KAAK4E,IAAIzG,EAAOwG,IAE9DxG,CACX,CgDwJmBskB,CAAiB3O,EAAMxT,KAAKogB,YAAYhc,GAAOpE,KAAKsgB,QAAQlc,KAEvE8d,EAAUpH,IAAItH,EAClB,CACAsN,qBACI,MAAM,gBAAEsB,EAAe,YAAEpc,GAAgBhG,KAAK4f,YACxC,OAAEra,GAAWvF,KAAK0f,cAAcqB,YAAc,CAAC,EAC/CsB,EAAkBriB,KAAKogB,YACzBgC,IAAmBE,EAAAA,EAAAA,GAAYF,GAC1BpiB,KAAKogB,cACNpgB,KAAKogB,YAAcpgB,KAAKuiB,yBAKxBviB,KAAKogB,eADLgC,IAAmB7c,IhDpJnC,SAAiC4b,EAAW,GAA8B,IAA9B,IAAE1a,EAAG,KAAEC,EAAI,OAAEE,EAAM,MAAED,GAAO,EACpE,MAAO,CACH7I,EAAG2H,EAA4B0b,EAAUrjB,EAAG4I,EAAMC,GAClD5I,EAAG0H,EAA4B0b,EAAUpjB,EAAG0I,EAAKG,GAEzD,CgDgJmC4b,CAAwBjd,EAAO4b,UAAWiB,GAMrEpiB,KAAKsgB,QhD7Fb,WAA0D,IAA9Bta,EAAc,UAAH,6CAAGF,EAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,GAEX,CACHhI,EAAGiI,EAAmBC,EAAa,OAAQ,SAC3CjI,EAAGgI,EAAmBC,EAAa,MAAO,UAElD,CgDkFuByc,CAAmBzc,GAK9Bqc,IAAoBriB,KAAKogB,aACzB7a,GACAvF,KAAKogB,cACJpgB,KAAKqgB,uBACN/Z,GAAUlC,IACFpE,KAAKihB,mBAAmB7c,KACxBpE,KAAKogB,YAAYhc,GhDtHrC,SAA+BmB,EAAQ6a,GACnC,MAAMsC,EAAsB,CAAC,EAO7B,YANwBhd,IAApB0a,EAAY9b,MACZoe,EAAoBpe,IAAM8b,EAAY9b,IAAMiB,EAAOjB,UAE/BoB,IAApB0a,EAAY/b,MACZqe,EAAoBre,IAAM+b,EAAY/b,IAAMkB,EAAOjB,KAEhDoe,CACX,CgD6G6CC,CAAsBpd,EAAO4b,UAAU/c,GAAOpE,KAAKogB,YAAYhc,IAC5F,GAGZ,CACAme,wBACI,MAAQH,gBAAiBhC,EAAW,yBAAEwC,GAA6B5iB,KAAK4f,WACxE,IAAKQ,KAAgBkC,EAAAA,EAAAA,GAAYlC,GAC7B,OAAO,EACX,MAAMyC,EAAqBzC,EAAYrhB,SACvC+N,EAAAA,EAAAA,GAAiC,OAAvB+V,EAA6B,0GACvC,MAAM,WAAE9B,GAAe/gB,KAAK0f,cAE5B,IAAKqB,IAAeA,EAAWxb,OAC3B,OAAO,EACX,MAAMud,E1CrNd,SAAwBhkB,EAASikB,EAAoBhjB,GACjD,MAAMijB,EAAcna,GAAmB/J,EAASiB,IAC1C,OAAEkjB,GAAWF,EAKnB,OAJIE,IACA/a,GAAc8a,EAAYllB,EAAGmlB,EAAOniB,OAAOhD,GAC3CoK,GAAc8a,EAAYjlB,EAAGklB,EAAOniB,OAAO/C,IAExCilB,CACX,C0C6M+BE,CAAeL,EAAoB9B,EAAWoC,KAAMnjB,KAAK0f,cAAcoC,yBAC9F,IAAIsB,EhD/JZ,SAAiCjC,EAAW2B,GACxC,MAAO,CACHhlB,EAAG6H,EAA4Bwb,EAAUrjB,EAAGglB,EAAehlB,GAC3DC,EAAG4H,EAA4Bwb,EAAUpjB,EAAG+kB,EAAe/kB,GAEnE,CgD0JkCslB,CAAwBtC,EAAWxb,OAAO4b,UAAW2B,GAK/E,GAAIF,EAA0B,CAC1B,MAAMU,EAAkBV,E7CvNpC,SAAiC,GAAU,IAAV,EAAE9kB,EAAC,EAAEC,GAAG,EACrC,MAAO,CAAE0I,IAAK1I,EAAEuG,IAAKqC,MAAO7I,EAAEuG,IAAKuC,OAAQ7I,EAAEsG,IAAKqC,KAAM5I,EAAEwG,IAC9D,C6CqN6Dif,CAAwBH,IACzEpjB,KAAKqgB,wBAA0BiD,EAC3BA,IACAF,EAAsB5c,EAAwB8c,GAEtD,CACA,OAAOF,CACX,CACAtH,eAAevZ,GACX,MAAM,KAAEiB,EAAI,aAAEggB,EAAY,YAAExd,EAAW,eAAEyd,EAAc,iBAAEC,EAAgB,oBAAEC,GAAyB3jB,KAAK4f,WACnGQ,EAAcpgB,KAAKogB,aAAe,CAAC,EACnCwD,EAAqBtd,GAAUlC,IACjC,IAAK6d,GAAW7d,EAAMZ,EAAMxD,KAAKmgB,kBAC7B,OAEJ,IAAIvB,GAA8B,OAAhBwB,QAAwC,IAAhBA,OAAyB,EAASA,EAAYhc,KAAU,CAAC,EAC/Fsf,IACA9E,EAAa,CAAEta,IAAK,EAAGD,IAAK,IAOhC,MAAMoX,EAAkBzV,EAAc,IAAM,IACtC0V,EAAgB1V,EAAc,GAAK,IACnCwV,EAAU,CACZ5Z,KAAM,UACNW,SAAUihB,EAAejhB,EAAS6B,GAAQ,EAC1CqX,kBACAC,gBACA3E,aAAc,IACd1B,UAAW,EACXD,UAAW,MACRqO,KACA7E,GAKP,OAAO5e,KAAK6jB,wBAAwBzf,EAAMoX,EAAQ,IAGtD,OAAOsI,QAAQC,IAAIH,GAAoBI,KAAKL,EAChD,CACAE,wBAAwBzf,EAAMwa,GAC1B,MAAMsD,EAAYliB,KAAKihB,mBAAmB7c,GAC1C,OAAO8d,EAAUxK,MAAM2H,GAA2Bjb,EAAM8d,EAAW,EAAGtD,GAC1E,CACA+B,gBACIra,GAAUlC,GAASpE,KAAKihB,mBAAmB7c,GAAMuT,QACrD,CAOAsJ,mBAAmB7c,GACf,IAAIiK,EACJ,MAAM4V,EAAU,QAAU7f,EAAK8f,cACzBC,EAAsBnkB,KAAK0f,cAAcE,WAAWqE,GAC1D,OAAOE,GAEDnkB,KAAK0f,cAAc0E,SAAShgB,GAAwD,QAAhDiK,EAAKrO,KAAK0f,cAAcE,WAAWyE,eAA4B,IAAPhW,OAAgB,EAASA,EAAGjK,KAAU,EAC5I,CACAoc,aAAa3iB,GACTyI,GAAUlC,IACN,MAAM,KAAEZ,GAASxD,KAAK4f,WAEtB,IAAKqC,GAAW7d,EAAMZ,EAAMxD,KAAKmgB,kBAC7B,OACJ,MAAM,WAAEY,GAAe/gB,KAAK0f,cACtBwC,EAAYliB,KAAKihB,mBAAmB7c,GAC1C,GAAI2c,GAAcA,EAAWxb,OAAQ,CACjC,MAAM,IAAEjB,EAAG,IAAED,GAAQ0c,EAAWxb,OAAO4b,UAAU/c,GACjD8d,EAAUpH,IAAIjd,EAAMuG,GAAQF,EAAII,EAAKD,EAAK,IAC9C,IAER,CAMAigB,iCACI,IAAIjW,EACJ,IAAKrO,KAAK0f,cAAc3gB,QACpB,OACJ,MAAM,KAAEyE,EAAI,gBAAE4e,GAAoBpiB,KAAK4f,YACjC,WAAEmB,GAAe/gB,KAAK0f,cAC5B,KAAK4C,EAAAA,EAAAA,GAAYF,KAAqBrB,IAAe/gB,KAAKogB,YACtD,OAKJpgB,KAAK2gB,gBAKL,MAAM4D,EAAc,CAAEzmB,EAAG,EAAGC,EAAG,GAC/BuI,GAAUlC,IACN,MAAM8d,EAAYliB,KAAKihB,mBAAmB7c,GAC1C,GAAI8d,EAAW,CACX,MAAMsC,EAAStC,EAAU9C,MACzBmF,EAAYngB,GhDtQ5B,SAAoBM,EAAQrG,GACxB,IAAIsG,EAAS,GACb,MAAM8f,EAAetgB,EAAWO,GAC1BggB,EAAevgB,EAAW9F,GAOhC,OANIqmB,EAAeD,EACf9f,EAASd,EAASxF,EAAOiG,IAAKjG,EAAOgG,IAAMogB,EAAc/f,EAAOJ,KAE3DmgB,EAAeC,IACpB/f,EAASd,EAASa,EAAOJ,IAAKI,EAAOL,IAAMqgB,EAAcrmB,EAAOiG,OAE7D2G,EAAAA,EAAAA,GAAM,EAAG,EAAGtG,EACvB,CgD2PoCggB,CAAW,CAAErgB,IAAKkgB,EAAQngB,IAAKmgB,GAAUxkB,KAAKogB,YAAYhc,GAClF,KAKJ,MAAM,kBAAEwgB,GAAsB5kB,KAAK0f,cAAcE,WACjD5f,KAAK0f,cAAc3gB,QAAQ8lB,MAAMjc,UAAYgc,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACqB,QAA1BvW,EAAK0S,EAAWoC,YAAyB,IAAP9U,GAAyBA,EAAGyW,eAC/D/D,EAAWgE,eACX/kB,KAAK8gB,qBAKLxa,GAAUlC,IACN,IAAK6d,GAAW7d,EAAMZ,EAAM,MACxB,OAIJ,MAAM0e,EAAYliB,KAAKihB,mBAAmB7c,IACpC,IAAEE,EAAG,IAAED,GAAQrE,KAAKogB,YAAYhc,GACtC8d,EAAUpH,IAAI5W,EAAII,EAAKD,EAAKkgB,EAAYngB,IAAO,GAEvD,CACA4gB,eACI,IAAI3W,EACJ,IAAKrO,KAAK0f,cAAc3gB,QACpB,OACJ+gB,GAAoBhF,IAAI9a,KAAK0f,cAAe1f,MAC5C,MAIMilB,EAAsBjmB,EAJZgB,KAAK0f,cAAc3gB,QAIkB,eAAgBxB,IACjE,MAAM,KAAEiG,EAAI,aAAE0hB,GAAe,GAASllB,KAAK4f,WAC3Cpc,GAAQ0hB,GAAgBllB,KAAK0X,MAAMna,EAAM,IAEvC4nB,EAAyB,KAC3B,MAAM,gBAAE/C,GAAoBpiB,KAAK4f,YAC7B0C,EAAAA,EAAAA,GAAYF,KACZpiB,KAAKogB,YAAcpgB,KAAKuiB,wBAC5B,GAEE,WAAExB,GAAe/gB,KAAK0f,cACtB0F,EAA4BrE,EAAWtiB,iBAAiB,UAAW0mB,GACrEpE,IAAeA,EAAWxb,SACC,QAA1B8I,EAAK0S,EAAWoC,YAAyB,IAAP9U,GAAyBA,EAAGyW,eAC/D/D,EAAWgE,gBAEfI,IAKA,MAAME,EAAqBjnB,EAAY4D,OAAQ,UAAU,IAAMhC,KAAKskB,mCAK9DgB,EAA2BvE,EAAWtiB,iBAAiB,aAAc,IAAiC,IAAhC,MAAE2D,EAAK,iBAAEmjB,GAAkB,EAC/FvlB,KAAKkgB,YAAcqF,IACnBjf,GAAUlC,IACN,MAAMohB,EAAcxlB,KAAKihB,mBAAmB7c,GACvCohB,IAELxlB,KAAK4E,YAAYR,IAAShC,EAAMgC,GAAMW,UACtCygB,EAAY1K,IAAI0K,EAAYpG,MAAQhd,EAAMgC,GAAMW,WAAU,IAE9D/E,KAAK0f,cAAcmC,SACvB,IAEJ,MAAO,KACHwD,IACAJ,IACAG,IAC6B,OAA7BE,QAAkE,IAA7BA,GAA+CA,GAA0B,CAEtH,CACA1F,WACI,MAAM6F,EAAQzlB,KAAK0f,cAAcE,YAC3B,KAAEpc,GAAO,EAAK,kBAAE+d,GAAoB,EAAK,gBAAEX,GAAkB,EAAK,gBAAEwB,GAAkB,EAAK,YAAEpc,EAAcF,EAAc,aAAE0d,GAAe,GAAUiC,EAC1J,MAAO,IACAA,EACHjiB,OACA+d,oBACAX,kBACAwB,kBACApc,cACAwd,eAER,EAEJ,SAASvB,GAAWvH,EAAWlX,EAAM2c,GACjC,QAAkB,IAAT3c,GAAiBA,IAASkX,KACT,OAArByF,GAA6BA,IAAqBzF,EAC3D,C,8BE9aA,SAASgL,GAAiBnf,GACtB,OAAO1H,EAAAA,EAAAA,YAAU,IAAM,IAAM0H,KAAY,GAC7C,CCJA,MAAMof,GAA2BC,GAAUH,IACvCG,EAAKH,GACE,MCELjiB,GAAO,CACTqiB,IAAKF,ICaT,SAAuB,GAAoE,IAApE,MAAEG,EAAK,WAAEC,EAAU,SAAEC,EAAQ,kBAAEC,EAAiB,cAAEvG,GAAgB,EACrF,MAAMwG,EAAeJ,GAASC,GAAcC,GAAYC,EAClDvF,GAAayF,EAAAA,EAAAA,QAAO,OACpB,mBAAEpmB,IAAuBqmB,EAAAA,EAAAA,YAAWC,GAAAA,GACpCvmB,EAAW,CACbgC,eAAgBmkB,EAChB/kB,QAAS6kB,EACT5kB,OAAQ2kB,EACRrkB,MAAO,CAAClE,EAAO8C,KACXqgB,EAAW3hB,QAAU,KACrBinB,GAAYA,EAASzoB,EAAO8C,EAAK,IAGzCxB,EAAAA,EAAAA,YAAU,KACqB,OAAvB6hB,EAAW3hB,SACX2hB,EAAW3hB,QAAQkD,eAAenC,EACtC,IAOJb,EAAgBygB,EAAe,cAAewG,GAL9C,SAAuB3oB,GACnBmjB,EAAW3hB,QAAU,IAAIa,EAAWrC,EAAOuC,EAAU,CACjDC,sBAER,GAEA2lB,IAAiB,IAAMhF,EAAW3hB,SAAW2hB,EAAW3hB,QAAQyC,OACpE,IDrCIgC,KAAMmiB,IEGV,SAAiBF,GACb,MAAQa,aAAcC,EAAiB,cAAE7G,GAAkB+F,EACrDa,GAAeE,EAAAA,GAAAA,IAAY,IAAM,IAAIxG,GAA0BN,MAGrE7gB,EAAAA,EAAAA,YAAU,IAAM0nB,GAAqBA,EAAkBE,UAAUH,IAAe,CAACA,EAAcC,KAE/F1nB,EAAAA,EAAAA,YAAU,IAAMynB,EAAatB,gBAAgB,CAACsB,GAClD,K,cCSA,SAASI,KACL,MAAMC,GAAUP,EAAAA,EAAAA,YAAWQ,GAAAA,GAC3B,GAAgB,OAAZD,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAElG,EAAS,eAAEoG,EAAc,SAAEC,GAAaH,EAI1CI,GAAKC,EAAAA,EAAAA,UACXnoB,EAAAA,EAAAA,YAAU,IAAMioB,EAASC,IAAK,IAE9B,OAAQtG,GAAaoG,EAAiB,EAAC,EADlB,IAAMA,GAAkBA,EAAeE,IACE,EAAC,EACnE,C,qCCpCA,SAASE,GAAgBC,EAAQ9iB,GAC7B,OAAIA,EAAKC,MAAQD,EAAKE,IACX,EACH4iB,GAAU9iB,EAAKC,IAAMD,EAAKE,KAAQ,GAC9C,CAQA,MAAM6iB,GAAsB,CACxBC,QAAS,CAAC5C,EAAQ6C,KACd,IAAKA,EAAKhpB,OACN,OAAOmmB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI8C,GAAAA,GAAAA,KAAQ9C,GAIR,OAAOA,EAHPA,EAAS3Z,WAAW2Z,EAK5B,CAOA,MAAQ,GAFEyC,GAAgBzC,EAAQ6C,EAAKhpB,OAAOP,OACpCmpB,GAAgBzC,EAAQ6C,EAAKhpB,OAAON,KAC1B,GClC5B,SAASwpB,GAAcvjB,GACnB,MAAwB,kBAAVA,GAAsBA,EAAMgG,WAAW,SACzD,CAUA,MAAMwd,GAAmB,uDACzB,SAASC,GAAiB1oB,GACtB,MAAM4L,EAAQ6c,GAAiBE,KAAK3oB,GACpC,IAAK4L,EACD,MAAO,CAAC,GACZ,MAAO,CAAEgd,EAAOC,GAAYjd,EAC5B,MAAO,CAACgd,EAAOC,EACnB,CAEA,SAASC,GAAiB9oB,EAASD,GAAoB,IAAXgpB,EAAQ,UAAH,6CAAG,GAChDhb,EAAAA,EAAAA,GAAUgb,GAFG,EAEiB,yDAAwD/oB,yDACtF,MAAO4oB,EAAOC,GAAYH,GAAiB1oB,GAE3C,IAAK4oB,EACD,OAEJ,MAAMI,EAAW/lB,OAAOgmB,iBAAiBlpB,GAASmpB,iBAAiBN,GACnE,OAAII,EACOA,EAASG,OAEXX,GAAcK,GAEZC,GAAiBD,EAAU9oB,EAASgpB,EAAQ,GAG5CF,CAEf,CCrCA,MAAMO,GAAW,QACXC,GAAmB,CACrBhB,QAAS,CAAC5C,EAAQ,KAAmC,IAAnC,UAAE6D,EAAS,gBAAEC,GAAiB,EAC5C,MAAMC,EAAW/D,EAIXgE,EAAuBhE,EAAOiE,SAAS,QACvCC,EAAe,GACjBF,IACAhE,EAASA,EAAO5W,QAAQ4Z,IAAmB7c,IACvC+d,EAAaznB,KAAK0J,GACXwd,OAGf,MAAMQ,EAASva,GAAQ/C,MAAMmZ,GAE7B,GAAImE,EAAOlmB,OAAS,EAChB,OAAO8lB,EACX,MAAMvZ,EAAWZ,GAAQJ,kBAAkBwW,GACrC1jB,EAA8B,kBAAd6nB,EAAO,GAAkB,EAAI,EAE7CC,EAASN,EAAgBxqB,EAAE+G,MAAQwjB,EAAUvqB,EAC7C+qB,EAASP,EAAgBvqB,EAAE8G,MAAQwjB,EAAUtqB,EACnD4qB,EAAO,EAAI7nB,IAAW8nB,EACtBD,EAAO,EAAI7nB,IAAW+nB,EAOtB,MAAMC,EAAe5kB,EAAI0kB,EAAQC,EAAQ,IAEP,kBAAvBF,EAAO,EAAI7nB,KAClB6nB,EAAO,EAAI7nB,IAAWgoB,GAEQ,kBAAvBH,EAAO,EAAI7nB,KAClB6nB,EAAO,EAAI7nB,IAAWgoB,GAC1B,IAAI5a,EAASc,EAAS2Z,GACtB,GAAIH,EAAsB,CACtB,IAAI7lB,EAAI,EACRuL,EAASA,EAAON,QAAQua,IAAU,KAC9B,MAAMY,EAAcL,EAAa/lB,GAEjC,OADAA,IACOomB,CAAW,GAE1B,CACA,OAAO7a,CAAM,G,eC1CrB,MAAM8a,WAAiCC,EAAAA,UAMnCC,oBACI,MAAM,cAAExJ,EAAa,YAAEyJ,EAAW,kBAAEC,EAAiB,SAAEC,GAAarpB,KAAKylB,OACnE,WAAE1E,GAAerB,GACvB4J,EAAAA,GAAAA,GAAkBC,IACdxI,IACIoI,EAAYK,OACZL,EAAYK,MAAMC,IAAI1I,GACtBqI,GAAqBA,EAAkBtC,UAAYuC,GACnDD,EAAkBtC,SAAS/F,GAE/BA,EAAWoC,KAAKuG,YAChB3I,EAAWtiB,iBAAiB,qBAAqB,KAC7CuB,KAAK2pB,cAAc,IAEvB5I,EAAW6I,WAAW,IACf7I,EAAWxiB,QACdsoB,eAAgB,IAAM7mB,KAAK2pB,kBAGnCE,GAAAA,EAAAA,gBAAuC,CAC3C,CACAC,wBAAwBC,GACpB,MAAM,iBAAEC,EAAgB,cAAEtK,EAAa,KAAElc,EAAI,UAAEid,GAAczgB,KAAKylB,MAC5D1E,EAAarB,EAAcqB,WACjC,OAAKA,GASLA,EAAWN,UAAYA,EACnBjd,GACAumB,EAAUC,mBAAqBA,QACVtkB,IAArBskB,EACAjJ,EAAWkJ,aAGXjqB,KAAK2pB,eAELI,EAAUtJ,YAAcA,IACpBA,EACAM,EAAWmJ,UAELnJ,EAAWoJ,YAMjB7oB,EAAAA,GAAAA,YAAgB,KACZ,IAAI+M,GACmC,QAAhCA,EAAK0S,EAAWqJ,kBAA+B,IAAP/b,OAAgB,EAASA,EAAGgc,QAAQ5nB,SAC/EzC,KAAK2pB,cACT,KAIL,MAnCI,IAoCf,CACAW,qBACI,MAAM,WAAEvJ,GAAe/gB,KAAKylB,MAAM/F,cAC9BqB,IACAA,EAAWoC,KAAKuG,aACX3I,EAAWpF,kBAAoBoF,EAAWwJ,UAC3CvqB,KAAK2pB,eAGjB,CACAa,uBACI,MAAM,cAAE9K,EAAa,YAAEyJ,EAAaC,kBAAmBqB,GAAoBzqB,KAAKylB,OAC1E,WAAE1E,GAAerB,EACnBqB,IACAA,EAAW2J,6BACS,OAAhBvB,QAAwC,IAAhBA,OAAyB,EAASA,EAAYK,QACtEL,EAAYK,MAAMmB,OAAO5J,IACN,OAAnB0J,QAA8C,IAAnBA,OAA4B,EAASA,EAAeG,aAC/EH,EAAeG,WAAW7J,GAEtC,CACA4I,eACI,MAAM,aAAEA,GAAiB3pB,KAAKylB,MACb,OAAjBkE,QAA0C,IAAjBA,GAAmCA,GAChE,CACA9H,SACI,OAAO,IACX,EAOJ,MAAM0H,GAAyB,CAC3BsB,aAAc,IACP1D,GACH2D,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRC,oBAAqB5D,GACrB6D,qBAAsB7D,GACtB8D,uBAAwB9D,GACxB+D,wBAAyB/D,GACzBgE,UAAW/C,IC3HTgD,GAAiB,CACnBC,cDuGJ,SAAuB5F,GACnB,MAAOhF,EAAWkJ,GAAgBjD,KAC5ByC,GAAc/C,EAAAA,EAAAA,YAAWkF,GAAAA,GAC/B,OAAQrC,EAAAA,cAA6BD,GAA0B,IAAKvD,EAAO0D,YAAaA,EAAaC,mBAAmBhD,EAAAA,EAAAA,YAAWmF,GAAAA,GAA2B9K,UAAWA,EAAWkJ,aAAcA,GACtM,G,0BE9GA,SAAS6B,GAAehY,EAAM0I,GAC1B,IAAKxM,MAAMC,QAAQuM,GACf,OAAO,EACX,MAAMuP,EAAavP,EAAKzZ,OACxB,GAAIgpB,IAAejY,EAAK/Q,OACpB,OAAO,EACX,IAAK,IAAIE,EAAI,EAAGA,EAAI8oB,EAAY9oB,IAC5B,GAAIuZ,EAAKvZ,KAAO6Q,EAAK7Q,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,MCAM+oB,GAAqBrsB,GAAM,aAAa+L,KAAK/L,G,yBCAnD,MAAMssB,GAAiBtsB,GAAOuC,GAASA,EAAKwJ,KAAK/L,GCK3CusB,GAAsB,CAAC7gB,GAAAA,GAAQuc,GAAAA,GAAIlb,GAAAA,GAASyf,GAAAA,GAASC,GAAAA,GAAIC,GAAAA,GCLlD,CACT3gB,KAAO/L,GAAY,SAANA,EACbgM,MAAQhM,GAAMA,IDOZ2sB,GAA0B3sB,GAAMusB,GAAoB/e,KAAK8e,GAActsB,IEJvE4sB,GAAa,IAAIL,GAAqBvf,GAAO+B,IAI7C8d,GAAiB7sB,GAAM4sB,GAAWpf,KAAK8e,GAActsB,I,eCM3D,SAAS8sB,GAAezM,EAAetN,EAAYga,GAC/C,MAAM3G,EAAQ/F,EAAcE,WAC5B,OAAOyM,EAAAA,GAAAA,GAAwB5G,EAAOrT,OAAuB1M,IAAX0mB,EAAuBA,EAAS3G,EAAM2G,OAf5F,SAAoB1M,GAChB,MAAM3gB,EAAU,CAAC,EAEjB,OADA2gB,EAAcxY,OAAOolB,SAAQ,CAACtoB,EAAOqE,IAAStJ,EAAQsJ,GAAOrE,EAAMob,QAC5DrgB,CACX,CAWoGwtB,CAAW7M,GAP/G,SAAqBA,GACjB,MAAMnd,EAAW,CAAC,EAElB,OADAmd,EAAcxY,OAAOolB,SAAQ,CAACtoB,EAAOqE,IAAS9F,EAAS8F,GAAOrE,EAAMxB,gBAC7DD,CACX,CAG+HC,CAAYkd,GAC3I,CCRA,SAAS8M,GAAe9M,EAAerX,EAAKrE,GACpC0b,EAAc+M,SAASpkB,GACvBqX,EAAc0E,SAAS/b,GAAKyS,IAAI9W,GAGhC0b,EAAcgN,SAASrkB,GAAKmd,EAAAA,GAAAA,GAAYxhB,GAEhD,CACA,SAAS2oB,GAAUjN,EAAetN,GAC9B,MAAM2V,EAAWoE,GAAezM,EAAetN,GAC/C,IAAI,cAAEwa,EAAgB,CAAC,EAAC,WAAEhO,EAAa,CAAC,KAAMvgB,GAAW0pB,EAAWrI,EAAcmN,qBAAqB9E,GAAU,GAAS,CAAC,EAC3H1pB,EAAS,IAAKA,KAAWuuB,GACzB,IAAK,MAAMvkB,KAAOhK,EAAQ,CAEtBmuB,GAAe9M,EAAerX,GADhBykB,EAAAA,GAAAA,GAA6BzuB,EAAOgK,IAEtD,CACJ,CAsEA,SAAS0kB,GAAwB1kB,EAAKuW,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAWvW,IAAQuW,EAAoB,SAAKA,GAC7C9a,IAC3B,C,0BCtGA,SAASkpB,GAAwBhpB,GAC7B,OAAO6F,SAAQojB,EAAAA,GAAAA,GAAcjpB,IAAUA,EAAMylB,IACjD,CCAA,SAASyD,GAAgCnG,EAAI7jB,EAAMc,GAC/C,MAAM,uBAAEmpB,GAA2BnrB,OAC7BorB,ECNY,EAACrG,EAAI/iB,IAAW,GAAE+iB,MAAO/iB,IDMvBqpB,CAActG,EAAIuG,GAAAA,EAAAA,IAAmBpqB,GAAQ,YAAcA,GACzE+V,EAAYkU,GAA0BA,EAAuB/N,IAAIgO,GACvE,GAAInU,EAAW,CACX,MAAMsU,EAAcpS,YAAYC,MAkChC,OAtBA9Z,EAAAA,GAAAA,QAAY,KACJ0C,EAAMiV,YACNjV,EAAMiV,UAAUG,YAAc+B,YAAYC,MAAQmS,EACtD,IASJjsB,EAAAA,GAAAA,QAAY,KACR6rB,EAAuBK,OAAOJ,GAI9B,IACInU,EAAUgC,QAEF,CAAZ,MAAO1G,GAAK,KAET0E,EAAUG,aAAe,CACpC,CAEI,OAAO,CAEf,C,eE9CA,MACMqU,GAA+B,SAAUC,EAAAA,GAAAA,GADjB,kBCwB9B,SAASC,GAAejO,EAAekO,GAAuB,IAAdrvB,EAAU,UAAH,6CAAG,CAAC,EACvD,IAAI8P,EACJ,MAAM0Z,EAAWoE,GAAezM,EAAekO,EAASrvB,EAAQ6tB,QAChE,IAAI,WAAExN,EAAac,EAAc7C,wBAA0B,CAAC,GAAMkL,GAAY,CAAC,EAC3ExpB,EAAQsvB,qBACRjP,EAAargB,EAAQsvB,oBAMzB,MAAMC,EAAe/F,EACf,IAAMgG,GAAcrO,EAAeqI,EAAUxpB,GAC7C,IAAMulB,QAAQkK,UAKdC,GAA+D,QAAxC5f,EAAKqR,EAAcwO,uBAAoC,IAAP7f,OAAgB,EAASA,EAAG8f,MACnG,WAAsB,IAArBC,EAAe,UAAH,6CAAG,EACd,MAAM,cAAE3P,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBC,EAClE,OAAOyP,GAAgB3O,EAAekO,EAASnP,EAAgB2P,EAAc1P,EAAiBC,EAAkBpgB,EACpH,EACE,IAAMulB,QAAQkK,WAKd,KAAEzP,GAASK,EACjB,GAAIL,EAAM,CACN,MAAO+P,EAAOC,GAAiB,mBAAThQ,EAChB,CAACuP,EAAcG,GACf,CAACA,EAAoBH,GAC3B,OAAOQ,IAAQtK,KAAKuK,EACxB,CAEI,OAAOzK,QAAQC,IAAI,CAAC+J,IAAgBG,EAAmB1vB,EAAQ+Y,QAEvE,CAIA,SAASyW,GAAcrO,EAAetN,GAA0D,IAA9C,MAAEkF,EAAQ,EAAC,mBAAEuW,EAAkB,KAAEjsB,GAAS,UAAH,6CAAG,CAAC,EACzF,IAAIyM,EACJ,IAAI,WAAEuQ,EAAac,EAAc7C,uBAAsB,cAAE+P,KAAkBvuB,GAAWqhB,EAAcmN,qBAAqBza,GACzH,MAAMoc,EAAa9O,EAAc0E,SAAS,cACtCyJ,IACAjP,EAAaiP,GACjB,MAAMY,EAAa,GACbC,EAAqB9sB,IAAiD,QAAvCyM,EAAKqR,EAAc0B,sBAAmC,IAAP/S,OAAgB,EAASA,EAAGsgB,WAAW/sB,IAC3H,IAAK,MAAMyG,KAAOhK,EAAQ,CACtB,MAAM2F,EAAQ0b,EAAc0E,SAAS/b,GAC/BumB,EAAcvwB,EAAOgK,GAC3B,IAAKrE,QACe0B,IAAhBkpB,GACCF,GACGG,GAAqBH,EAAoBrmB,GAC7C,SAEJ,MAAMiX,EAAkB,CAAEhI,QAAOD,QAAS,KAAMuH,GAKhD,IAAK5a,EAAM8qB,YAAa,CACpB,MAAMC,EAAWrP,EAAcE,WAAW6N,IACtCsB,IACAzP,EAAgBjI,QAAU6V,GAAgC6B,EAAU1mB,EAAKrE,GAEjF,CACA,IAAIiV,EAAYjV,EAAM0T,MAAM2H,GAA2BhX,EAAKrE,EAAO4qB,EAAalP,EAAcsP,oBAAsB1B,GAAAA,EAAAA,IAAmBjlB,GACjI,CAAEzG,MAAM,GACR0d,IACF0N,GAAwBwB,KACxBA,EAAW/E,IAAIphB,GACf4Q,EAAYA,EAAU+K,MAAK,IAAMwK,EAAW7D,OAAOtiB,MAEvDomB,EAAWxtB,KAAKgY,EACpB,CACA,OAAO6K,QAAQC,IAAI0K,GAAYzK,MAAK,KAChC4I,GAAiBD,GAAUjN,EAAekN,EAAc,GAEhE,CACA,SAASyB,GAAgB3O,EAAekO,GAAgF,IAAvEnP,EAAgB,UAAH,6CAAG,EAAGC,EAAkB,UAAH,6CAAG,EAAGC,EAAmB,UAAH,6CAAG,EAAGpgB,EAAO,uCAClH,MAAMkwB,EAAa,GACbQ,GAAsBvP,EAAcwO,gBAAgBC,KAAO,GAAKzP,EAChEwQ,EAA+C,IAArBvQ,EAC1B,eAAChc,EAAI,UAAH,6CAAG,EAAC,OAAKA,EAAI+b,CAAe,EAC9B,eAAC/b,EAAI,UAAH,6CAAG,EAAC,OAAKssB,EAAqBtsB,EAAI+b,CAAe,EAUzD,OATAhP,MAAM5L,KAAK4b,EAAcwO,iBACpBiB,KAAKC,IACL9C,SAAQ,CAAC+C,EAAO1sB,KACjB0sB,EAAMC,OAAO,iBAAkB1B,GAC/Ba,EAAWxtB,KAAK0sB,GAAe0B,EAAOzB,EAAS,IACxCrvB,EACH+Y,MAAOmH,EAAgByQ,EAAwBvsB,KAChDqhB,MAAK,IAAMqL,EAAMC,OAAO,oBAAqB1B,KAAU,IAEvD9J,QAAQC,IAAI0K,EACvB,CAIA,SAASW,GAAgBjwB,EAAGC,GACxB,OAAOD,EAAEowB,iBAAiBnwB,EAC9B,CAOA,SAASyvB,GAAqB,EAAmCxmB,GAAK,IAAxC,cAAEmnB,EAAa,eAAEC,GAAgB,EAC3D,MAAMC,EAAcF,EAAcrlB,eAAe9B,KAAgC,IAAxBonB,EAAepnB,GAExE,OADAonB,EAAepnB,IAAO,EACfqnB,CACX,C,eCtIA,MAAMC,GAAuB,CACzBtpB,EAAcupB,QACdvpB,EAAcwpB,OACdxpB,EAAcypB,MACdzpB,EAAc0pB,MACd1pB,EAAc2pB,IACd3pB,EAAcib,KACdjb,EAAc4pB,MAEZC,GAAuB,IAAIP,IAAsBxf,UACjDggB,GAAoBR,GAAqBltB,OAC/C,SAAS2tB,GAAY1Q,GACjB,OAAQ+O,GAAe3K,QAAQC,IAAI0K,EAAW5gB,KAAI,QAAC,UAAEoL,EAAS,QAAE1a,GAAS,SDZ7E,SAA8BmhB,EAAetN,GAA0B,IAE/D6G,EAFiD1a,EAAU,UAAH,6CAAG,CAAC,EAGhE,GAFAmhB,EAAc4P,OAAO,iBAAkBld,GAEnC1C,MAAMC,QAAQyC,GAAa,CAC3B,MAAMqc,EAAarc,EAAWvE,KAAK+f,GAAYD,GAAejO,EAAekO,EAASrvB,KACtF0a,EAAY6K,QAAQC,IAAI0K,EAC5B,MACK,GAA0B,kBAAfrc,EACZ6G,EAAY0U,GAAejO,EAAetN,EAAY7T,OAErD,CACD,MAAM8xB,EAA2C,oBAAfje,EAC5B+Z,GAAezM,EAAetN,EAAY7T,EAAQ6tB,QAClDha,EACN6G,EAAY8U,GAAcrO,EAAe2Q,EAAoB9xB,EACjE,CACA,OAAO0a,EAAU+K,MAAK,IAAMtE,EAAc4P,OAAO,oBAAqBld,IAC1E,CCLkFke,CAAqB5Q,EAAezG,EAAW1a,EAAQ,IACzI,CACA,SAASgyB,GAAqB7Q,GAC1B,IAAI9H,EAAUwY,GAAY1Q,GAC1B,MAAM3M,EAoSC,CACH,CAAC1M,EAAcupB,SAAUY,IAAgB,GACzC,CAACnqB,EAAcwpB,QAASW,KACxB,CAACnqB,EAAc0pB,OAAQS,KACvB,CAACnqB,EAAc2pB,KAAMQ,KACrB,CAACnqB,EAAcib,MAAOkP,KACtB,CAACnqB,EAAcypB,OAAQU,KACvB,CAACnqB,EAAc4pB,MAAOO,MA1S1B,IAAIC,GAAkB,EAKtB,MAAMC,EAA0B,CAACC,EAAKve,KAClC,MAAM2V,EAAWoE,GAAezM,EAAetN,GAC/C,GAAI2V,EAAU,CACV,MAAM,WAAEnJ,EAAU,cAAEgO,KAAkBvuB,GAAW0pB,EACjD4I,EAAM,IAAKA,KAAQtyB,KAAWuuB,EAClC,CACA,OAAO+D,CAAG,EAmBd,SAASC,EAAeryB,EAASsyB,GAC7B,MAAMpL,EAAQ/F,EAAcE,WACtB+G,EAAUjH,EAAcoR,mBAAkB,IAAS,CAAC,EAKpDrC,EAAa,GAKbsC,EAAc,IAAI7W,IAMxB,IAAI8W,EAAkB,CAAC,EAKnBC,EAAsBjuB,IAO1B,IAAK,IAAIL,EAAI,EAAGA,EAAIwtB,GAAmBxtB,IAAK,CACxC,MAAMf,EAAOsuB,GAAqBvtB,GAC5BuuB,EAAYne,EAAMnR,GAClBuvB,OAAuBzrB,IAAhB+f,EAAM7jB,GAAsB6jB,EAAM7jB,GAAQ+kB,EAAQ/kB,GACzDwvB,GAAgBC,EAAAA,GAAAA,GAAeF,GAK/BG,EAAc1vB,IAASivB,EAAoBK,EAAUK,SAAW,MAClD,IAAhBD,IACAL,EAAsBtuB,GAO1B,IAAI6uB,EAAcL,IAASxK,EAAQ/kB,IAASuvB,IAAS1L,EAAM7jB,IAASwvB,EAepE,GAXII,GACAf,GACA/Q,EAAc+R,yBACdD,GAAc,GAMlBN,EAAU1B,cAAgB,IAAKwB,IAI7BE,EAAUK,UAA4B,OAAhBD,IAElBH,IAASD,EAAUQ,WAErBC,EAAAA,GAAAA,GAAoBR,IACJ,mBAATA,EACP,SAOJ,MAAMS,EAAmBC,GAAuBX,EAAUQ,SAAUP,GACpE,IAAIW,EAAoBF,GAEnBhwB,IAASivB,GACNK,EAAUK,WACTC,GACDJ,GAEHzuB,EAAIsuB,GAAuBG,EAKhC,MAAMW,EAAiBriB,MAAMC,QAAQwhB,GAAQA,EAAO,CAACA,GAKrD,IAAIa,EAAiBD,EAAevyB,OAAOkxB,EAAyB,CAAC,IACjD,IAAhBY,IACAU,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMf,EAC9BgB,EAAU,IACTD,KACAD,GAEDG,EAAiB9pB,IACnBypB,GAAoB,EACpBf,EAAYvD,OAAOnlB,GACnB6oB,EAAUzB,eAAepnB,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAO6pB,EAAS,CACvB,MAAM1e,EAAOwe,EAAe3pB,GACtB6T,EAAO+V,EAAmB5pB,GAE5B2oB,EAAgB7mB,eAAe9B,KAK/BmL,IAAS0I,GAKLkW,EAAAA,GAAAA,GAAkB5e,KAAS4e,EAAAA,GAAAA,GAAkBlW,IACxCsP,GAAehY,EAAM0I,IAAS0V,EAC/BO,EAAc9pB,GAOd6oB,EAAU1B,cAAcnnB,IAAO,OAGrB3C,IAAT8N,EAEL2e,EAAc9pB,GAId0oB,EAAYtH,IAAIphB,QAGN3C,IAAT8N,GAAsBud,EAAY1W,IAAIhS,GAK3C8pB,EAAc9pB,GAOd6oB,EAAU1B,cAAcnnB,IAAO,EAEvC,CAKA6oB,EAAUQ,SAAWP,EACrBD,EAAUe,mBAAqBD,EAI3Bd,EAAUK,WACVP,EAAkB,IAAKA,KAAoBgB,IAE3CvB,GAAmB/Q,EAAc2S,wBACjCP,GAAoB,GAOpBA,IAAsBN,GACtB/C,EAAWxtB,QAAQ8wB,EAAelkB,KAAKoL,IAAS,CAC5CA,UAAWA,EACX1a,QAAS,CAAEqD,UAASrD,OAGhC,CAMA,GAAIwyB,EAAY5C,KAAM,CAClB,MAAMmE,EAAoB,CAAC,EAC3BvB,EAAYzE,SAASjkB,IACjB,MAAMkqB,EAAiB7S,EAAc8S,cAAcnqB,QAC5B3C,IAAnB6sB,IACAD,EAAkBjqB,GAAOkqB,EAC7B,IAEJ9D,EAAWxtB,KAAK,CAAEgY,UAAWqZ,GACjC,CACA,IAAIG,EAAgB5oB,QAAQ4kB,EAAWhsB,QAOvC,OANIguB,IACkB,IAAlBhL,EAAMpB,UACL3E,EAAc+R,yBACfgB,GAAgB,GAEpBhC,GAAkB,EACXgC,EAAgB7a,EAAQ6W,GAAc3K,QAAQkK,SACzD,CAkBA,MAAO,CACH4C,iBACAvP,UAhBJ,SAAmBzf,EAAM2vB,EAAUhzB,GAC/B,IAAI8P,EAEJ,GAAI0E,EAAMnR,GAAM2vB,WAAaA,EACzB,OAAOzN,QAAQkK,UAEsB,QAAxC3f,EAAKqR,EAAcwO,uBAAoC,IAAP7f,GAAyBA,EAAGie,SAAS+C,IAAY,IAAIhhB,EAAI,OAAuC,QAA/BA,EAAKghB,EAAMjO,sBAAmC,IAAP/S,OAAgB,EAASA,EAAGgT,UAAUzf,EAAM2vB,EAAS,IAC9Mxe,EAAMnR,GAAM2vB,SAAWA,EACvB,MAAM9C,EAAamC,EAAeryB,EAASqD,GAC3C,IAAK,MAAMyG,KAAO0K,EACdA,EAAM1K,GAAKmnB,cAAgB,CAAC,EAEhC,OAAOf,CACX,EAIIiE,mBA5PJ,SAA4BC,GACxB/a,EAAU+a,EAAajT,EAC3B,EA2PIiP,SAAU,IAAM5b,EAExB,CACA,SAAS8e,GAAuB3V,EAAM1I,GAClC,MAAoB,kBAATA,EACAA,IAAS0I,IAEXxM,MAAMC,QAAQ6D,KACXgY,GAAehY,EAAM0I,EAGrC,CACA,SAASsU,KAAkC,IAAlBe,EAAW,UAAH,8CAC7B,MAAO,CACHA,WACA/B,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBwC,mBAAoB,CAAC,EAE7B,CClTA,MAAMxD,GAAa,CACfxV,UAAW0M,IAAwB,IAAgC,IAA/B,cAAEjG,EAAa,QAAE9H,GAAS,EAM1D8H,EAAc0B,iBAAmB1B,EAAc0B,eAAiBmP,GAAqB7Q,KAIjFiS,EAAAA,GAAAA,GAAoB/Z,KACpB/Y,EAAAA,EAAAA,YAAU,IAAM+Y,EAAQ6O,UAAU/G,IAAgB,CAAC9H,GACvD,IAEJgb,KAAMjN,IAAyBF,IAC3B,MAAM,OAAE2G,EAAM,cAAE1M,GAAkB+F,GAC3BhF,EAAWkJ,GAAgBjD,KAC5BmM,GAAkBzM,EAAAA,EAAAA,YAAWQ,GAAAA,IACnC/nB,EAAAA,EAAAA,YAAU,KACN6gB,EAAce,UAAYA,EAC1B,MAAMxH,EAAYyG,EAAc0B,gBAC5B1B,EAAc0B,eAAeC,UAAUhb,EAAc4pB,MAAOxP,EAAW,CACnE2L,OAASyG,GAAmBA,EAAgBzG,QACxCA,IAERnT,IAAcwH,GACdxH,EAAU+K,KAAK2F,EACnB,GACD,CAAClJ,GAAW,KChCvB,SAASqS,GAAiBpT,EAAe6R,EAAUwB,EAAexsB,GAC9D,MAAO,CAAChJ,EAAO8C,KACQ,UAAf9C,EAAMqE,MAAoB+B,MAK1BovB,GAAiBrT,EAAc0B,gBAC/B1B,EAAc0B,eAAeC,UAAUhb,EAAc0pB,MAAOwB,GAEhEhrB,GAAYA,EAAShJ,EAAO8C,GAAK,CAEzC,CCVA,MAAM2yB,GAAgB,CAAC3tB,EAAQgqB,MACtBA,IAGIhqB,IAAWgqB,GAIT2D,GAAc3tB,EAAQgqB,EAAM4D,gBCV3C,MAAMC,GAAoB,IAAInT,QAMxBoT,GAAY,IAAIpT,QAChBqT,GAAwBC,IAC1B,MAAM9sB,EAAW2sB,GAAkB9T,IAAIiU,EAAMh1B,QAC7CkI,GAAYA,EAAS8sB,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQjH,QAAQ8G,GAAqB,EAqBzC,SAASI,GAAoB10B,EAASP,EAASgI,GAC3C,MAAMktB,EApBV,SAAkC,GAAsB,IAAtB,KAAEtQ,KAAS5kB,GAAS,EAClD,MAAMm1B,EAAavQ,GAAQwQ,SAItBR,GAAU9Y,IAAIqZ,IACfP,GAAUrY,IAAI4Y,EAAY,CAAC,GAE/B,MAAME,EAAgBT,GAAU/T,IAAIsU,GAC9BrrB,EAAMwrB,KAAKC,UAAUv1B,GAQ3B,OAHKq1B,EAAcvrB,KACfurB,EAAcvrB,GAAO,IAAI0rB,qBAAqBT,GAA0B,CAAEnQ,UAAS5kB,KAEhFq1B,EAAcvrB,EACzB,CAEsC2rB,CAAyBz1B,GAG3D,OAFA20B,GAAkBpY,IAAIhc,EAASyH,GAC/BktB,EAA0BQ,QAAQn1B,GAC3B,KACHo0B,GAAkB1F,OAAO1uB,GACzB20B,EAA0BS,UAAUp1B,EAAQ,CAEpD,CC5BA,MAAMq1B,GAAiB,CACnBjf,KAAM,EACN6O,IAAK,GAET,SAASqQ,GAAwBC,EAAethB,EAAO2M,EAAe,GAAqD,IAArD,KAAEyD,EAAMmR,OAAQC,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAAM,GACrH51B,EAAAA,EAAAA,YAAU,KACN,IAAKw1B,IAAkB3U,EAAc3gB,QACjC,OACJ,MAAMR,EAAU,CACZ4kB,KAAe,OAATA,QAA0B,IAATA,OAAkB,EAASA,EAAKpkB,QACvDw1B,aACAG,UAA6B,kBAAXF,EAAsBA,EAASL,GAAeK,IAiCpE,OAAOhB,GAAoB9T,EAAc3gB,QAASR,GA/BpB80B,IAC1B,MAAM,eAAEsB,GAAmBtB,EAI3B,GAAItgB,EAAM6hB,WAAaD,EACnB,OAMJ,GALA5hB,EAAM6hB,SAAWD,EAKbF,IAASE,GAAkB5hB,EAAM8hB,eACjC,OAEKF,IACL5hB,EAAM8hB,gBAAiB,GAEvBnV,EAAc0B,gBACd1B,EAAc0B,eAAeC,UAAUhb,EAAcwpB,OAAQ8E,GAMjE,MAAMlP,EAAQ/F,EAAcE,WACtBrZ,EAAWouB,EACXlP,EAAMqP,gBACNrP,EAAMsP,gBACZxuB,GAAYA,EAAS8sB,EAAM,GAEiD,GACjF,CAACgB,EAAelR,EAAMoR,EAAYC,GACzC,CAMA,SAASQ,GAA+BX,EAAethB,EAAO2M,EAAe,GAAqB,IAArB,SAAEkI,GAAW,GAAM,GAC5F/oB,EAAAA,EAAAA,YAAU,KACDw1B,GAAkBzM,GAavBqN,uBAAsB,KAClBliB,EAAM8hB,gBAAiB,EACvB,MAAM,gBAAEC,GAAoBpV,EAAcE,WAC1CkV,GAAmBA,EAAgB,MAC/BpV,EAAc0B,gBACd1B,EAAc0B,eAAeC,UAAUhb,EAAcwpB,QAAQ,EACjE,GACF,GACH,CAACwE,GACR,CCxFA,MAAMa,GAAoB,CACtBC,OAAQxP,IDFZ,SAAqB,GAAkF,IAAlF,cAAEjG,EAAa,YAAE0V,EAAW,gBAAEN,EAAe,gBAAEC,EAAe,SAAEM,EAAW,CAAC,GAAI,EACjG,MAAMtiB,GAAQoT,EAAAA,EAAAA,QAAO,CACjB0O,gBAAgB,EAChBD,UAAU,IAEd,IAAIP,EAAgBxqB,QAAQurB,GAAeN,GAAmBC,GAC1DM,EAASZ,MAAQ1hB,EAAMhU,QAAQ81B,iBAC/BR,GAAgB,IACgC,qBAAzBN,qBACrBiB,GACAZ,IACMC,EAAethB,EAAMhU,QAAS2gB,EAAe2V,EAC7D,ICTIC,IAAK3P,ICIT,SAAuB,GAAuE,IAAvE,MAAE4P,EAAK,WAAEC,EAAU,YAAEC,EAAW,SAAEC,EAAQ,cAAEhW,KAAkB+F,GAAO,EACxF,MAAMkQ,EAAoBJ,GAASC,GAAcC,GAAeC,EAC1DE,GAAazP,EAAAA,EAAAA,SAAO,GACpB0P,GAA4B1P,EAAAA,EAAAA,QAAO,MAInC2P,EAAe,CACjBt3B,UAAWg3B,GACPD,GACAE,GACAhQ,EAAqB,gBAE7B,SAASsQ,IACLF,EAA0B92B,SAAW82B,EAA0B92B,UAC/D82B,EAA0B92B,QAAU,IACxC,CACA,SAASi3B,IACLD,IACAH,EAAW72B,SAAU,EAKrB,OAJoB2gB,EAAcE,WAClB8V,UAAYhW,EAAc0B,gBACtC1B,EAAc0B,eAAeC,UAAUhb,EAAc2pB,KAAK,IAEtDrsB,GACZ,CACA,SAASsyB,EAAY14B,EAAO8C,GACxB,IAAIgO,EAAIC,EAAI4nB,EAAIC,EACXH,MAMJhD,GAActT,EAAc3gB,QAASxB,EAAMc,QAEW,QAAhD83B,GAAMD,EAAKxW,EAAcE,YAAY2V,aAA0B,IAAPY,GAAyBA,EAAG/rB,KAAK8rB,EAAI34B,EAAO8C,GAD9C,QAAtDiO,GAAMD,EAAKqR,EAAcE,YAAY6V,mBAAgC,IAAPnnB,GAAyBA,EAAGlE,KAAKiE,EAAI9Q,EAAO8C,GAErH,CACA,SAAS+1B,EAAgB74B,EAAO8C,GAC5B,IAAIgO,EAAIC,EACH0nB,MAEkD,QAAtD1nB,GAAMD,EAAKqR,EAAcE,YAAY6V,mBAAgC,IAAPnnB,GAAyBA,EAAGlE,KAAKiE,EAAI9Q,EAAO8C,GAC/G,CACA,MAAMg2B,GAAaC,EAAAA,EAAAA,cAAY,CAAC/4B,EAAO8C,KACnC,IAAIgO,EAEJ,GADA0nB,IACIH,EAAW72B,QACX,OACJ62B,EAAW72B,SAAU,EACrB82B,EAA0B92B,QAAUO,EAAKN,EAAgBgD,OAAQ,YAAai0B,EAAaH,GAAe92B,EAAgBgD,OAAQ,gBAAiBo0B,EAAiBN,IACpK,MAAMS,EAAc7W,EAAcE,WAI9B2W,EAAYb,UAAYhW,EAAc0B,gBACtC1B,EAAc0B,eAAeC,UAAUhb,EAAc2pB,KAAK,GAE5B,QAAjC3hB,EAAKkoB,EAAYf,kBAA+B,IAAPnnB,GAAyBA,EAAGjE,KAAKmsB,EAAah5B,EAAO8C,EAAK,GACrG,CAACwJ,QAAQ2rB,GAAa9V,IACzBzgB,EAAgBygB,EAAe,cAAeiW,EAAoBU,OAAa3wB,EAAWowB,GAC1FpQ,GAAiBqQ,EACrB,IDjEIS,MAAO7Q,IECX,SAAyB,GAAgC,IAAhC,WAAE8Q,EAAU,cAAE/W,GAAgB,EACnD,MAAM,eAAE0B,GAAmB1B,EACrBgX,GAAUJ,EAAAA,EAAAA,cAAY,KACxBlV,GAAkBA,EAAeC,UAAUhb,EAAcypB,OAAO,EAAK,GACtE,CAAC1O,IACEuV,GAASL,EAAAA,EAAAA,cAAY,KACvBlV,GAAkBA,EAAeC,UAAUhb,EAAcypB,OAAO,EAAM,GACvE,CAAC1O,IACJziB,EAAY+gB,EAAe,QAAS+W,EAAaC,OAAUhxB,GAC3D/G,EAAY+gB,EAAe,OAAQ+W,EAAaE,OAASjxB,EAC7D,IFVIkxB,MAAOjR,IJQX,SAAyB,GAA0D,IAA1D,aAAEkR,EAAY,WAAEC,EAAU,WAAEC,EAAU,cAAErX,GAAgB,EAC7EzgB,EAAgBygB,EAAe,gBAAgBsX,EAAAA,EAAAA,UAAQ,IAC5CH,GAAgBE,EACjBjE,GAAiBpT,GAAe,EAAM7V,QAAQktB,GAAaF,QAC3DnxB,GACP,CAACmxB,EAAchtB,QAAQktB,GAAarX,IAAiB,CAAElhB,SAAUq4B,IACpE53B,EAAgBygB,EAAe,gBAAgBsX,EAAAA,EAAAA,UAAQ,IAC5CF,GAAcC,EACfjE,GAAiBpT,GAAe,EAAO7V,QAAQktB,GAAaD,QAC5DpxB,GACP,CAACmxB,EAAchtB,QAAQktB,GAAarX,IAAiB,CAAElhB,SAAUs4B,GACxE,K,yDOrBA,MAAMG,GAAiB,IAAI/c,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEEgd,GAAmB7uB,GAAQ4uB,GAAe5c,IAAIhS,GAI9C8uB,GAAiB93B,GAAMA,IAAM0L,GAAAA,IAAU1L,IAAMioB,GAAAA,GACnD,IAAI8P,IACJ,SAAWA,GACPA,EAA4B,MAAI,QAChCA,EAA6B,OAAI,SACjCA,EAA2B,KAAI,OAC/BA,EAA4B,MAAI,QAChCA,EAA0B,IAAI,MAC9BA,EAA6B,OAAI,QACpC,CAPD,CAOGA,KAAyBA,GAAuB,CAAC,IACpD,MAAMC,GAAmB,CAACC,EAAQC,IAAQ1sB,WAAWysB,EAAOna,MAAM,MAAMoa,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,EAAO,KAAkB,IAAlB,UAAE/uB,GAAW,EAChE,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAMgvB,EAAWhvB,EAAU+B,MAAM,sBACjC,GAAIitB,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAAS1uB,EAAU+B,MAAM,oBAC/B,OAAI2sB,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAI3d,IAAI,CAAC,IAAK,IAAK,MACnC4d,GAAgCC,GAAAA,EAAAA,QAA2B1vB,IAASwvB,GAAcxd,IAAIhS,KAC5F,SAAS2vB,GAAgCtY,GACrC,MAAMuY,EAAoB,GAW1B,OAVAH,GAA8BxL,SAASjkB,IACnC,MAAMrE,EAAQ0b,EAAc0E,SAAS/b,QACvB3C,IAAV1B,IACAi0B,EAAkBh3B,KAAK,CAACoH,EAAKrE,EAAMob,QACnCpb,EAAM8W,IAAIzS,EAAI2B,WAAW,SAAW,EAAI,GAC5C,IAGAiuB,EAAkBx1B,QAClBid,EAAcmC,SACXoW,CACX,CACA,MAAMC,GAAmB,CAErBC,MAAO,CAAC,EAAD,SAAC,EAAEr6B,GAAG,GAAE,YAAEs6B,EAAc,IAAG,aAAEC,EAAe,KAAK,SAAKv6B,EAAEuG,IAAMvG,EAAEwG,IAAMuG,WAAWutB,GAAevtB,WAAWwtB,EAAa,EAC/HC,OAAQ,CAAC,EAAD,SAAC,EAAEv6B,GAAG,GAAE,WAAEw6B,EAAa,IAAG,cAAEC,EAAgB,KAAK,SAAKz6B,EAAEsG,IAAMtG,EAAEuG,IAAMuG,WAAW0tB,GAAc1tB,WAAW2tB,EAAc,EAChI/xB,IAAK,CAACkxB,EAAO,KAAF,IAAE,IAAElxB,GAAK,SAAKoE,WAAWpE,EAAI,EACxCC,KAAM,CAACixB,EAAO,KAAF,IAAE,KAAEjxB,GAAM,SAAKmE,WAAWnE,EAAK,EAC3CE,OAAQ,CAAC,EAAD,SAAC,EAAE7I,GAAG,GAAE,IAAE0I,GAAK,SAAKoE,WAAWpE,IAAQ1I,EAAEsG,IAAMtG,EAAEuG,IAAI,EAC7DqC,MAAO,CAAC,EAAD,SAAC,EAAE7I,GAAG,GAAE,KAAE4I,GAAM,SAAKmE,WAAWnE,IAAS5I,EAAEuG,IAAMvG,EAAEwG,IAAI,EAE9DxG,EAAG05B,GAAuB,EAAG,IAC7Bz5B,EAAGy5B,GAAuB,EAAG,KAE3BiB,GAA2B,CAACp6B,EAAQqhB,EAAegZ,KACrD,MAAMC,EAAajZ,EAAc7W,qBAC3B/J,EAAU4gB,EAAc3gB,QACxB65B,EAAuB5Q,iBAAiBlpB,IACxC,QAAE+5B,GAAYD,EACdj0B,EAAS,CAAC,EAGA,SAAZk0B,GACAnZ,EAAcoZ,eAAe,UAAWz6B,EAAOw6B,SAAW,SAK9DH,EAAYpM,SAASjkB,IACjB1D,EAAO0D,GAAO6vB,GAAiB7vB,GAAKswB,EAAYC,EAAqB,IAGzElZ,EAAcmC,SACd,MAAMkX,EAAarZ,EAAc7W,qBAQjC,OAPA6vB,EAAYpM,SAASjkB,IAGjB,MAAMrE,EAAQ0b,EAAc0E,SAAS/b,GACrCrE,GAASA,EAAMg1B,KAAKr0B,EAAO0D,IAC3BhK,EAAOgK,GAAO6vB,GAAiB7vB,GAAK0wB,EAAYH,EAAqB,IAElEv6B,CAAM,EAoHjB,SAAS46B,GAAevZ,EAAerhB,EAAQsG,EAAQioB,GACnD,MA3MsBvuB,IACf4L,OAAOgL,KAAK5W,GAAQ6W,KAAKgiB,IA0MzBgC,CAAiB76B,GAnHa,SAACqhB,EAAerhB,GAA4C,IAApCsG,EAAS,UAAH,6CAAG,CAAC,EAAGioB,EAAgB,UAAH,6CAAG,CAAC,EAC3FvuB,EAAS,IAAKA,GACduuB,EAAgB,IAAKA,GACrB,MAAMuM,EAAuBlvB,OAAOgL,KAAK5W,GAAQkf,OAAO2Z,IAGxD,IAAIkC,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GA4E7B,GA3EAH,EAAqB7M,SAASjkB,IAC1B,MAAMrE,EAAQ0b,EAAc0E,SAAS/b,GACrC,IAAKqX,EAAc+M,SAASpkB,GACxB,OACJ,IAAIvE,EAAOa,EAAO0D,GACdkxB,EAAWvN,GAAuBloB,GACtC,MAAMC,EAAK1F,EAAOgK,GAClB,IAAImxB,EAKJ,IAAIpH,EAAAA,GAAAA,GAAkBruB,GAAK,CACvB,MAAM01B,EAAe11B,EAAGtB,OAClBi3B,EAAsB,OAAV31B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAG21B,GACVH,EAAWvN,GAAuBloB,GAClC,IAAK,IAAInB,EAAI+2B,EAAW/2B,EAAI82B,EAAc92B,IACjC62B,GAMD1sB,EAAAA,EAAAA,GAAUkf,GAAuBjoB,EAAGpB,MAAQ62B,EAAQ,2CALpDA,EAASxN,GAAuBjoB,EAAGpB,KACnCmK,EAAAA,EAAAA,GAAU0sB,IAAWD,GAChBpC,GAAcoC,IAAapC,GAAcqC,GAAU,gEAMpE,MAEIA,EAASxN,GAAuBjoB,GAEpC,GAAIw1B,IAAaC,EAGb,GAAIrC,GAAcoC,IAAapC,GAAcqC,GAAS,CAClD,MAAMz6B,EAAUiF,EAAMob,MACC,kBAAZrgB,GACPiF,EAAM8W,IAAIjQ,WAAW9L,IAEP,kBAAPgF,EACP1F,EAAOgK,GAAOwC,WAAW9G,GAEpB2L,MAAMC,QAAQ5L,IAAOy1B,IAAWlS,GAAAA,KACrCjpB,EAAOgK,GAAOtE,EAAG8J,IAAIhD,YAE7B,MACuB,OAAb0uB,QAAkC,IAAbA,OAAsB,EAASA,EAAS3wB,aACvD,OAAX4wB,QAA8B,IAAXA,OAAoB,EAASA,EAAO5wB,aAC9C,IAAT9E,GAAqB,IAAPC,GAGF,IAATD,EACAE,EAAM8W,IAAI0e,EAAO5wB,UAAU9E,IAG3BzF,EAAOgK,GAAOkxB,EAAS3wB,UAAU7E,IAMhCs1B,IACDD,EACIpB,GAAgCtY,GACpC2Z,GAAsC,GAE1CC,EAAqBr4B,KAAKoH,GAC1BukB,EAAcvkB,QACa3C,IAAvBknB,EAAcvkB,GACRukB,EAAcvkB,GACdhK,EAAOgK,GACjBrE,EAAMg1B,KAAKj1B,GAEnB,IAEAu1B,EAAqB72B,OAAQ,CAC7B,MAAMk3B,EAAUL,EAAqBxa,QAAQ,WAAa,EACpD9c,OAAO43B,YACP,KACAC,EAAkBpB,GAAyBp6B,EAAQqhB,EAAe4Z,GAaxE,OAXIF,EAAuB32B,QACvB22B,EAAuB9M,SAAQ,IAAkB,IAAhBjkB,EAAKrE,GAAM,EACxC0b,EAAc0E,SAAS/b,GAAKyS,IAAI9W,EAAM,IAI9C0b,EAAcmC,SAEViY,GAAAA,GAAyB,OAAZH,GACb33B,OAAO+3B,SAAS,CAAEtzB,IAAKkzB,IAEpB,CAAEt7B,OAAQw7B,EAAiBjN,gBACtC,CAEI,MAAO,CAAEvuB,SAAQuuB,gBAEzB,CAUUoN,CAAiCta,EAAerhB,EAAQsG,EAAQioB,GAChE,CAAEvuB,SAAQuuB,gBACpB,CC1NA,MAAMqN,GAAkB,CAACva,EAAerhB,EAAQsG,EAAQioB,KACpD,MAAM7E,E5BuCV,SAA6BrI,EAAe,EAAekN,GAAe,OAAzBvuB,GAAQ,EACrD,MAAMS,EAAU4gB,EAAc3gB,QAC9B,KAAMD,aAAmBgb,SACrB,MAAO,CAAEzb,SAAQuuB,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzBlN,EAAcxY,OAAOolB,SAAStoB,IAC1B,MAAMjF,EAAUiF,EAAMob,MACtB,IAAKmI,GAAcxoB,GACf,OACJ,MAAMgpB,EAAWF,GAAiB9oB,EAASD,GACvCipB,GACA/jB,EAAM8W,IAAIiN,EAAS,IAI3B,IAAK,MAAM1f,KAAOhK,EAAQ,CACtB,MAAMU,EAAUV,EAAOgK,GACvB,IAAKkf,GAAcxoB,GACf,SACJ,MAAMgpB,EAAWF,GAAiB9oB,EAASD,GACtCipB,IAGL1pB,EAAOgK,GAAO0f,EAIV6E,QAAwClnB,IAAvBknB,EAAcvkB,KAC/BukB,EAAcvkB,GAAOtJ,GAE7B,CACA,MAAO,CAAEV,SAAQuuB,gBACrB,C4B5EqBsN,CAAoBxa,EAAerhB,EAAQuuB,GAG5D,OAAOqM,GAAevZ,EAFtBrhB,EAAS0pB,EAAS1pB,OAE2BsG,EAD7CioB,EAAgB7E,EAAS6E,cAC0C,E,eCVvE,MAAMuN,GAAuB,CAAEp7B,QAAS,MAClCq7B,GAA2B,CAAEr7B,SAAS,G,yBCkB5C,MAAMs7B,GAAepwB,OAAOgL,KAAKqlB,GAAAA,GAC3BC,GAAcF,GAAa53B,OAC3B+3B,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GACF56B,YAAY,GAAoE,IAApE,OAAEwF,EAAM,MAAEogB,EAAK,oBAAEiV,EAAmB,YAAEC,GAAc,EAAEp8B,EAAU,UAAH,6CAAG,CAAC,EAKzEyB,KAAKjB,QAAU,KAIfiB,KAAK46B,SAAW,IAAI1gB,IAIpBla,KAAK66B,eAAgB,EACrB76B,KAAK86B,uBAAwB,EAQ7B96B,KAAKgvB,mBAAqB,KAM1BhvB,KAAKkH,OAAS,IAAI6zB,IAKlB/6B,KAAKygB,WAAY,EAKjBzgB,KAAKg7B,mBAAqB,IAAID,IAM9B/6B,KAAKi7B,iBAAmB,CAAC,EAIzBj7B,KAAKk7B,OAAS,CAAC,EAMfl7B,KAAKm7B,uBAAyB,CAAC,EAC/Bn7B,KAAKo7B,aAAe,IAAMp7B,KAAKsvB,OAAO,SAAUtvB,KAAKq7B,cACrDr7B,KAAK6hB,OAAS,KACL7hB,KAAKjB,UAEViB,KAAKs7B,eACLt7B,KAAKu7B,eAAev7B,KAAKjB,QAASiB,KAAKw7B,YAAax7B,KAAKylB,MAAMZ,MAAO7kB,KAAK+gB,YAAW,EAE1F/gB,KAAKy7B,eAAiB,IAAMn6B,EAAAA,GAAAA,OAAYtB,KAAK6hB,QAAQ,GAAO,GAC5D,MAAM,aAAEwZ,EAAY,YAAEG,GAAgBb,EACtC36B,KAAKq7B,aAAeA,EACpBr7B,KAAK07B,WAAa,IAAKL,GACvBr7B,KAAK27B,cAAgBlW,EAAMpB,QAAU,IAAKgX,GAAiB,CAAC,EAC5Dr7B,KAAKw7B,YAAcA,EACnBx7B,KAAKqF,OAASA,EACdrF,KAAKylB,MAAQA,EACbzlB,KAAK8nB,MAAQziB,EAASA,EAAOyiB,MAAQ,EAAI,EACzC9nB,KAAK06B,oBAAsBA,EAC3B16B,KAAKzB,QAAUA,EACfyB,KAAK86B,uBAAwBA,EAAAA,GAAAA,GAAsBrV,GACnDzlB,KAAK66B,eAAgBA,EAAAA,GAAAA,GAAcpV,GAC/BzlB,KAAK66B,gBACL76B,KAAKkuB,gBAAkB,IAAIhU,KAE/Bla,KAAKyxB,uBAAyB5nB,QAAQxE,GAAUA,EAAOtG,SAWvD,MAAM,WAAEyvB,KAAeoN,GAAwB57B,KAAK67B,4BAA4BpW,EAAO,CAAC,GACxF,IAAK,MAAMpd,KAAOuzB,EAAqB,CACnC,MAAM53B,EAAQ43B,EAAoBvzB,QACR3C,IAAtB21B,EAAahzB,KAAsB4kB,EAAAA,GAAAA,GAAcjpB,KACjDA,EAAM8W,IAAIugB,EAAahzB,IAAM,GACzB2kB,GAAwBwB,IACxBA,EAAW/E,IAAIphB,GAG3B,CACJ,CAQAwzB,4BAA4BC,EAAQC,GAChC,MAAO,CAAC,CACZ,CACAC,MAAMlzB,GACF,IAAIuF,EACJrO,KAAKjB,QAAU+J,EACX9I,KAAK+gB,YACL/gB,KAAK+gB,WAAWib,MAAMlzB,GAEtB9I,KAAKqF,QAAUrF,KAAK66B,gBAAkB76B,KAAK86B,wBAC3C96B,KAAKi8B,sBAA+C,QAAtB5tB,EAAKrO,KAAKqF,cAA2B,IAAPgJ,OAAgB,EAASA,EAAG6tB,gBAAgBl8B,OAE5GA,KAAKkH,OAAOolB,SAAQ,CAACtoB,EAAOqE,IAAQrI,KAAKm8B,kBAAkB9zB,EAAKrE,KAC3Do2B,GAAyBr7B,SCzJtC,WAEI,GADAq7B,GAAyBr7B,SAAU,EAC9B+6B,GAAAA,EAEL,GAAI93B,OAAOo6B,WAAY,CACnB,MAAMC,EAAmBr6B,OAAOo6B,WAAW,4BACrCE,EAA8B,IAAOnC,GAAqBp7B,QAAUs9B,EAAiBE,QAC3FF,EAAiBG,YAAYF,GAC7BA,GACJ,MAEInC,GAAqBp7B,SAAU,CAEvC,CD6IY09B,GAEJz8B,KAAKgvB,mBAC4B,UAA7BhvB,KAAK06B,sBAE8B,WAA7B16B,KAAK06B,qBAEDP,GAAqBp7B,SAI/BiB,KAAKqF,QACLrF,KAAKqF,OAAOu1B,SAASnR,IAAIzpB,MAC7BA,KAAK08B,SAAS18B,KAAKylB,MACvB,CACAkX,UACI,IAAItuB,EAAIC,EAAI4nB,EACe,QAA1B7nB,EAAKrO,KAAK+gB,kBAA+B,IAAP1S,GAAyBA,EAAGsuB,UAC/Dz6B,EAAAA,GAAAA,OAAkBlC,KAAKo7B,cACvBl5B,EAAAA,GAAAA,OAAkBlC,KAAK6hB,QACvB7hB,KAAKg7B,mBAAmB1O,SAAS3B,GAAWA,MACN,QAArCrc,EAAKtO,KAAKi8B,6BAA0C,IAAP3tB,GAAyBA,EAAGlE,KAAKpK,MACxD,QAAtBk2B,EAAKl2B,KAAKqF,cAA2B,IAAP6wB,GAAyBA,EAAG0E,SAASpN,OAAOxtB,MAC3E,IAAK,MAAMqI,KAAOrI,KAAKk7B,OACnBl7B,KAAKk7B,OAAO7yB,GAAKu0B,QAErB58B,KAAKjB,QAAU,IACnB,CACAo9B,kBAAkB9zB,EAAKrE,GACnB,MAAM64B,EAAmBvP,GAAAA,EAAAA,IAAmBjlB,GACtCy0B,EAAiB94B,EAAM+4B,GAAG,UAAWC,IACvCh9B,KAAKq7B,aAAahzB,GAAO20B,EACzBh9B,KAAKylB,MAAMjN,UACPlX,EAAAA,GAAAA,OAAYtB,KAAKo7B,cAAc,GAAO,GACtCyB,GAAoB78B,KAAK+gB,aACzB/gB,KAAK+gB,WAAWkc,kBAAmB,EACvC,IAEEC,EAAwBl5B,EAAM+4B,GAAG,gBAAiB/8B,KAAKy7B,gBAC7Dz7B,KAAKg7B,mBAAmBlgB,IAAIzS,GAAK,KAC7By0B,IACAI,GAAuB,GAE/B,CACA3N,iBAAiB4N,GAIb,OAAKn9B,KAAKjB,SACLiB,KAAKo9B,0BACNp9B,KAAK4B,OAASu7B,EAAMv7B,KAEjB5B,KAAKo9B,yBAAyBp9B,KAAKjB,QAASo+B,EAAMp+B,SAD9C,CAEf,CACAs+B,aAAa,EAAgCC,EAAUC,EAAmBC,EAAcC,EAA2BC,GAA0B,IAAhI,SAAE9C,KAAa+C,GAAe,EACvC,MAAMC,EAAW,GAUjB,IAAK,IAAIj7B,EAAI,EAAGA,EAAI43B,GAAa53B,IAAK,CAClC,MAAMO,EAAOm3B,GAAa13B,IACpB,UAAEk7B,EAAS,UAAEC,GAAcxD,GAAAA,EAAmBp3B,GAMhD26B,EAAUF,IAAkBG,GAC5BF,EAAS38B,MAAK88B,EAAAA,EAAAA,eAAcD,EAAW,CACnCz1B,IAAKnF,KACFy6B,EACHje,cAAe1f,OAG3B,CACA,IAAKA,KAAK+gB,YAAc0c,EAA2B,CAC/Cz9B,KAAK+gB,WAAa,IAAI0c,EAA0BD,EAAcx9B,KAAKq7B,aAAcr7B,KAAKqF,QAAUrF,KAAKqF,OAAO0b,YAC5G,MAAM,SAAEsI,EAAQ,OAAE9jB,EAAM,KAAE/B,EAAI,gBAAE4e,EAAe,aAAE4b,GAAiBL,EAClE39B,KAAK+gB,WAAW6I,WAAW,CACvBP,WACA9jB,SACA04B,oBAAqBp0B,QAAQrG,IACxB4e,IAAmBE,EAAAA,EAAAA,GAAYF,GACpC1C,cAAe1f,KACfy7B,eAAgB,IAAMz7B,KAAKy7B,iBAQ3ByC,cAAiC,kBAAX34B,EAAsBA,EAAS,OACrD44B,uBAAwBT,EACxBM,gBAER,CACA,OAAOJ,CACX,CACAtC,eACIt7B,KAAKo+B,MAAMp+B,KAAKw7B,YAAax7B,KAAKq7B,aAAcr7B,KAAKzB,QAASyB,KAAKylB,MACvE,CAMA5c,qBACI,OAAO7I,KAAKjB,QACNiB,KAAKq+B,2BAA2Br+B,KAAKjB,QAASiB,KAAKylB,OtCrQzC,CACpB3nB,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,GsCwQrC,CACAi6B,eAAej2B,GACX,OAAOrI,KAAKq7B,aAAahzB,EAC7B,CACAywB,eAAezwB,EAAKrE,GAChBhE,KAAKq7B,aAAahzB,GAAOrE,CAC7B,CAQA6oB,qBAAqBxuB,GAA0B,IAAlBkgC,IAAY,UAAH,+CAClC,OAAOv+B,KAAKw+B,iCAAiCngC,EAAQ2B,KAAKylB,MAAO8Y,EACrE,CAKA7B,SAASjX,IACDA,EAAMb,mBAAqB5kB,KAAKylB,MAAMb,oBACtC5kB,KAAKy7B,iBAET,MAAM1R,EAAY/pB,KAAKylB,MACvBzlB,KAAKylB,MAAQA,EAIb,IAAK,IAAI9iB,EAAI,EAAGA,EAAI63B,GAAkB/3B,OAAQE,IAAK,CAC/C,MAAM0F,EAAMmyB,GAAkB73B,GAC1B3C,KAAKm7B,uBAAuB9yB,KAC5BrI,KAAKm7B,uBAAuB9yB,YACrBrI,KAAKm7B,uBAAuB9yB,IAEvC,MAAMo2B,EAAWhZ,EAAM,KAAOpd,GAC1Bo2B,IACAz+B,KAAKm7B,uBAAuB9yB,GAAOrI,KAAK+8B,GAAG10B,EAAKo2B,GAExD,CACAz+B,KAAKi7B,iBEtTb,SAAqCn8B,EAAS0U,EAAM0I,GAChD,MAAM,WAAEsS,GAAehb,EACvB,IAAK,MAAMnL,KAAOmL,EAAM,CACpB,MAAMkrB,EAAYlrB,EAAKnL,GACjBs2B,EAAYziB,EAAK7T,GACvB,IAAI4kB,EAAAA,GAAAA,GAAcyR,GAKd5/B,EAAQ4tB,SAASrkB,EAAKq2B,GAClB1R,GAAwBwB,IACxBA,EAAW/E,IAAIphB,QAUlB,IAAI4kB,EAAAA,GAAAA,GAAc0R,GAKnB7/B,EAAQ4tB,SAASrkB,GAAKmd,EAAAA,GAAAA,GAAYkZ,EAAW,CAAE9jB,MAAO9b,KAClDkuB,GAAwBwB,IACxBA,EAAW7D,OAAOtiB,QAGrB,GAAIs2B,IAAcD,EAMnB,GAAI5/B,EAAQ2tB,SAASpkB,GAAM,CACvB,MAAMu2B,EAAgB9/B,EAAQslB,SAAS/b,IAEtCu2B,EAAc9P,aAAe8P,EAAc9jB,IAAI4jB,EACpD,KACK,CACD,MAAM1B,EAAcl+B,EAAQw/B,eAAej2B,GAC3CvJ,EAAQ4tB,SAASrkB,GAAKmd,EAAAA,GAAAA,QAA4B9f,IAAhBs3B,EAA4BA,EAAc0B,EAAW,CAAE9jB,MAAO9b,IACpG,CAER,CAEA,IAAK,MAAMuJ,KAAO6T,OACIxW,IAAd8N,EAAKnL,IACLvJ,EAAQ+/B,YAAYx2B,GAE5B,OAAOmL,CACX,CF+PgCsrB,CAA4B9+B,KAAMA,KAAK67B,4BAA4BpW,EAAOsE,GAAY/pB,KAAKi7B,kBAC/Gj7B,KAAK++B,wBACL/+B,KAAK++B,wBAEb,CACAnf,WACI,OAAO5f,KAAKylB,KAChB,CAIAuZ,WAAW97B,GACP,IAAImL,EACJ,OAAsC,QAA9BA,EAAKrO,KAAKylB,MAAMwZ,gBAA6B,IAAP5wB,OAAgB,EAASA,EAAGnL,EAC9E,CAIA2Z,uBACI,OAAO7c,KAAKylB,MAAM7G,UACtB,CACAkD,wBACI,OAAO9hB,KAAKylB,MAAM1lB,kBACtB,CACAm/B,wBACI,IAAI7wB,EACJ,OAAOrO,KAAK66B,cAAgB76B,KAA8B,QAAtBqO,EAAKrO,KAAKqF,cAA2B,IAAPgJ,OAAgB,EAASA,EAAG6wB,uBAClG,CACApO,oBACI,IAAIziB,EAAIC,EACR,GAF8B,UAAH,8CAGvB,OAA8B,QAAtBD,EAAKrO,KAAKqF,cAA2B,IAAPgJ,OAAgB,EAASA,EAAGyiB,oBACtE,IAAK9wB,KAAK86B,sBAAuB,CAC7B,MAAMnU,GAAkC,QAAtBrY,EAAKtO,KAAKqF,cAA2B,IAAPiJ,OAAgB,EAASA,EAAGwiB,sBAAwB,CAAC,EAIrG,YAH2BprB,IAAvB1F,KAAKylB,MAAMpB,UACXsC,EAAQtC,QAAUrkB,KAAKylB,MAAMpB,SAE1BsC,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIhkB,EAAI,EAAGA,EAAIw8B,GAAiBx8B,IAAK,CACtC,MAAMO,EAAOk8B,GAAaz8B,GACpBwuB,EAAOnxB,KAAKylB,MAAMviB,KACpBmuB,EAAAA,GAAAA,GAAeF,KAAkB,IAATA,KACxBxK,EAAQzjB,GAAQiuB,EAExB,CACA,OAAOxK,CACX,CAIAuV,gBAAgB7M,GACZ,IAAIhhB,EACJ,MAAMgxB,EAAqBr/B,KAAKk/B,wBAChC,GAAIG,EAEA,OAD8C,QAA7ChxB,EAAKgxB,EAAmBnR,uBAAoC,IAAP7f,GAAyBA,EAAGob,IAAI4F,GAC/E,IAAMgQ,EAAmBnR,gBAAgBV,OAAO6B,EAE/D,CAIA3C,SAASrkB,EAAKrE,GAENA,IAAUhE,KAAKkH,OAAOkY,IAAI/W,KAC1BrI,KAAK6+B,YAAYx2B,GACjBrI,KAAKm8B,kBAAkB9zB,EAAKrE,IAEhChE,KAAKkH,OAAO4T,IAAIzS,EAAKrE,GACrBhE,KAAKq7B,aAAahzB,GAAOrE,EAAMob,KACnC,CAIAyf,YAAYx2B,GACR,IAAIgG,EACJrO,KAAKkH,OAAOsmB,OAAOnlB,GACyB,QAA3CgG,EAAKrO,KAAKg7B,mBAAmB5b,IAAI/W,UAAyB,IAAPgG,GAAyBA,IAC7ErO,KAAKg7B,mBAAmBxN,OAAOnlB,UACxBrI,KAAKq7B,aAAahzB,GACzBrI,KAAKs/B,2BAA2Bj3B,EAAKrI,KAAKw7B,YAC9C,CAIA/O,SAASpkB,GACL,OAAOrI,KAAKkH,OAAOmT,IAAIhS,EAC3B,CACA+b,SAAS/b,EAAKgV,GACV,GAAIrd,KAAKylB,MAAMve,QAAUlH,KAAKylB,MAAMve,OAAOmB,GACvC,OAAOrI,KAAKylB,MAAMve,OAAOmB,GAE7B,IAAIrE,EAAQhE,KAAKkH,OAAOkY,IAAI/W,GAK5B,YAJc3C,IAAV1B,QAAwC0B,IAAjB2X,IACvBrZ,GAAQwhB,EAAAA,GAAAA,GAAYnI,EAAc,CAAEzC,MAAO5a,OAC3CA,KAAK0sB,SAASrkB,EAAKrE,IAEhBA,CACX,CAMAu7B,UAAUl3B,GACN,YAAkC3C,IAA3B1F,KAAKq7B,aAAahzB,IAAuBrI,KAAKjB,QAE/CiB,KAAKw/B,sBAAsBx/B,KAAKjB,QAASsJ,EAAKrI,KAAKzB,SADnDyB,KAAKq7B,aAAahzB,EAE5B,CAKAo3B,cAAcp3B,EAAKrE,GACfhE,KAAK07B,WAAWrzB,GAAOrE,CAC3B,CAKAwuB,cAAcnqB,GACV,IAAIgG,EACJ,MAAM,QAAEgW,GAAYrkB,KAAKylB,MACnBia,EAAsC,kBAAZrb,GAA2C,kBAAZA,EACD,QAAvDhW,GAAKge,EAAAA,GAAAA,GAAwBrsB,KAAKylB,MAAOpB,UAA6B,IAAPhW,OAAgB,EAASA,EAAGhG,QAC5F3C,EAIN,GAAI2e,QAAgC3e,IAArBg6B,EACX,OAAOA,EAMX,MAAMrhC,EAAS2B,KAAK2/B,uBAAuB3/B,KAAKylB,MAAOpd,GACvD,YAAe3C,IAAXrH,IAAyB4uB,EAAAA,GAAAA,GAAc5uB,QAMRqH,IAA5B1F,KAAK27B,cAActzB,SACD3C,IAArBg6B,OACEh6B,EACA1F,KAAK07B,WAAWrzB,GARXhK,CASf,CACA0+B,GAAGz+B,EAAWiI,GAIV,OAHKvG,KAAKk7B,OAAO58B,KACb0B,KAAKk7B,OAAO58B,GAAa,IAAIshC,GAAAA,GAE1B5/B,KAAKk7B,OAAO58B,GAAWmrB,IAAIljB,EACtC,CACA+oB,OAAOhxB,GACI,IAAP,IAAI+P,EAAG,mBADUwxB,EAAI,iCAAJA,EAAI,kBAEa,QAAjCxxB,EAAKrO,KAAKk7B,OAAO58B,UAA+B,IAAP+P,GAAyBA,EAAGihB,UAAUuQ,EACpF,EAEJ,MAAMT,GAAe,CAAC,aAAczP,IAC9BwP,GAAkBC,GAAa38B,OGxdrC,MAAMq9B,WAAyBrF,GAC3B2C,yBAAyBj+B,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE4gC,wBAAwB3gC,GAAS,GAAK,CACnD,CACAugC,uBAAuBla,EAAOpd,GAC1B,IAAIgG,EACJ,OAA8B,QAAtBA,EAAKoX,EAAMZ,aAA0B,IAAPxW,OAAgB,EAASA,EAAGhG,EACtE,CACAi3B,2BAA2Bj3B,EAAK,GAAiB,IAAjB,KAAE23B,EAAI,MAAEnb,GAAO,SACpCmb,EAAK33B,UACLwc,EAAMxc,EACjB,CACAm2B,iCAAiC,EAAD,EAAgEyB,GAAW,IAA1E,WAAErhB,EAAU,cAAEgO,KAAkBvuB,GAAQ,GAAE,gBAAE6hC,GAAiB,EACtFv7B,ErBmFZ,SAAmBtG,EAAQugB,EAAYc,GACnC,IAAIrR,EACJ,MAAM1J,EAAS,CAAC,EAChB,IAAK,MAAM0D,KAAOhK,EAAQ,CACtB,MAAM8hC,EAAmBpT,GAAwB1kB,EAAKuW,GACtDja,EAAO0D,QACkB3C,IAArBy6B,EACMA,EACuC,QAAtC9xB,EAAKqR,EAAc0E,SAAS/b,UAAyB,IAAPgG,OAAgB,EAASA,EAAG+Q,KACzF,CACA,OAAOza,CACX,CqB9FqBy7B,CAAU/hC,EAAQugB,GAAc,CAAC,EAAG5e,MAYjD,GARIkgC,IACItT,IACAA,EAAgBsT,EAAgBtT,IAChCvuB,IACAA,EAAS6hC,EAAgB7hC,IACzBsG,IACAA,EAASu7B,EAAgBv7B,KAE7Bs7B,EAAW,ErBkBvB,SAAiCvgB,EAAerhB,EAAQsG,GACpD,IAAI0J,EAAIC,EACR,MAAM+xB,EAAep2B,OAAOgL,KAAK5W,GAAQkf,QAAQlV,IAASqX,EAAc+M,SAASpkB,KAC3Ei4B,EAAeD,EAAa59B,OAClC,GAAK69B,EAEL,IAAK,IAAI39B,EAAI,EAAGA,EAAI29B,EAAc39B,IAAK,CACnC,MAAM0F,EAAMg4B,EAAa19B,GACnB49B,EAAcliC,EAAOgK,GAC3B,IAAIrE,EAAQ,KAKR0L,MAAMC,QAAQ4wB,KACdv8B,EAAQu8B,EAAY,IAOV,OAAVv8B,IACAA,EAAoG,QAA3FsK,EAA4B,QAAtBD,EAAK1J,EAAO0D,UAAyB,IAAPgG,EAAgBA,EAAKqR,EAAc6f,UAAUl3B,UAAyB,IAAPiG,EAAgBA,EAAKjQ,EAAOgK,SAM9H3C,IAAV1B,GAAiC,OAAVA,IAEN,kBAAVA,IPhFc,iBAAiBoH,KOiFnBpH,IAAU0nB,GAAkB1nB,IAE/CA,EAAQ6G,WAAW7G,IAEbkoB,GAAcloB,IAAUoK,GAAQhD,KAAKm1B,KAC3Cv8B,EAAQuK,GAAkBlG,EAAKk4B,IAEnC7gB,EAAcgN,SAASrkB,GAAKmd,EAAAA,GAAAA,GAAYxhB,EAAO,CAAE4W,MAAO8E,UACpCha,IAAhBf,EAAO0D,KACP1D,EAAO0D,GAAOrE,GAEJ,OAAVA,GACA0b,EAAc+f,cAAcp3B,EAAKrE,GACzC,CACJ,CqB/DYw8B,CAAwBxgC,KAAM3B,EAAQsG,GACtC,MAAM6J,EAASyrB,GAAgBj6B,KAAM3B,EAAQsG,EAAQioB,GACrDA,EAAgBpe,EAAOoe,cACvBvuB,EAASmQ,EAAOnQ,MACpB,CACA,MAAO,CACHugB,aACAgO,mBACGvuB,EAEX,EChCJ,MAAMoiC,WAA0BX,GAC5BN,sBAAsB12B,EAAUT,GAC5B,GAAIilB,GAAAA,EAAAA,IAAmBjlB,GAAM,CACzB,MAAMq4B,EAActiB,GAAoB/V,GACxC,OAAOq4B,GAAcA,EAAY9jB,SAAe,CACpD,CACK,CACD,MAAM+jB,GAVQ7hC,EAUyBgK,EATxC9G,OAAOgmB,iBAAiBlpB,IAUjBkF,IAASujB,EAAAA,GAAAA,GAAclf,GACvBs4B,EAAc1Y,iBAAiB5f,GAC/Bs4B,EAAct4B,KAAS,EAC7B,MAAwB,kBAAVrE,EAAqBA,EAAMkkB,OAASlkB,CACtD,CAfR,IAA0BlF,CAgBtB,CACAu/B,2BAA2Bv1B,EAAU,GAAwB,IAAxB,mBAAE/I,GAAoB,EACvD,OAAO8I,GAAmBC,EAAU/I,EACxC,CACAq+B,MAAM5C,EAAaH,EAAc98B,EAASknB,IACtCmb,EAAAA,GAAAA,GAAgBpF,EAAaH,EAAc98B,EAASknB,EAAMb,kBAC9D,CACAiX,4BAA4BpW,EAAOsE,GAC/B,OAAO8R,EAAAA,GAAAA,GAA4BpW,EAAOsE,EAC9C,CACAgV,yBACQ/+B,KAAK6gC,oBACL7gC,KAAK6gC,2BACE7gC,KAAK6gC,mBAEhB,MAAM,SAAEjG,GAAa56B,KAAKylB,OACtBwH,EAAAA,GAAAA,GAAc2N,KACd56B,KAAK6gC,kBAAoBjG,EAASmC,GAAG,UAAWvY,IACxCxkB,KAAKjB,UACLiB,KAAKjB,QAAQ+hC,YAAe,GAAEtc,IAAQ,IAGtD,CACA+W,eAAezyB,EAAU0yB,EAAauF,EAAWhgB,IAC7CigB,EAAAA,GAAAA,GAAWl4B,EAAU0yB,EAAauF,EAAWhgB,EACjD,E,wDCxCJ,MAAMkgB,WAAyBnB,GAC3BjgC,cACIqhC,SAASC,WACTnhC,KAAKohC,UAAW,CACpB,CACAzB,uBAAuBla,EAAOpd,GAC1B,OAAOod,EAAMpd,EACjB,CACAm3B,sBAAsB12B,EAAUT,GAC5B,IAAIgG,EACJ,OAAIif,GAAAA,EAAAA,IAAmBjlB,IACyB,QAAnCgG,EAAK+P,GAAoB/V,UAAyB,IAAPgG,OAAgB,EAASA,EAAGuO,UAAY,GAEhGvU,EAAOg5B,GAAAA,EAAAA,IAAwBh5B,GAA0BA,GAAnBqlB,EAAAA,GAAAA,GAAYrlB,GAC3CS,EAASw4B,aAAaj5B,GACjC,CACAg2B,6BACI,M3CjBgB,CACpBvgC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,G2CmBrC,CACAw3B,4BAA4BpW,EAAOsE,GAC/B,OAAO8R,EAAAA,GAAAA,GAA4BpW,EAAOsE,EAC9C,CACAqU,MAAM5C,EAAaH,EAAc98B,EAASknB,IACtC8b,EAAAA,GAAAA,GAAc/F,EAAaH,EAAc98B,EAASyB,KAAKohC,SAAU3b,EAAMb,kBAC3E,CACA2W,eAAezyB,EAAU0yB,EAAauF,EAAWhgB,IAC7CygB,EAAAA,GAAAA,GAAU14B,EAAU0yB,EAAauF,EAAWhgB,EAChD,CACAib,MAAMlzB,GACF9I,KAAKohC,UAAWA,EAAAA,GAAAA,GAASt4B,EAAS24B,SAClCP,MAAMlF,MAAMlzB,EAChB,E,eCtCJ,MCGM44B,GAAe,CACjBC,SDJ2B,CAAC7D,EAAWv/B,KAChCqjC,EAAAA,GAAAA,GAAe9D,GAChB,IAAImD,GAAiB1iC,EAAS,CAAEsjC,4BAA4B,IAC5D,IAAIpB,GAAkBliC,EAAS,CAAEsjC,4BAA4B,OCEhEpT,MACAyG,ICJP,MAAM4M,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQr/B,OACrBu/B,GAAYh+B,GAA2B,kBAAVA,EAAqB6G,WAAW7G,GAASA,EACtEi+B,GAAQj+B,GAA2B,kBAAVA,GAAsBsjB,GAAAA,GAAAA,KAAQtjB,GA0C7D,SAASk+B,GAAUh7B,EAAQi7B,GACvB,YAA8Bz8B,IAAvBwB,EAAOi7B,GACRj7B,EAAOi7B,GACPj7B,EAAO2jB,YACjB,CAwBA,MAAMuX,GAAkBC,GAAS,EAAG,GAAK3wB,IACnC4wB,GAAmBD,GAAS,GAAK,IAAM/xB,IAC7C,SAAS+xB,GAAS/9B,EAAKD,EAAKgF,GACxB,OAAQC,GAEAA,EAAIhF,EACG,EACPgF,EAAIjF,EACG,EACJgF,EAAOxF,EAASS,EAAKD,EAAKiF,GAEzC,CCrFA,SAASi5B,GAAan+B,EAAMo+B,GACxBp+B,EAAKE,IAAMk+B,EAAWl+B,IACtBF,EAAKC,IAAMm+B,EAAWn+B,GAC1B,CAMA,SAASo+B,GAAY36B,EAAK46B,GACtBH,GAAaz6B,EAAIhK,EAAG4kC,EAAU5kC,GAC9BykC,GAAaz6B,EAAI/J,EAAG2kC,EAAU3kC,EAClC,CCVA,SAAS4kC,GAAiB9kC,EAAOkH,EAAWF,EAAOD,EAAa+C,GAM5D,OAJA9J,EAAQ4J,GADR5J,GAASkH,EACiB,EAAIF,EAAOD,QACpBc,IAAbiC,IACA9J,EAAQ4J,GAAW5J,EAAO,EAAI8J,EAAU/C,IAErC/G,CACX,CAsBA,SAAS+kC,GAAqBx+B,EAAMgE,EAAY,EAA4BzD,EAAQk+B,GAAY,IAA/Cx6B,EAAKC,EAAUC,GAAU,GAlB1E,SAAyBnE,GAA8F,IAAxFW,EAAY,UAAH,6CAAG,EAAGF,EAAQ,UAAH,6CAAG,EAAGF,EAAS,UAAH,6CAAG,GAAKgD,EAAQ,uCAAE66B,EAAa,UAAH,6CAAGp+B,EAAMy+B,EAAa,UAAH,6CAAGz+B,EACzGgI,GAAAA,GAAAA,KAAarH,KACbA,EAAY8F,WAAW9F,GAEvBA,EADyBb,EAAI2+B,EAAWv+B,IAAKu+B,EAAWx+B,IAAKU,EAAY,KAC1C89B,EAAWv+B,KAE9C,GAAyB,kBAAdS,EACP,OACJ,IAAIH,EAAcV,EAAIs+B,EAAWl+B,IAAKk+B,EAAWn+B,IAAKM,GAClDP,IAASo+B,IACT59B,GAAeG,GACnBX,EAAKE,IAAMq+B,GAAiBv+B,EAAKE,IAAKS,EAAWF,EAAOD,EAAa+C,GACrEvD,EAAKC,IAAMs+B,GAAiBv+B,EAAKC,IAAKU,EAAWF,EAAOD,EAAa+C,EACzE,CAMIm7B,CAAgB1+B,EAAMgE,EAAWC,GAAMD,EAAWE,GAAWF,EAAWG,GAAYH,EAAWvD,MAAOF,EAAQk+B,EAClH,CAIA,MAAMp6B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASq6B,GAAoBj7B,EAAKM,EAAYs6B,EAAWM,GACrDJ,GAAqB96B,EAAIhK,EAAGsK,EAAYK,GAAqB,OAAdi6B,QAAoC,IAAdA,OAAuB,EAASA,EAAU5kC,EAAiB,OAAdklC,QAAoC,IAAdA,OAAuB,EAASA,EAAUllC,GAClL8kC,GAAqB96B,EAAI/J,EAAGqK,EAAYM,GAAqB,OAAdg6B,QAAoC,IAAdA,OAAuB,EAASA,EAAU3kC,EAAiB,OAAdilC,QAAoC,IAAdA,OAAuB,EAASA,EAAUjlC,EACtL,CCjDA,SAASklC,GAAgB7gC,GACrB,OAA2B,IAApBA,EAAM2C,WAAmC,IAAhB3C,EAAMyC,KAC1C,CACA,SAASq+B,GAAY9gC,GACjB,OAAO6gC,GAAgB7gC,EAAMtE,IAAMmlC,GAAgB7gC,EAAMrE,EAC7D,CACA,SAASolC,GAAUhkC,EAAGC,GAClB,OAAQD,EAAErB,EAAEwG,MAAQlF,EAAEtB,EAAEwG,KACpBnF,EAAErB,EAAEuG,MAAQjF,EAAEtB,EAAEuG,KAChBlF,EAAEpB,EAAEuG,MAAQlF,EAAErB,EAAEuG,KAChBnF,EAAEpB,EAAEsG,MAAQjF,EAAErB,EAAEsG,GACxB,CACA,SAAS++B,GAAYt7B,GACjB,OAAO3D,EAAW2D,EAAIhK,GAAKqG,EAAW2D,EAAI/J,EAC9C,C,eCdA,MAAMslC,GACFxjC,cACIG,KAAKqqB,QAAU,EACnB,CACAZ,IAAIpC,IACAic,EAAAA,GAAAA,IAActjC,KAAKqqB,QAAShD,GAC5BA,EAAKoU,gBACT,CACA9Q,OAAOtD,GAKH,IAJAkc,EAAAA,GAAAA,IAAWvjC,KAAKqqB,QAAShD,GACrBA,IAASrnB,KAAKwjC,WACdxjC,KAAKwjC,cAAW99B,GAEhB2hB,IAASrnB,KAAKyjC,KAAM,CACpB,MAAMD,EAAWxjC,KAAKqqB,QAAQrqB,KAAKqqB,QAAQ5nB,OAAS,GAChD+gC,GACAxjC,KAAKkqB,QAAQsZ,EAErB,CACJ,CACArZ,SAAS9C,GACL,MAAMqc,EAAc1jC,KAAKqqB,QAAQsZ,WAAWC,GAAWvc,IAASuc,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAI7gC,EAAI+gC,EAAa/gC,GAAK,EAAGA,IAAK,CACnC,MAAMihC,EAAS5jC,KAAKqqB,QAAQ1nB,GAC5B,IAAyB,IAArBihC,EAAOnjB,UAAqB,CAC5B+iB,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAxjC,KAAKkqB,QAAQsZ,IACN,EAKf,CACAtZ,QAAQ7C,EAAMwc,GACV,IAAIx1B,EACJ,MAAMm1B,EAAWxjC,KAAKyjC,KACtB,GAAIpc,IAASmc,IAEbxjC,KAAKwjC,SAAWA,EAChBxjC,KAAKyjC,KAAOpc,EACZA,EAAKyc,OACDN,GAAU,CACVA,EAAS16B,UAAY06B,EAAS/H,iBAC9BpU,EAAKoU,iBACLpU,EAAK0c,WAAaP,EACdK,IACAxc,EAAK0c,WAAWC,iBAAkB,GAElCR,EAASS,WACT5c,EAAK4c,SAAWT,EAASS,SACzB5c,EAAK4c,SAAS5I,aACVmI,EAASU,iBAAmBV,EAASnI,eAEpB,QAApBhtB,EAAKgZ,EAAKlE,YAAyB,IAAP9U,OAAgB,EAASA,EAAG81B,cACzD9c,EAAK+c,eAAgB,GAEzB,MAAM,UAAEC,GAAchd,EAAK9oB,SACT,IAAd8lC,GACAb,EAASc,MAcjB,CACJ,CACAC,wBACIvkC,KAAKqqB,QAAQiC,SAASjF,IAClB,IAAIhZ,EAAIC,EAAI4nB,EAAIC,EAAIqO,EAC0B,QAA7Cl2B,GAAMD,EAAKgZ,EAAK9oB,SAASsoB,sBAAmC,IAAPvY,GAAyBA,EAAGlE,KAAKiE,GACmB,QAAzGm2B,EAAkC,QAA5BtO,EAAK7O,EAAKod,oBAAiC,IAAPvO,OAAgB,GAAUC,EAAKD,EAAG33B,SAASsoB,sBAAmC,IAAP2d,GAAyBA,EAAGp6B,KAAK+rB,EAAG,GAE9J,CACAsF,iBACIz7B,KAAKqqB,QAAQiC,SAASjF,IAClBA,EAAKve,UAAYue,EAAKoU,gBAAe,EAAM,GAEnD,CAKAiJ,qBACQ1kC,KAAKyjC,MAAQzjC,KAAKyjC,KAAKQ,WACvBjkC,KAAKyjC,KAAKQ,cAAWv+B,EAE7B,EC1GJ,SAASi/B,GAAyBviC,EAAOimB,EAAWuc,GAChD,IAAIh8B,EAAY,GAOhB,MAAMi8B,EAAaziC,EAAMtE,EAAEiH,UAAYsjB,EAAUvqB,EAC3CgnC,EAAa1iC,EAAMrE,EAAEgH,UAAYsjB,EAAUtqB,EAWjD,IAVI8mC,GAAcC,KACdl8B,EAAa,eAAci8B,QAAiBC,YAM5B,IAAhBzc,EAAUvqB,GAA2B,IAAhBuqB,EAAUtqB,IAC/B6K,GAAc,SAAQ,EAAIyf,EAAUvqB,MAAM,EAAIuqB,EAAUtqB,OAExD6mC,EAAiB,CACjB,MAAM,OAAEv9B,EAAM,QAAEC,EAAO,QAAEC,GAAYq9B,EACjCv9B,IACAuB,GAAc,UAASvB,UACvBC,IACAsB,GAAc,WAAUtB,UACxBC,IACAqB,GAAc,WAAUrB,SAChC,CAKA,MAAMw9B,EAAgB3iC,EAAMtE,EAAE+G,MAAQwjB,EAAUvqB,EAC1CknC,EAAgB5iC,EAAMrE,EAAE8G,MAAQwjB,EAAUtqB,EAIhD,OAHsB,IAAlBgnC,GAAyC,IAAlBC,IACvBp8B,GAAc,SAAQm8B,MAAkBC,MAErCp8B,GAAa,MACxB,CCvCA,MAAMq8B,GAAiB,CAAC9lC,EAAGC,IAAMD,EAAE2oB,MAAQ1oB,EAAE0oB,MCG7C,MAAMod,GACFrlC,cACIG,KAAK46B,SAAW,GAChB56B,KAAKmlC,SAAU,CACnB,CACA1b,IAAI4F,IACAiU,EAAAA,GAAAA,IAActjC,KAAK46B,SAAUvL,GAC7BrvB,KAAKmlC,SAAU,CACnB,CACAxa,OAAO0E,IACHkU,EAAAA,GAAAA,IAAWvjC,KAAK46B,SAAUvL,GAC1BrvB,KAAKmlC,SAAU,CACnB,CACA7Y,QAAQ/lB,GACJvG,KAAKmlC,SAAWnlC,KAAK46B,SAASzL,KAAK8V,IACnCjlC,KAAKmlC,SAAU,EACfnlC,KAAK46B,SAAStO,QAAQ/lB,EAC1B,E,eCEJ,MAAM6+B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMrC,IAAIre,GAAK,EACT,SAASse,GAAqB,GAA4F,IAA5F,qBAAEC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiB,EACpH,OAAO,MACH7lC,YAAY8lC,GAAsH,IAA3GtK,EAAe,UAAH,6CAAG,CAAC,EAAGh2B,EAAS,UAAH,6CAAqB,OAAlBkgC,QAA4C,IAAlBA,OAA2B,EAASA,IAI7GvlC,KAAK+mB,GAAKA,KAIV/mB,KAAKotB,YAAc,EAOnBptB,KAAK46B,SAAW,IAAI1gB,IAKpBla,KAAKzB,QAAU,CAAC,EAMhByB,KAAK4lC,iBAAkB,EACvB5lC,KAAKghB,oBAAqB,EAO1BhhB,KAAKokC,eAAgB,EACrBpkC,KAAKi9B,kBAAmB,EAKxBj9B,KAAK6lC,mBAAoB,EAIzB7lC,KAAK8lC,uBAAwB,EAC7B9lC,KAAK+lC,uBAAwB,EAK7B/lC,KAAKmkC,YAAa,EAIlBnkC,KAAKgmC,OAAQ,EAKbhmC,KAAKimC,YAAa,EAIlBjmC,KAAKkmC,sBAAuB,EAS5BlmC,KAAKqoB,UAAY,CAAEvqB,EAAG,EAAGC,EAAG,GAI5BiC,KAAKmmC,cAAgB,IAAIpL,IAEzB/6B,KAAKomC,eAAiB,IAAIrL,IAC1B/6B,KAAKqmC,kBAAoB,KACjBrmC,KAAKmkC,aACLnkC,KAAKmkC,YAAa,EAClBnkC,KAAKsmC,oBACT,EAOJtmC,KAAKumC,iBAAmB,KACpBvmC,KAAKwmC,MAAMla,QAAQma,IACnBzmC,KAAKwmC,MAAMla,QAAQoa,IACnB1mC,KAAKwmC,MAAMla,QAAQqa,GAAe,EAEtC3mC,KAAK4mC,cAAe,EACpB5mC,KAAK6mC,WAAY,EACjB7mC,KAAK8mC,kBAAoB,EAKzB9mC,KAAK+mC,YAAc,IAAIhM,IACvB/6B,KAAK2lC,UAAYA,EACjB3lC,KAAKq7B,aAAeA,EACpBr7B,KAAKmjB,KAAO9d,EAASA,EAAO8d,MAAQ9d,EAASrF,KAC7CA,KAAKgnC,KAAO3hC,EAAS,IAAIA,EAAO2hC,KAAM3hC,GAAU,GAChDrF,KAAKqF,OAASA,EACdrF,KAAK8nB,MAAQziB,EAASA,EAAOyiB,MAAQ,EAAI,EACzC6d,GAAa3lC,KAAKmjB,KAAK8jB,sBAAsBtB,EAAW3lC,MACxD,IAAK,IAAI2C,EAAI,EAAGA,EAAI3C,KAAKgnC,KAAKvkC,OAAQE,IAClC3C,KAAKgnC,KAAKrkC,GAAGujC,sBAAuB,EAEpClmC,KAAKmjB,OAASnjB,OACdA,KAAKwmC,MAAQ,IAAItB,GACzB,CACAzmC,iBAAiByE,EAAMjF,GAInB,OAHK+B,KAAKmmC,cAAc9rB,IAAInX,IACxBlD,KAAKmmC,cAAcrrB,IAAI5X,EAAM,IAAI08B,GAAAA,GAE9B5/B,KAAKmmC,cAAc/mB,IAAIlc,GAAMumB,IAAIxrB,EAC5C,CACAipC,gBAAgBhkC,GACZ,MAAMikC,EAAsBnnC,KAAKmmC,cAAc/mB,IAAIlc,GAAM,2BADpC28B,EAAI,iCAAJA,EAAI,kBAED,OAAxBsH,QAAwD,IAAxBA,GAA0CA,EAAoB7X,UAAUuQ,EAC5G,CACAuH,aAAalkC,GACT,OAAOlD,KAAKmmC,cAAc9rB,IAAInX,EAClC,CACA+jC,sBAAsBtB,EAAWte,GAC7BrnB,KAAKomC,eAAetrB,IAAI6qB,EAAWte,EACvC,CAIA2U,MAAMlzB,GAAiC,IAAvBs7B,EAAgB,UAAH,8CACzB,IAAI/1B,EACJ,GAAIrO,KAAK8I,SACL,OACJ9I,KAAKgmC,MACDl9B,aAAoBu+B,YAAmC,QAArBv+B,EAAS24B,QAC/CzhC,KAAK8I,SAAWA,EAChB,MAAM,SAAEugB,EAAQ,OAAE9jB,EAAM,cAAEma,GAAkB1f,KAAKzB,QAUjD,GATImhB,IAAkBA,EAAc3gB,SAChC2gB,EAAcsc,MAAMlzB,GAExB9I,KAAKmjB,KAAKqjB,MAAM/c,IAAIzpB,MACG,QAAtBqO,EAAKrO,KAAKqF,cAA2B,IAAPgJ,GAAyBA,EAAGusB,SAASnR,IAAIzpB,MACxEA,KAAK2lC,WAAa3lC,KAAKmjB,KAAKijB,eAAe5Y,OAAOxtB,KAAK2lC,WACnDvB,IAAkB7+B,GAAU8jB,KAC5BrpB,KAAKokC,eAAgB,GAErBkB,EAAsB,CACtB,IAAIgC,EACJ,MAAMC,EAAsB,IAAOvnC,KAAKmjB,KAAK4iB,uBAAwB,EACrET,EAAqBx8B,GAAU,KAC3B9I,KAAKmjB,KAAK4iB,uBAAwB,EAClCuB,GAAeA,IACfA,EAAchwB,GAAMiwB,EAAqB,KACrC1d,GAAAA,EAAAA,yBACAA,GAAAA,EAAAA,wBAA+C,EAC/C7pB,KAAKwmC,MAAMla,QAAQkb,IACvB,GAER,CACIne,GACArpB,KAAKmjB,KAAKskB,mBAAmBpe,EAAUrpB,OAGd,IAAzBA,KAAKzB,QAAQqZ,SACb8H,IACC2J,GAAY9jB,IACbvF,KAAKvB,iBAAiB,aAAa,IAA+E,IAA9E,MAAE2D,EAAK,iBAAEmjB,EAAgB,yBAAEmiB,EAA0BniC,OAAQoiC,GAAY,EACzG,IAAIt5B,EAAIC,EAAI4nB,EAAIC,EAAIqO,EACpB,GAAIxkC,KAAK4nC,yBAGL,OAFA5nC,KAAK3B,YAASqH,OACd1F,KAAK6nC,oBAAiBniC,GAI1B,MAAMoiC,EAAmI,QAA/Gx5B,EAAwC,QAAlCD,EAAKrO,KAAKzB,QAAQqgB,kBAA+B,IAAPvQ,EAAgBA,EAAKqR,EAAc7C,8BAA2C,IAAPvO,EAAgBA,EAAKy5B,IAChK,uBAAEC,EAAsB,0BAAEC,GAA+BvoB,EAAcE,WAKvEsoB,GAAiBloC,KAAKmoC,eACvBhF,GAAUnjC,KAAKmoC,aAAcR,IAC9BD,EAMEU,GAAgC7iB,GAAoBmiB,EAC1D,IAAgC,QAA1BxR,EAAKl2B,KAAK+jC,kBAA+B,IAAP7N,OAAgB,EAASA,EAAGptB,WAChEs/B,GACC7iB,IACI2iB,IAAkBloC,KAAK2b,kBAAoB,CAC5C3b,KAAK+jC,aACL/jC,KAAKykC,aAAezkC,KAAK+jC,WACzB/jC,KAAKykC,aAAaA,kBAAe/+B,GAErC1F,KAAKqoC,mBAAmBjmC,EAAOgmC,GAC/B,MAAME,EAAmB,IAClBrpB,GAAmB6oB,EAAkB,UACxC1vB,OAAQ4vB,EACR1vB,WAAY2vB,GAEZvoB,EAAcsP,qBACdsZ,EAAiBhxB,MAAQ,EACzBgxB,EAAiB1mC,MAAO,GAE5B5B,KAAK8b,eAAewsB,EACxB,MAOS/iB,GAC0B,IAA3BvlB,KAAK8mC,mBACLU,GAAgBxnC,MAEpBA,KAAKuqB,WAA2D,QAA7Cia,GAAMrO,EAAKn2B,KAAKzB,SAASsoB,sBAAmC,IAAP2d,GAAyBA,EAAGp6B,KAAK+rB,IAE7Gn2B,KAAKmoC,aAAeR,CAAS,GAGzC,CACAhL,UACI,IAAItuB,EAAIC,EACRtO,KAAKzB,QAAQ8qB,UAAYrpB,KAAKiqB,aAC9BjqB,KAAKmjB,KAAKqjB,MAAM7b,OAAO3qB,MACI,QAA1BqO,EAAKrO,KAAKoqB,kBAA+B,IAAP/b,GAAyBA,EAAGsc,OAAO3qB,MAC/C,QAAtBsO,EAAKtO,KAAKqF,cAA2B,IAAPiJ,GAAyBA,EAAGssB,SAASpN,OAAOxtB,MAC3EA,KAAK8I,cAAWpD,EAChBxD,EAAAA,GAAAA,UAAqBlC,KAAKumC,iBAC9B,CAEAgC,cACIvoC,KAAK8lC,uBAAwB,CACjC,CACA0C,gBACIxoC,KAAK8lC,uBAAwB,CACjC,CACA2C,kBACI,OAAOzoC,KAAK8lC,uBAAyB9lC,KAAK+lC,qBAC9C,CACA6B,yBACI,IAAIv5B,EACJ,OAAQrO,KAAKghB,qBACe,QAAtB3S,EAAKrO,KAAKqF,cAA2B,IAAPgJ,OAAgB,EAASA,EAAGu5B,4BAC5D,CACR,CAEAc,cACI,IAAIr6B,EACArO,KAAKyoC,oBAETzoC,KAAKmkC,YAAa,EACI,QAArB91B,EAAKrO,KAAKwmC,aAA0B,IAAPn4B,GAAyBA,EAAGie,QAAQqc,IAClE3oC,KAAKotB,cACT,CACAnD,aAAyC,IAA9B2e,IAAwB,UAAH,+CAC5B,IAAIv6B,EAAIC,EAAI4nB,EACZ,GAAIl2B,KAAKmjB,KAAKslB,kBAEV,YAD8C,QAA7Cn6B,GAAMD,EAAKrO,KAAKzB,SAASsoB,sBAAmC,IAAPvY,GAAyBA,EAAGlE,KAAKiE,IAI3F,IADCrO,KAAKmjB,KAAKghB,YAAcnkC,KAAKmjB,KAAKulB,cAC/B1oC,KAAKokC,cACL,OACJpkC,KAAKokC,eAAgB,EACrB,IAAK,IAAIzhC,EAAI,EAAGA,EAAI3C,KAAKgnC,KAAKvkC,OAAQE,IAAK,CACvC,MAAM0kB,EAAOrnB,KAAKgnC,KAAKrkC,GACvB0kB,EAAK6e,sBAAuB,EAC5B7e,EAAKvC,aAAa,WACtB,CACA,MAAM,SAAEuE,EAAQ,OAAE9jB,GAAWvF,KAAKzB,QAClC,QAAiBmH,IAAb2jB,IAA2B9jB,EAC3B,OACJ,MAAMqf,EAA0D,QAArCsR,EAAKl2B,KAAKzB,QAAQmhB,qBAAkC,IAAPwW,OAAgB,EAASA,EAAGtW,WAAWgF,kBAC/G5kB,KAAK6oC,2BAAmD,OAAtBjkB,QAAoD,IAAtBA,OAA+B,EAASA,EAAkB5kB,KAAKq7B,aAAc,IAC7Ir7B,KAAK8oC,iBACLF,GAAyB5oC,KAAKknC,gBAAgB,aAClD,CAEAxd,YAKI,GAJyB1pB,KAAKyoC,kBAQ1B,OAHAzoC,KAAKwoC,gBACLxoC,KAAKsmC,yBACLtmC,KAAKwmC,MAAMla,QAAQyc,IAGlB/oC,KAAKmkC,aAEVnkC,KAAKmkC,YAAa,EAOdnkC,KAAKomC,eAAejY,OACpBnuB,KAAKomC,eAAe9Z,QAAQ0c,IAC5BhpC,KAAKomC,eAAexJ,SAKxB58B,KAAKwmC,MAAMla,QAAQ2c,IAKnBjpC,KAAKwmC,MAAMla,QAAQvH,IAKnB/kB,KAAKwmC,MAAMla,QAAQ4c,IACnBlpC,KAAKsmC,oBAEL6C,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,YACAA,EAAAA,GAAAA,SACJ,CACA7C,oBACItmC,KAAKwmC,MAAMla,QAAQ8c,IACnBppC,KAAK+mC,YAAYza,QAAQ+c,GAC7B,CACAC,2BACIhoC,EAAAA,GAAAA,UAAetB,KAAKumC,kBAAkB,GAAO,EACjD,CACA7b,4BAMIppB,EAAAA,GAAAA,YAAgB,KACRtB,KAAKokC,cACLpkC,KAAKmjB,KAAKuG,YAGV1pB,KAAKmjB,KAAKkjB,mBACd,GAER,CAIAyC,kBACQ9oC,KAAKikC,UAAajkC,KAAK8I,WAE3B9I,KAAKikC,SAAWjkC,KAAKupC,UACzB,CACAxkB,eACI,IAAI1W,EACJ,IAAKrO,KAAK8I,SACN,OAGJ,GADA9I,KAAK8kB,iBACC9kB,KAAKzB,QAAQ0/B,sBAAuBj+B,KAAKuqB,YAC1CvqB,KAAKokC,cACN,OASJ,GAAIpkC,KAAK+jC,aAAe/jC,KAAK+jC,WAAWj7B,SACpC,IAAK,IAAInG,EAAI,EAAGA,EAAI3C,KAAKgnC,KAAKvkC,OAAQE,IAAK,CAC1B3C,KAAKgnC,KAAKrkC,GAClBmiB,cACT,CAEJ,MAAM0kB,EAAaxpC,KAAKuF,OACxBvF,KAAKuF,OAASvF,KAAKupC,SAAQ,GAC3BvpC,KAAKypC,gBtDxZO,CACpB3rC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsD0Z7BrE,KAAKokC,eAAgB,EACrBpkC,KAAKsoB,qBAAkB5iB,EACvB1F,KAAKknC,gBAAgB,UAAWlnC,KAAKuF,OAAO4b,WACN,QAArC9S,EAAKrO,KAAKzB,QAAQmhB,qBAAkC,IAAPrR,GAAyBA,EAAGihB,OAAO,gBAAiBtvB,KAAKuF,OAAO4b,UAA0B,OAAfqoB,QAAsC,IAAfA,OAAwB,EAASA,EAAWroB,UAChM,CACA2D,eAAgC,IAAnB4kB,EAAQ,UAAH,6CAAG,UACbC,EAAmB9/B,QAAQ7J,KAAKzB,QAAQy/B,cAAgBh+B,KAAK8I,UAC7D9I,KAAKijB,QACLjjB,KAAKijB,OAAOmK,cAAgBptB,KAAKmjB,KAAKiK,aACtCptB,KAAKijB,OAAOymB,QAAUA,IACtBC,GAAmB,GAEnBA,IACA3pC,KAAKijB,OAAS,CACVmK,YAAaptB,KAAKmjB,KAAKiK,YACvBsc,QACAE,OAAQnE,EAAkBzlC,KAAK8I,UAC/BhI,OAAQ0kC,EAAcxlC,KAAK8I,WAGvC,CACA48B,iBACI,IAAIr3B,EACJ,IAAKq3B,EACD,OACJ,MAAMmE,EAAmB7pC,KAAKokC,eAAiBpkC,KAAKkmC,qBAC9C4D,EAAgB9pC,KAAKsoB,kBAAoB4a,GAAYljC,KAAKsoB,iBAC1D1D,EAA0D,QAArCvW,EAAKrO,KAAKzB,QAAQmhB,qBAAkC,IAAPrR,OAAgB,EAASA,EAAGuR,WAAWgF,kBACzGmlB,EAA+C,OAAtBnlB,QAAoD,IAAtBA,OAA+B,EAASA,EAAkB5kB,KAAKq7B,aAAc,IACpI2O,EAA8BD,IAA2B/pC,KAAK6oC,2BAChEgB,IACCC,GACG7iC,EAAajH,KAAKq7B,eAClB2O,KACJtE,EAAe1lC,KAAK8I,SAAUihC,GAC9B/pC,KAAKkmC,sBAAuB,EAC5BlmC,KAAKy7B,iBAEb,CACA8N,UAAgC,IAAxBU,IAAkB,UAAH,+CACnB,MAAMC,EAAUlqC,KAAKkjB,iBACrB,IAAI/B,EAAYnhB,KAAKmqC,oBAAoBD,GAk1BrD,IAAkBpiC,EAx0BN,OAJImiC,IACA9oB,EAAYnhB,KAAKiqC,gBAAgB9oB,IA40B7CipB,IADctiC,EAz0BGqZ,GA00BHrjB,GACdssC,GAAUtiC,EAAI/J,GA10BC,CACHqvB,YAAaptB,KAAKmjB,KAAKiK,YACvBid,YAAaH,EACb/oB,YACAka,aAAc,CAAC,EACf32B,OAAQ1E,KAAK+mB,GAErB,CACA7D,iBACI,MAAM,cAAExD,GAAkB1f,KAAKzB,QAC/B,IAAKmhB,EACD,MtDvdQ,CACpB5hB,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsDyd7B,MAAMyD,EAAM4X,EAAc7W,sBAEpB,OAAEoa,GAAWjjB,KAAKmjB,KAKxB,OAJIF,IACA/a,GAAcJ,EAAIhK,EAAGmlB,EAAOniB,OAAOhD,GACnCoK,GAAcJ,EAAI/J,EAAGklB,EAAOniB,OAAO/C,IAEhC+J,CACX,CACAqiC,oBAAoBriC,GAChB,MAAMwiC,EtDleM,CACpBxsC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsDoe7Bo+B,GAAY6H,EAAkBxiC,GAK9B,IAAK,IAAInF,EAAI,EAAGA,EAAI3C,KAAKgnC,KAAKvkC,OAAQE,IAAK,CACvC,MAAM0kB,EAAOrnB,KAAKgnC,KAAKrkC,IACjB,OAAEsgB,EAAM,QAAE1kB,GAAY8oB,EAC5B,GAAIA,IAASrnB,KAAKmjB,MAAQF,GAAU1kB,EAAQy/B,aAAc,CAKtD,GAAI/a,EAAO2mB,OAAQ,CACfnH,GAAY6H,EAAkBxiC,GAC9B,MAAQmb,OAAQsnB,GAAevqC,KAAKmjB,KAKhConB,IACAriC,GAAcoiC,EAAiBxsC,GAAIysC,EAAWzpC,OAAOhD,GACrDoK,GAAcoiC,EAAiBvsC,GAAIwsC,EAAWzpC,OAAO/C,GAE7D,CACAmK,GAAcoiC,EAAiBxsC,EAAGmlB,EAAOniB,OAAOhD,GAChDoK,GAAcoiC,EAAiBvsC,EAAGklB,EAAOniB,OAAO/C,EACpD,CACJ,CACA,OAAOusC,CACX,CACAE,eAAe1iC,GAA4B,IAAvB2iC,EAAgB,UAAH,8CAC7B,MAAMC,EtDngBM,CACpB5sC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsDqgB7Bo+B,GAAYiI,EAAgB5iC,GAC5B,IAAK,IAAInF,EAAI,EAAGA,EAAI3C,KAAKgnC,KAAKvkC,OAAQE,IAAK,CACvC,MAAM0kB,EAAOrnB,KAAKgnC,KAAKrkC,IAClB8nC,GACDpjB,EAAK9oB,QAAQy/B,cACb3W,EAAKpE,QACLoE,IAASA,EAAKlE,MACdxa,GAAa+hC,EAAgB,CACzB5sC,GAAIupB,EAAKpE,OAAOniB,OAAOhD,EACvBC,GAAIspB,EAAKpE,OAAOniB,OAAO/C,IAG1BkJ,EAAaogB,EAAKgU,eAEvB1yB,GAAa+hC,EAAgBrjB,EAAKgU,aACtC,CAIA,OAHIp0B,EAAajH,KAAKq7B,eAClB1yB,GAAa+hC,EAAgB1qC,KAAKq7B,cAE/BqP,CACX,CACAT,gBAAgBniC,GACZ,IAAIuG,EACJ,MAAMs8B,EtD3hBM,CACpB7sC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsD6hB7Bo+B,GAAYkI,EAAqB7iC,GACjC,IAAK,IAAInF,EAAI,EAAGA,EAAI3C,KAAKgnC,KAAKvkC,OAAQE,IAAK,CACvC,MAAM0kB,EAAOrnB,KAAKgnC,KAAKrkC,GACvB,IAAK0kB,EAAKve,SACN,SACJ,IAAK7B,EAAaogB,EAAKgU,cACnB,SACJv0B,EAASugB,EAAKgU,eAAiBhU,EAAKyhB,iBACpC,MAAM9F,EtDpiBE,CACpBllC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsDuiBzBo+B,GAAYO,EADI3b,EAAKnE,kBAErB6f,GAAoB4H,EAAqBtjB,EAAKgU,aAAuC,QAAxBhtB,EAAKgZ,EAAK4c,gBAA6B,IAAP51B,OAAgB,EAASA,EAAG8S,UAAW6hB,EACxI,CAIA,OAHI/7B,EAAajH,KAAKq7B,eAClB0H,GAAoB4H,EAAqB3qC,KAAKq7B,cAE3CsP,CACX,CAIAC,eAAexoC,GACXpC,KAAK6qC,YAAczoC,EACnBpC,KAAK6lC,mBAAoB,EACzB7lC,KAAKmjB,KAAKmmB,0BACd,CACA1f,WAAWrrB,GACPyB,KAAKzB,QAAU,IACRyB,KAAKzB,WACLA,EACH8lC,eAAiC3+B,IAAtBnH,EAAQ8lC,WAA0B9lC,EAAQ8lC,UAE7D,CACA0E,oBACI/oC,KAAKijB,YAASvd,EACd1F,KAAKuF,YAASG,EACd1F,KAAKikC,cAAWv+B,EAChB1F,KAAK6oC,gCAA6BnjC,EAClC1F,KAAK6qC,iBAAcnlC,EACnB1F,KAAK3B,YAASqH,EACd1F,KAAKokC,eAAgB,CACzB,CAIAsC,qBACI,IAAIr4B,EAMJ,MAAMo1B,EAAOzjC,KAAK8qC,UAOlB,GANA9qC,KAAK6lC,oBAAsB7lC,KAAK6lC,kBAAoBpC,EAAKoC,mBACzD7lC,KAAKi9B,mBAAqBj9B,KAAKi9B,iBAAmBwG,EAAKxG,mBAKlDj9B,KAAK6lC,oBAAsB7lC,KAAK+qC,+BACjC,OACJ,MAAM,OAAExlC,EAAM,SAAE8jB,GAAarpB,KAAKzB,QAIlC,GAAKyB,KAAKuF,SAAYA,GAAU8jB,GAAhC,CAQA,IAAKrpB,KAAK6qC,cAAgB7qC,KAAK6nC,eAAgB,CAE3C,MAAMmD,EAAiBhrC,KAAKirC,6BACxBD,GAAkBA,EAAezlC,QACjCvF,KAAKgrC,eAAiBA,EACtBhrC,KAAK6nC,etD1mBD,CACpB/pC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsD4mBrBrE,KAAKkrC,qBtD3mBD,CACpBptC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsD6mBrBmB,EAAqBxF,KAAKkrC,qBAAsBlrC,KAAKuF,OAAO4b,UAAW6pB,EAAezlC,OAAO4b,WAC7FshB,GAAYziC,KAAK6nC,eAAgB7nC,KAAKkrC,uBAGtClrC,KAAKgrC,eAAiBhrC,KAAK6nC,oBAAiBniC,CAEpD,CxGlmBZ,IAAyBrH,EAAQ+G,EAAUC,EwGumB/B,GAAKrF,KAAK6nC,gBAAmB7nC,KAAK6qC,YAuClC,GAlCK7qC,KAAK3B,SACN2B,KAAK3B,OtD7nBG,CACpBP,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsD+nBzBrE,KAAKmrC,qBtD9nBG,CACpBrtC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,KsDooBzBrE,KAAK6nC,gBACL7nC,KAAKkrC,uBAC2B,QAA9B78B,EAAKrO,KAAKgrC,sBAAmC,IAAP38B,OAAgB,EAASA,EAAGhQ,SxGrnB3DA,EwGsnBO2B,KAAK3B,OxGtnBJ+G,EwGsnBYpF,KAAK6nC,exGtnBPxiC,EwGsnBuBrF,KAAKgrC,eAAe3sC,OxGrnBlF8G,EAAiB9G,EAAOP,EAAGsH,EAAStH,EAAGuH,EAAOvH,GAC9CqH,EAAiB9G,EAAON,EAAGqH,EAASrH,EAAGsH,EAAOtH,IwGynB7BiC,KAAK6qC,aACNhhC,QAAQ7J,KAAKykC,cAEbzkC,KAAK3B,OAAS2B,KAAKwqC,eAAexqC,KAAKuF,OAAO4b,WAG9CshB,GAAYziC,KAAK3B,OAAQ2B,KAAKuF,OAAO4b,WAEzCtZ,GAAc7H,KAAK3B,OAAQ2B,KAAK6qC,cAMhCpI,GAAYziC,KAAK3B,OAAQ2B,KAAKuF,OAAO4b,WAKrCnhB,KAAK+qC,+BAAgC,CACrC/qC,KAAK+qC,gCAAiC,EACtC,MAAMC,EAAiBhrC,KAAKirC,6BACxBD,GACAnhC,QAAQmhC,EAAevG,gBACnB56B,QAAQ7J,KAAKykC,gBAChBuG,EAAezsC,QAAQy/B,cACxBgN,EAAe3sC,QACf2B,KAAKgrC,eAAiBA,EACtBhrC,KAAK6nC,etDvqBD,CACpB/pC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsDyqBrBrE,KAAKkrC,qBtDxqBD,CACpBptC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsD0qBrBmB,EAAqBxF,KAAKkrC,qBAAsBlrC,KAAK3B,OAAQ2sC,EAAe3sC,QAC5EokC,GAAYziC,KAAK6nC,eAAgB7nC,KAAKkrC,uBAGtClrC,KAAKgrC,eAAiBhrC,KAAK6nC,oBAAiBniC,CAEpD,CAjFU,CAkFd,CACAulC,6BACI,GAAKjrC,KAAKqF,SACNyB,EAAS9G,KAAKqF,OAAOg2B,gBACrBl0B,EAAenH,KAAKqF,OAAOg2B,cAE/B,OAAKr7B,KAAKqF,OAAOwiC,gBAAkB7nC,KAAKqF,OAAOwlC,cAC3C7qC,KAAKqF,OAAOE,OACLvF,KAAKqF,OAGLrF,KAAKqF,OAAO4lC,4BAE3B,CACAtE,iBACI,IAAIt4B,EACJ,MAAM,kBAAEw3B,EAAiB,iBAAE5I,GAAqBj9B,KAChDA,KAAK6lC,kBAAoB7lC,KAAKi9B,kBAAmB,EACjD,MAAMwG,EAAOzjC,KAAK8qC,UACZM,EAAWvhC,QAAQ7J,KAAKykC,eAAiBzkC,OAASyjC,EACxD,IAAI4H,GAAU,EAKd,GAJIxF,IACAwF,GAAU,GACVD,GAAYnO,IACZoO,GAAU,GACVA,EACA,OACJ,MAAM,OAAE9lC,EAAM,SAAE8jB,GAAarpB,KAAKzB,QAWlC,GANAyB,KAAK4lC,gBAAkB/7B,SAAgC,QAAtBwE,EAAKrO,KAAKqF,cAA2B,IAAPgJ,OAAgB,EAASA,EAAGu3B,kBACvF5lC,KAAK2b,kBACL3b,KAAKsrC,kBACJtrC,KAAK4lC,kBACN5lC,KAAK6qC,YAAc7qC,KAAK6nC,oBAAiBniC,IAExC1F,KAAKuF,SAAYA,IAAU8jB,EAC5B,OAKJoZ,GAAYziC,KAAKypC,gBAAiBzpC,KAAKuF,OAAO4b,WlG/rB1D,SAAyBrZ,EAAKugB,EAAWkjB,GAAsC,IAA5BC,EAAqB,UAAH,8CACjE,IAAIn9B,EAAIC,EACR,MAAMm9B,EAAaF,EAAS9oC,OAC5B,IAAKgpC,EACD,OAGJ,IAAIpkB,EACAjlB,EAFJimB,EAAUvqB,EAAIuqB,EAAUtqB,EAAI,EAG5B,IAAK,IAAI4E,EAAI,EAAGA,EAAI8oC,EAAY9oC,IAC5B0kB,EAAOkkB,EAAS5oC,GAChBP,EAAQilB,EAAKiB,gBACuH,cAAjD,QAA7Eha,EAA8B,QAAxBD,EAAKgZ,EAAKve,gBAA6B,IAAPuF,OAAgB,EAASA,EAAGwW,aAA0B,IAAPvW,OAAgB,EAASA,EAAGuqB,WAEnH2S,GACAnkB,EAAK9oB,QAAQy/B,cACb3W,EAAKpE,QACLoE,IAASA,EAAKlE,MACdxa,GAAab,EAAK,CACdhK,GAAIupB,EAAKpE,OAAOniB,OAAOhD,EACvBC,GAAIspB,EAAKpE,OAAOniB,OAAO/C,IAG3BqE,IAEAimB,EAAUvqB,GAAKsE,EAAMtE,EAAE+G,MACvBwjB,EAAUtqB,GAAKqE,EAAMrE,EAAE8G,MAEvBgD,GAAcC,EAAK1F,IAEnBopC,GAAsBvkC,EAAaogB,EAAKgU,eACxC1yB,GAAab,EAAKuf,EAAKgU,eAO/BhT,EAAUvqB,EAAIiK,GAAcsgB,EAAUvqB,GACtCuqB,EAAUtqB,EAAIgK,GAAcsgB,EAAUtqB,EAC1C,CkG4pBY2tC,CAAgB1rC,KAAKypC,gBAAiBzpC,KAAKqoB,UAAWroB,KAAKgnC,KAAMoE,GACjE,MAAM,OAAE/sC,GAAWolC,EACnB,IAAKplC,EACD,OACC2B,KAAKsoB,kBACNtoB,KAAKsoB,gBtD3uBK,CACtBxqB,EAP0B,CAC1BiH,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,GAIb7G,EAR0B,CAC1BgH,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,IsD8uBD5E,KAAK2rC,6BtD5uBK,CACtB7tC,EAP0B,CAC1BiH,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,GAIb7G,EAR0B,CAC1BgH,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,KsDgvBL,MAAMgnC,EAAiB5rC,KAAKqoB,UAAUvqB,EAChC+tC,EAAiB7rC,KAAKqoB,UAAUtqB,EAChC+tC,EAA0B9rC,KAAK+rC,oBAUrC/mC,EAAahF,KAAKsoB,gBAAiBtoB,KAAKypC,gBAAiBprC,EAAQ2B,KAAKq7B,cACtEr7B,KAAK+rC,oBAAsBpH,GAAyB3kC,KAAKsoB,gBAAiBtoB,KAAKqoB,WAC3EroB,KAAK+rC,sBAAwBD,GAC7B9rC,KAAKqoB,UAAUvqB,IAAM8tC,GACrB5rC,KAAKqoB,UAAUtqB,IAAM8tC,IACrB7rC,KAAK4mC,cAAe,EACpB5mC,KAAKy7B,iBACLz7B,KAAKknC,gBAAgB,mBAAoB7oC,GAEjD,CACAimC,OACItkC,KAAK6mC,WAAY,CAErB,CACA/C,OACI9jC,KAAK6mC,WAAY,CAErB,CACApL,iBAAiC,IAAlBuQ,IAAY,UAAH,+CACpB,IAAI39B,EAAIC,EAAI4nB,EACkC,QAA7C5nB,GAAMD,EAAKrO,KAAKzB,SAASk9B,sBAAmC,IAAPntB,GAAyBA,EAAGlE,KAAKiE,GACvF29B,IAAyC,QAA1B9V,EAAKl2B,KAAKoqB,kBAA+B,IAAP8L,GAAyBA,EAAGuF,kBACzEz7B,KAAKykC,eAAiBzkC,KAAKykC,aAAa37B,WACxC9I,KAAKykC,kBAAe/+B,EAE5B,CACA2iC,mBAAmBjmC,GAA6C,IAAtCgmC,EAA+B,UAAH,8CAClD,IAAI/5B,EAAIC,EACR,MAAM21B,EAAWjkC,KAAKikC,SAChBgI,GAAqC,OAAbhI,QAAkC,IAAbA,OAAsB,EAASA,EAAS5I,eAAiB,CAAC,EACvG6Q,EAAc,IAAKlsC,KAAKq7B,cACxBwP,EtDzxBQ,CACtB/sC,EAP0B,CAC1BiH,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,GAIb7G,EAR0B,CAC1BgH,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,IsD4xBL5E,KAAK6nC,eAAiB7nC,KAAKkrC,0BAAuBxlC,EAClD1F,KAAK+qC,gCAAkC3C,EACvC,MAAM+D,EtDvxBM,CACpBruC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsDyxBvB+nC,GAAwC,OAAbnI,QAAkC,IAAbA,OAAsB,EAASA,EAASv/B,WAAoC,QAAtB2J,EAAKrO,KAAKuF,cAA2B,IAAP8I,OAAgB,EAASA,EAAG3J,QAChK2nC,IAA4C,QAA1B/9B,EAAKtO,KAAKoqB,kBAA+B,IAAP9b,OAAgB,EAASA,EAAG+b,QAAQ5nB,SAAW,IAAM,EACzG6pC,EAAyBziC,QAAQuiC,IAClCC,IAC0B,IAA3BrsC,KAAKzB,QAAQ8lC,YACZrkC,KAAKgnC,KAAK9xB,KAAKq3B,KACpBvsC,KAAK8mC,kBAAoB,EACzB9mC,KAAKwsC,eAAkBhoB,IACnB,IAAInW,EACJ,MAAMxK,EAAW2gB,EAAS,IAmd1C,IAAgBtW,EAAQpK,EAAMC,EAAIuF,EAldlBmjC,GAAa5B,EAAY/sC,EAAGsE,EAAMtE,EAAG+F,GACrC4oC,GAAa5B,EAAY9sC,EAAGqE,EAAMrE,EAAG8F,GACrC7D,KAAK4qC,eAAeC,GAChB7qC,KAAK6nC,gBACL7nC,KAAKkrC,sBACLlrC,KAAKuF,SAC2B,QAA9B8I,EAAKrO,KAAKgrC,sBAAmC,IAAP38B,OAAgB,EAASA,EAAG9I,UACpEC,EAAqB2mC,EAAgBnsC,KAAKuF,OAAO4b,UAAWnhB,KAAKgrC,eAAezlC,OAAO4b,WA2c3FjT,EA1cWlO,KAAK6nC,eA0cR/jC,EA1cwB9D,KAAKkrC,qBA0cvBnnC,EA1c6CooC,EA0czC7iC,EA1cyDzF,EA2cvF6oC,GAAQx+B,EAAOpQ,EAAGgG,EAAKhG,EAAGiG,EAAGjG,EAAGwL,GAChCojC,GAAQx+B,EAAOnQ,EAAG+F,EAAK/F,EAAGgG,EAAGhG,EAAGuL,IA1chB8iC,IACApsC,KAAKkkC,gBAAkBgI,ER9yB3C,SAAmB7tC,EAAQsuC,EAAQlJ,EAAM5/B,EAAUyoC,EAAwBD,GACnEC,GACAjuC,EAAOqe,QAAUxY,EAAI,OAEJwB,IAAjB+9B,EAAK/mB,QAAwB+mB,EAAK/mB,QAAU,EAAG0lB,GAAgBv+B,IAC/DxF,EAAOuuC,YAAc1oC,OAAuBwB,IAAnBinC,EAAOjwB,QAAwBiwB,EAAOjwB,QAAU,EAAG,EAAG4lB,GAAiBz+B,KAE3FwoC,IACLhuC,EAAOqe,QAAUxY,OAAuBwB,IAAnBinC,EAAOjwB,QAAwBiwB,EAAOjwB,QAAU,OAAoBhX,IAAjB+9B,EAAK/mB,QAAwB+mB,EAAK/mB,QAAU,EAAG7Y,IAK3H,IAAK,IAAIlB,EAAI,EAAGA,EAAIo/B,GAAYp/B,IAAK,CACjC,MAAMkqC,EAAe,SAAQ/K,GAAQn/B,WACrC,IAAImqC,EAAe5K,GAAUyK,EAAQE,GACjCE,EAAa7K,GAAUuB,EAAMoJ,QACZnnC,IAAjBonC,QAA6CpnC,IAAfqnC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA9K,GAAK6K,KAAkB7K,GAAK8K,IAE5B1uC,EAAOwuC,GAAentC,KAAK2E,IAAIH,EAAI89B,GAAS8K,GAAe9K,GAAS+K,GAAalpC,GAAW,IACxFuI,GAAAA,GAAAA,KAAa2gC,IAAe3gC,GAAAA,GAAAA,KAAa0gC,MACzCzuC,EAAOwuC,IAAgB,MAI3BxuC,EAAOwuC,GAAeE,EAE9B,EAIIJ,EAAOtlC,QAAUo8B,EAAKp8B,UACtBhJ,EAAOgJ,OAASnD,EAAIyoC,EAAOtlC,QAAU,EAAGo8B,EAAKp8B,QAAU,EAAGxD,GAElE,CQuwBoBmpC,CAAUd,EAAaD,EAAsBjsC,KAAKq7B,aAAcx3B,EAAUyoC,EAAwBD,IAEtGrsC,KAAKmjB,KAAKmmB,2BACVtpC,KAAKy7B,iBACLz7B,KAAK8mC,kBAAoBjjC,CAAQ,EAErC7D,KAAKwsC,eAAe,EACxB,CACA1wB,eAAevd,GACX,IAAI8P,EAAIC,EACRtO,KAAKknC,gBAAgB,kBACY,QAAhC74B,EAAKrO,KAAK2b,wBAAqC,IAAPtN,GAAyBA,EAAGsJ,OACjE3X,KAAKykC,eACyC,QAA7Cn2B,EAAKtO,KAAKykC,aAAa9oB,wBAAqC,IAAPrN,GAAyBA,EAAGqJ,QAElF3X,KAAKsrC,mBACLppC,EAAAA,GAAAA,OAAkBlC,KAAKsrC,kBACvBtrC,KAAKsrC,sBAAmB5lC,GAO5B1F,KAAKsrC,iBAAmBhqC,EAAAA,GAAAA,QAAY,KAChCuoB,GAAAA,EAAAA,wBAA+C,EAC/C7pB,KAAK2b,iBCpzBrB,SAAiB7X,EAAMC,GAAqB,IAAjB6a,EAAa,UAAH,6CAAG,CAAC,EACrC,MAAM5a,GAAQipB,EAAAA,GAAAA,GAAcnpB,GAAQA,GAAO0hB,EAAAA,GAAAA,GAAY1hB,GAEvD,OADAE,EAAM0T,MAAM2H,GAA2B,GAAIrb,EAAOD,EAAI6a,IAC/C,CACHjH,KAAM,IAAM3T,EAAM2T,OAClBs1B,YAAa,IAAMjpC,EAAMipC,cAEjC,CD6yBwCr1B,CAAQ,EAxzBxB,IAwzB4C,IAC7CrZ,EACHia,SAAWgM,IACP,IAAInW,EACJrO,KAAKwsC,eAAehoB,GACQ,QAA3BnW,EAAK9P,EAAQia,gBAA6B,IAAPnK,GAAyBA,EAAGjE,KAAK7L,EAASimB,EAAO,EAEzFlM,WAAY,KACR,IAAIjK,EAC0B,QAA7BA,EAAK9P,EAAQ+Z,kBAA+B,IAAPjK,GAAyBA,EAAGjE,KAAK7L,GACvEyB,KAAKktC,mBAAmB,IAG5BltC,KAAKykC,eACLzkC,KAAKykC,aAAa9oB,iBAAmB3b,KAAK2b,kBAE9C3b,KAAKsrC,sBAAmB5lC,CAAS,GAEzC,CACAwnC,oBACI,IAAI7+B,EACArO,KAAKykC,eACLzkC,KAAKykC,aAAa9oB,sBAAmBjW,EACrC1F,KAAKykC,aAAaT,qBAAkBt+B,GAEb,QAA1B2I,EAAKrO,KAAKoqB,kBAA+B,IAAP/b,GAAyBA,EAAGk2B,wBAC/DvkC,KAAKykC,aACDzkC,KAAK2b,iBACD3b,KAAKkkC,qBACDx+B,EACZ1F,KAAKknC,gBAAgB,oBACzB,CACAM,kBACI,IAAIn5B,EACArO,KAAK2b,mBAC0B,QAA9BtN,EAAKrO,KAAKwsC,sBAAmC,IAAPn+B,GAAyBA,EAAGjE,KAAKpK,KA31BhE,KA41BRA,KAAK2b,iBAAiBhE,QAE1B3X,KAAKktC,mBACT,CACAC,0BACI,MAAM1J,EAAOzjC,KAAK8qC,UAClB,IAAI,qBAAEK,EAAoB,OAAE9sC,EAAM,OAAEkH,EAAM,aAAE81B,GAAiBoI,EAC7D,GAAK0H,GAAyB9sC,GAAWkH,EAAzC,CAOA,GAAIvF,OAASyjC,GACTzjC,KAAKuF,QACLA,GACA6nC,GAA0BptC,KAAKzB,QAAQ2/B,cAAel+B,KAAKuF,OAAO4b,UAAW5b,EAAO4b,WAAY,CAChG9iB,EAAS2B,KAAK3B,QtD93BN,CACpBP,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsDg4BzB,MAAMgpC,EAAUlpC,EAAWnE,KAAKuF,OAAO4b,UAAUrjB,GACjDO,EAAOP,EAAEwG,IAAMm/B,EAAKplC,OAAOP,EAAEwG,IAC7BjG,EAAOP,EAAEuG,IAAMhG,EAAOP,EAAEwG,IAAM+oC,EAC9B,MAAMC,EAAUnpC,EAAWnE,KAAKuF,OAAO4b,UAAUpjB,GACjDM,EAAON,EAAEuG,IAAMm/B,EAAKplC,OAAON,EAAEuG,IAC7BjG,EAAON,EAAEsG,IAAMhG,EAAON,EAAEuG,IAAMgpC,CAClC,CACA7K,GAAY0I,EAAsB9sC,GAMlCsK,GAAawiC,EAAsB9P,GAOnCr2B,EAAahF,KAAK2rC,6BAA8B3rC,KAAKypC,gBAAiB0B,EAAsB9P,EA/BlF,CAgCd,CACAoM,mBAAmBpe,EAAUhC,GACzB,IAAIhZ,EAAIC,EAAI4nB,EACPl2B,KAAK+mC,YAAY1sB,IAAIgP,IACtBrpB,KAAK+mC,YAAYjsB,IAAIuO,EAAU,IAAIga,IAEzBrjC,KAAK+mC,YAAY3nB,IAAIiK,GAC7BI,IAAIpC,GACVA,EAAK6C,QAAQ,CACTtL,WAA2D,QAA9CvQ,EAAKgZ,EAAK9oB,QAAQ4/B,8BAA2C,IAAP9vB,OAAgB,EAASA,EAAGuQ,WAC/FilB,sBAAiJ,QAAzH3N,EAAoD,QAA9C5nB,EAAK+Y,EAAK9oB,QAAQ4/B,8BAA2C,IAAP7vB,OAAgB,EAASA,EAAGi/B,mCAAgD,IAAPrX,OAAgB,EAASA,EAAG9rB,KAAKkE,EAAI+Y,IAEtM,CACAkD,SACI,MAAMijB,EAAQxtC,KAAKoqB,WACnB,OAAOojB,GAAQA,EAAM/J,OAASzjC,IAClC,CACA8qC,UACI,IAAIz8B,EACJ,MAAM,SAAEgb,GAAarpB,KAAKzB,QAC1B,OAAO8qB,IAAuC,QAA1Bhb,EAAKrO,KAAKoqB,kBAA+B,IAAP/b,OAAgB,EAASA,EAAGo1B,OAAgBzjC,IACtG,CACAytC,cACI,IAAIp/B,EACJ,MAAM,SAAEgb,GAAarpB,KAAKzB,QAC1B,OAAO8qB,EAAsC,QAA1Bhb,EAAKrO,KAAKoqB,kBAA+B,IAAP/b,OAAgB,EAASA,EAAGm1B,cAAW99B,CAChG,CACA0kB,WACI,MAAM,SAAEf,GAAarpB,KAAKzB,QAC1B,GAAI8qB,EACA,OAAOrpB,KAAKmjB,KAAK4jB,YAAY3nB,IAAIiK,EACzC,CACAa,UAAiE,IAAzD,WAAE+b,EAAU,WAAErnB,EAAU,sBAAEilB,GAA2B,UAAH,6CAAG,CAAC,EAC1D,MAAM2J,EAAQxtC,KAAKoqB,WACfojB,GACAA,EAAMtjB,QAAQlqB,KAAM6jC,GACpBoC,IACAjmC,KAAKsoB,qBAAkB5iB,EACvB1F,KAAKimC,YAAa,GAElBrnB,GACA5e,KAAK4pB,WAAW,CAAEhL,cAC1B,CACAuL,WACI,MAAMqjB,EAAQxtC,KAAKoqB,WACnB,QAAIojB,GACOA,EAAMrjB,SAASnqB,KAK9B,CACA2oC,gBACI,MAAM,cAAEjpB,GAAkB1f,KAAKzB,QAC/B,IAAKmhB,EACD,OAEJ,IAAIguB,GAAY,EAKhB,MAAM,aAAErS,GAAiB3b,EAQzB,IAPI2b,EAAah0B,QACbg0B,EAAa/zB,SACb+zB,EAAa9zB,SACb8zB,EAAa5e,WACbixB,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAIhrC,EAAI,EAAGA,EAAIyiC,GAAc3iC,OAAQE,IAAK,CAC3C,MAAM0F,EAAM,SAAW+8B,GAAcziC,GAEjC04B,EAAahzB,KACbslC,EAAYtlC,GAAOgzB,EAAahzB,GAChCqX,EAAcoZ,eAAezwB,EAAK,GAE1C,CAGkB,OAAlBqX,QAA4C,IAAlBA,GAAoCA,EAAcmC,SAE5E,IAAK,MAAMxZ,KAAOslC,EACdjuB,EAAcoZ,eAAezwB,EAAKslC,EAAYtlC,IAIlDqX,EAAc+b,gBAClB,CACAmS,sBAAoC,IAAhB7M,EAAY,UAAH,6CAAG,CAAC,EAC7B,IAAI1yB,EAAIC,EAAI4nB,EAEZ,MAAM2X,EAAS,CAAC,EAChB,IAAK7tC,KAAK8I,UAAY9I,KAAKgmC,MACvB,OAAO6H,EACX,IAAK7tC,KAAK6mC,UACN,MAAO,CAAEiH,WAAY,UAGrBD,EAAOC,WAAa,GAExB,MAAMlpB,EAA0D,QAArCvW,EAAKrO,KAAKzB,QAAQmhB,qBAAkC,IAAPrR,OAAgB,EAASA,EAAGuR,WAAWgF,kBAC/G,GAAI5kB,KAAKimC,WAQL,OAPAjmC,KAAKimC,YAAa,EAClB4H,EAAOnxB,QAAU,GACjBmxB,EAAOE,eACHC,EAAAA,GAAAA,GAAmBjN,EAAUgN,gBAAkB,GACnDF,EAAOjlC,UAAYgc,EACbA,EAAkB5kB,KAAKq7B,aAAc,IACrC,OACCwS,EAEX,MAAMpK,EAAOzjC,KAAK8qC,UAClB,IAAK9qC,KAAKsoB,kBAAoBtoB,KAAKuF,SAAWk+B,EAAKplC,OAAQ,CACvD,MAAM4vC,EAAc,CAAC,EAerB,OAdIjuC,KAAKzB,QAAQ8qB,WACb4kB,EAAYvxB,aACsBhX,IAA9B1F,KAAKq7B,aAAa3e,QACZ1c,KAAKq7B,aAAa3e,QAClB,EACVuxB,EAAYF,eACRC,EAAAA,GAAAA,GAAmBjN,EAAUgN,gBAAkB,IAEnD/tC,KAAK4mC,eAAiB3/B,EAAajH,KAAKq7B,gBACxC4S,EAAYrlC,UAAYgc,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN5kB,KAAK4mC,cAAe,GAEjBqH,CACX,CACA,MAAMC,EAAiBzK,EAAKS,iBAAmBT,EAAKpI,aACpDr7B,KAAKmtC,0BACLU,EAAOjlC,UAAY+7B,GAAyB3kC,KAAK2rC,6BAA8B3rC,KAAKqoB,UAAW6lB,GAC3FtpB,IACAipB,EAAOjlC,UAAYgc,EAAkBspB,EAAgBL,EAAOjlC,YAEhE,MAAM,EAAE9K,EAAC,EAAEC,GAAMiC,KAAKsoB,gBACtBulB,EAAOM,gBAAmB,GAAa,IAAXrwC,EAAE6G,WAA4B,IAAX5G,EAAE4G,YAC7C8+B,EAAKS,gBAKL2J,EAAOnxB,QACH+mB,IAASzjC,KACiG,QAAnGk2B,EAAuC,QAAjC5nB,EAAK4/B,EAAexxB,eAA4B,IAAPpO,EAAgBA,EAAKtO,KAAKq7B,aAAa3e,eAA4B,IAAPwZ,EAAgBA,EAAK,EACjIl2B,KAAKgkC,gBACDhkC,KAAKq7B,aAAa3e,QAClBwxB,EAAetB,YAO7BiB,EAAOnxB,QACH+mB,IAASzjC,UACwB0F,IAA3BwoC,EAAexxB,QACXwxB,EAAexxB,QACf,QAC2BhX,IAA/BwoC,EAAetB,YACXsB,EAAetB,YACf,EAKlB,IAAK,MAAMvkC,KAAO+lC,GAAAA,EAAiB,CAC/B,QAA4B1oC,IAAxBwoC,EAAe7lC,GACf,SACJ,MAAM,QAAE+e,EAAO,QAAE0D,GAAYsjB,GAAAA,EAAgB/lC,GAOvCgmC,EAAiC,SAArBR,EAAOjlC,UACnBslC,EAAe7lC,GACf+e,EAAQ8mB,EAAe7lC,GAAMo7B,GACnC,GAAI3Y,EAAS,CACT,MAAMwjB,EAAMxjB,EAAQroB,OACpB,IAAK,IAAIE,EAAI,EAAGA,EAAI2rC,EAAK3rC,IACrBkrC,EAAO/iB,EAAQnoB,IAAM0rC,CAE7B,MAEIR,EAAOxlC,GAAOgmC,CAEtB,CAYA,OANIruC,KAAKzB,QAAQ8qB,WACbwkB,EAAOE,cACHtK,IAASzjC,MACHguC,EAAAA,GAAAA,GAAmBjN,EAAUgN,gBAAkB,GAC/C,QAEPF,CACX,CACAzE,gBACIppC,KAAK+jC,WAAa/jC,KAAKikC,cAAWv+B,CACtC,CAEA6oC,YACIvuC,KAAKmjB,KAAKqjB,MAAMla,SAASjF,IAAW,IAAIhZ,EAAI,OAAwC,QAAhCA,EAAKgZ,EAAK1L,wBAAqC,IAAPtN,OAAgB,EAASA,EAAGsJ,MAAM,IAC9H3X,KAAKmjB,KAAKqjB,MAAMla,QAAQyc,IACxB/oC,KAAKmjB,KAAK4jB,YAAYnK,OAC1B,EAER,CACA,SAAS7X,GAAasC,GAClBA,EAAKtC,cACT,CACA,SAASmkB,GAAmB7hB,GACxB,IAAIhZ,EAAIC,EAAI4nB,EACZ,MAAM+N,GAAuC,QAA1B51B,EAAKgZ,EAAK0c,kBAA+B,IAAP11B,OAAgB,EAASA,EAAG41B,WAAa5c,EAAK4c,SACnG,GAAI5c,EAAKkD,UACLlD,EAAK9hB,QACL0+B,GACA5c,EAAK+f,aAAa,aAAc,CAChC,MAAQjmB,UAAW5b,EAAQ8kC,YAAamE,GAAmBnnB,EAAK9hB,QAC1D,cAAE24B,GAAkB7W,EAAK9oB,QACzB6sC,EAAWnH,EAASv/B,SAAW2iB,EAAK9hB,OAAOb,OAG3B,SAAlBw5B,EACA53B,GAAUlC,IACN,MAAMqqC,EAAerD,EACfnH,EAASoG,YAAYjmC,GACrB6/B,EAAS9iB,UAAU/c,GACnB3B,EAAS0B,EAAWsqC,GAC1BA,EAAanqC,IAAMiB,EAAOnB,GAAME,IAChCmqC,EAAapqC,IAAMoqC,EAAanqC,IAAM7B,CAAM,IAG3C2qC,GAA0BlP,EAAe+F,EAAS9iB,UAAW5b,IAClEe,GAAUlC,IACN,MAAMqqC,EAAerD,EACfnH,EAASoG,YAAYjmC,GACrB6/B,EAAS9iB,UAAU/c,GACnB3B,EAAS0B,EAAWoB,EAAOnB,IACjCqqC,EAAapqC,IAAMoqC,EAAanqC,IAAM7B,CAAM,IAGpD,MAAMisC,EtDtpCY,CACtB5wC,EAP0B,CAC1BiH,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,GAIb7G,EAR0B,CAC1BgH,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,IsDypCTI,EAAa0pC,EAAanpC,EAAQ0+B,EAAS9iB,WAC3C,MAAMwtB,EtDxpCY,CACtB7wC,EAP0B,CAC1BiH,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,GAIb7G,EAR0B,CAC1BgH,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,IsD2pCLwmC,EACApmC,EAAa2pC,EAAatnB,EAAKmjB,eAAegE,GAAgB,GAAOvK,EAASoG,aAG9ErlC,EAAa2pC,EAAappC,EAAQ0+B,EAAS9iB,WAE/C,MAAMoE,GAAoB2d,GAAYwL,GACtC,IAAIhH,GAA2B,EAC/B,IAAKrgB,EAAK0c,WAAY,CAClB,MAAMiH,EAAiB3jB,EAAK4jB,6BAK5B,GAAID,IAAmBA,EAAejH,WAAY,CAC9C,MAAQE,SAAU2K,EAAgBrpC,OAAQspC,GAAiB7D,EAC3D,GAAI4D,GAAkBC,EAAc,CAChC,MAAMC,EtDrqCF,CACpBhxC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsDuqCrBmB,EAAqBspC,EAAkB7K,EAAS9iB,UAAWytB,EAAeztB,WAC1E,MAAMgrB,EtDvqCF,CACpBruC,EAFqB,CAAGwG,IAAK,EAAGD,IAAK,GAGrCtG,EAHqB,CAAGuG,IAAK,EAAGD,IAAK,IsDyqCrBmB,EAAqB2mC,EAAgB5mC,EAAQspC,EAAa1tB,WACrDgiB,GAAU2L,EAAkB3C,KAC7BzE,GAA2B,EAEnC,CACJ,CACJ,CACArgB,EAAK6f,gBAAgB,YAAa,CAC9B3hC,SACA0+B,WACA7hC,MAAOusC,EACPD,cACAnpB,mBACAmiB,4BAER,MACSrgB,EAAKkD,WACoC,QAA7C2L,GAAM5nB,EAAK+Y,EAAK9oB,SAASsoB,sBAAmC,IAAPqP,GAAyBA,EAAG9rB,KAAKkE,IAO3F+Y,EAAK9oB,QAAQqgB,gBAAalZ,CAC9B,CACA,SAAS+gC,GAAoBpf,GAKzBA,EAAKwe,oBAAsBxe,EAAKwe,kBAAoBh8B,QAAQwd,EAAKhiB,QAAUgiB,EAAKhiB,OAAOwgC,oBAIvFxe,EAAK4V,mBAAqB5V,EAAK4V,iBAAmBpzB,QAAQwd,EAAKhiB,QAAUgiB,EAAKhiB,OAAO43B,kBACzF,CACA,SAASmM,GAAc/hB,GACnBA,EAAK+hB,eACT,CACA,SAASL,GAAkB1hB,GACvBA,EAAK0hB,mBACT,CACA,SAASE,GAAoB5hB,GACzB,MAAM,cAAE3H,GAAkB2H,EAAK9oB,SACT,OAAlBmhB,QAA4C,IAAlBA,OAA2B,EAASA,EAAcE,WAAWmvB,wBACvFrvB,EAAc4P,OAAO,uBAEzBjI,EAAKqe,gBACT,CACA,SAAS8B,GAAgBngB,GACrBA,EAAKmgB,kBACLngB,EAAKwjB,YAAcxjB,EAAKwgB,eAAiBxgB,EAAKhpB,YAASqH,CAC3D,CACA,SAASghC,GAAmBrf,GACxBA,EAAKqf,oBACT,CACA,SAASC,GAAetf,GACpBA,EAAKsf,gBACT,CACA,SAASgC,GAActhB,GACnBA,EAAKshB,eACT,CACA,SAASU,GAAoBmE,GACzBA,EAAM9I,oBACV,CACA,SAAS+H,GAAav+B,EAAQ9L,EAAOkH,GACjC4E,EAAOnJ,UAAYb,EAAI9B,EAAM2C,UAAW,EAAGuE,GAC3C4E,EAAOrJ,MAAQX,EAAI9B,EAAMyC,MAAO,EAAGyE,GACnC4E,EAAOvJ,OAASvC,EAAMuC,OACtBuJ,EAAOtJ,YAAcxC,EAAMwC,WAC/B,CACA,SAAS8nC,GAAQx+B,EAAQpK,EAAMC,EAAIuF,GAC/B4E,EAAO5J,IAAMJ,EAAIJ,EAAKQ,IAAKP,EAAGO,IAAKgF,GACnC4E,EAAO7J,IAAMH,EAAIJ,EAAKO,IAAKN,EAAGM,IAAKiF,EACvC,CAKA,SAASijC,GAAoBllB,GACzB,OAAQA,EAAK6c,sBAAwDx+B,IAArC2hB,EAAK6c,gBAAgB0I,WACzD,CACA,MAAM7E,GAA0B,CAC5Bn1B,SAAU,IACVtD,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAAS05B,GAAe3hB,EAAMse,GAK1B,IAAIqJ,EAAa3nB,EAAKlE,KACtB,IAAK,IAAIxgB,EAAI0kB,EAAK2f,KAAKvkC,OAAS,EAAGE,GAAK,EAAGA,IACvC,GAAIkH,QAAQwd,EAAK2f,KAAKrkC,GAAGmG,UAAW,CAChCkmC,EAAa3nB,EAAK2f,KAAKrkC,GACvB,KACJ,CAEJ,MACM7D,GADgBkwC,GAAcA,IAAe3nB,EAAKlE,KAAO6rB,EAAWlmC,SAAW6qB,UACvDsb,cAAe,wBAAuBtJ,OAChE7mC,GACAuoB,EAAK2U,MAAMl9B,GAAS,EAC5B,CACA,SAASsrC,GAAUhmC,GACfA,EAAKE,IAAM5E,KAAKsL,MAAM5G,EAAKE,KAC3BF,EAAKC,IAAM3E,KAAKsL,MAAM5G,EAAKC,IAC/B,CAKA,SAAS+oC,GAA0BlP,EAAe+F,EAAU1+B,GACxD,MAA0B,aAAlB24B,GACe,oBAAlBA,IACI35B,EAAO6+B,GAAYa,GAAWb,GAAY79B,GAAS,GAChE,CEpyCA,MAAM2pC,GAAyB7J,GAAqB,CAChDC,qBAAsB,CAAC1mC,EAAK0wB,IAAWlxB,EAAYQ,EAAK,SAAU0wB,GAClEkW,cAAe,KAAM,CACjB1nC,EAAG61B,SAASwb,gBAAgBC,YAAczb,SAAS0b,KAAKD,WACxDrxC,EAAG41B,SAASwb,gBAAgBG,WAAa3b,SAAS0b,KAAKC,YAE3D7J,kBAAmB,KAAM,ICNvB1iB,GAAqB,CACvBhkB,aAAS2G,GCIP6pC,GAAS,IACR7N,MACAl+B,MACA4nB,GACHokB,0BDNuBnK,GAAqB,CAC5CG,cAAgB18B,IAAQ,CACpBhL,EAAGgL,EAASsmC,WACZrxC,EAAG+K,EAASwmC,YAEhB/J,cAAe,KACX,IAAKxiB,GAAmBhkB,QAAS,CAC7B,MAAM0wC,EAAe,IAAIP,GAAuB,EAAG,CAAC,GACpDO,EAAazT,MAAMh6B,QACnBytC,EAAa7lB,WAAW,CAAEoU,cAAc,IACxCjb,GAAmBhkB,QAAU0wC,CACjC,CACA,OAAO1sB,GAAmBhkB,OAAO,EAErC2mC,eAAgB,CAAC58B,EAAU9E,KACvB8E,EAAS+b,MAAMjc,eAAsBlD,IAAV1B,EAAsBA,EAAQ,MAAM,EAEnEyhC,kBAAoB38B,GAAae,QAAuD,UAA/C7H,OAAOgmB,iBAAiBlf,GAAU4mC,Y","sources":["../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name, value) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        const sampledTime = performance.now();\n        /**\n         * Resync handoff animation with optimised animation.\n         *\n         * This step would be unnecessary if we triggered animateChanges() in useEffect,\n         * but due to potential hydration errors we currently fire them in useLayoutEffect.\n         *\n         * By the time we're safely ready to cancel the optimised WAAPI animation,\n         * the main thread might have been blocked and desynced the two animations.\n         *\n         * Here, we resync the two animations before the optimised WAAPI animation is cancelled.\n         */\n        sync.update(() => {\n            if (value.animation) {\n                value.animation.currentTime = performance.now() - sampledTime;\n            }\n        });\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            MotionAppearAnimations.delete(animationId);\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key, value);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.4.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.4.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { domAnimation } from './features-animation.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layoutFeatures,\n    projectionNodeConstructor: HTMLProjectionNode,\n};\n\nexport { domMax };\n"],"names":["isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","x","y","addPointerInfo","handler","secondsToMilliseconds","seconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","useDomEvent","ref","useEffect","element","current","addPointerEvent","usePointerEvent","combineFunctions","a","b","v","pipe","transformers","reduce","distance","Math","abs","PanSession","constructor","handlers","transformPagePoint","this","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","distance2D","offset","timestamp","frameData","push","onStart","onMove","handlePointerMove","transformPoint","sync","handlePointerUp","end","onEnd","onSessionEnd","panInfo","type","initialInfo","onSessionStart","removeListeners","window","updateHandlers","cancelSync","subtractPoint","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","length","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","name","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","progress","from","to","value","toFromDifference","mix","calcLength","axis","max","min","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","undefined","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","AnimationType","eachAxis","callback","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","key","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","mirrorEasing","easing","p","reverseEasing","easeIn","easeOut","easeInOut","isColorString","testProp","Boolean","isString","singleColorRegex","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","c","alpha","match","floatRegex","parseFloat","rgbUnit","number","round","clamp","clampRgbUnit","rgba","test","parse","red","green","blue","alpha$1","sanitize","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","percent","color","hueToRgb","q","t","mixLinearColor","fromExpo","colorTypes","asRGBA","find","invariant","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","colorRegex","replace","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","Array","isArray","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","definition","x1","y1","x2","y2","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","state","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","splice","next","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","maxDuration","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","restSpeed","restDelta","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","velocityPerSecond","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","start","stop","animate","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","animation","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","sampleAnimation","pregeneratedKeyframes","fill","iterations","direction","animateStyle","owner","onfinish","set","getFinalKeyframe","setWithVelocity","cancel","timeout","performance","now","checkElapsed","createInstantAnimation","setValue","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","prev","checkBoundary","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","rotateZ","opacity","backgroundColor","default","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","split","unit","defaultValue","functionRegex","filter","functions","join","defaultValueTypes","numberValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","transition","isZero","indexOf","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","get","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","visualElement","HTMLElement","getProps","acceleratedAnimation","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","isPresent","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","animationState","setActive","Drag","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","Promise","all","then","dragKey","toUpperCase","externalMotionValue","getValue","initial","scalePositionWithinConstraints","boxProgress","latest","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","props","useUnmountEffect","makeRenderlessComponent","hook","pan","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","useRef","useContext","MotionConfigContext","dragControls","groupDragControls","useConstant","subscribe","usePresence","context","PresenceContext","onExitComplete","register","id","useId","pixelsToPercent","pixels","correctBorderRadius","correct","node","px","isCSSVariable","cssVariableRegex","parseCSSVariable","exec","token","fallback","getVariableValue","depth","resolved","getComputedStyle","getPropertyValue","trim","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","didUpdate","safeToRemove","setOptions","globalProjectionState","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","measureLayout","LayoutGroupContext","SwitchLayoutGroupContext","shallowCompare","prevLength","isZeroValueString","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","valueTypes","findValueType","resolveVariant","custom","resolveVariantFromProps","forEach","getCurrent","setMotionValue","hasValue","addValue","setTarget","transitionEnd","makeTargetAnimatable","resolveFinalValueInKeyframes","getOriginFromTransition","isWillChangeMotionValue","isMotionValue","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","appearStoreId","transformProps","sampledTime","delete","optimizedAppearDataAttribute","camelToDash","animateVariant","variant","transitionOverride","getAnimation","animateTarget","resolve","getChildAnimations","variantChildren","size","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","valueTarget","shouldBlockAnimation","hasAnimated","appearId","shouldReduceMotion","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","exit","presenceContext","createHoverEvent","applyVariants","isNodeOrChild","parentElement","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","useIntersectionObserver","shouldObserve","margin","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","requestAnimationFrame","gestureAnimations","inView","whileInView","viewport","tap","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","onPointerUp","_c","_d","onPointerCancel","startPress","useCallback","latestProps","focus","whileFocus","onFocus","onBlur","hover","onHoverStart","onHoverEnd","whileHover","useMemo","positionalKeys","isPositionalKey","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","removeNonTranslationalTransform","removedTransforms","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","isBrowser","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","featureDefinitions","numFeatures","propEventHandlers","VisualElement","reducedMotionConfig","visualState","children","isVariantNode","isControllingVariants","Map","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","scheduleRender","baseTarget","initialValues","initialMotionValues","scrapeMotionValuesFromProps","_props","_prevProps","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","setProps","unmount","clear","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","loadFeatures","isStrict","preloadedFeatures","projectionId","ProjectionNodeConstructor","initialLayoutGroupConfig","renderedProps","features","isEnabled","Component","createElement","layoutScroll","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getClosestVariantNode","numVariantProps","variantProps","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","SubscriptionManager","args","DOMVisualElement","compareDocumentPosition","vars","isMounted","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","buildHTMLStyles","childSubscription","textContent","styleProp","renderHTML","SVGVisualElement","super","arguments","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","tagName","domAnimation","renderer","isSVGComponent","enableHardwareAcceleration","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","getProjectionStyles","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","transformOrigin","scaleCorrectors","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","domMax","projectionNodeConstructor","documentNode","position"],"sourceRoot":""}